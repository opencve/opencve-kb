{
  "cve": "CVE-2020-5216",
  "mitre": {
    "cpes": [],
    "created": "2020-01-23T02:30:15+00:00",
    "description": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.9.0, 5.2.0, and 6.3.0. If user-supplied input was passed into append/override_content_security_policy_directives, a newline could be injected leading to limited header injection. Upon seeing a newline in the header, rails will silently create a new Content-Security-Policy header with the remaining value of the original string. It will continue to create new headers for each newline. This has been fixed in 6.3.0, 5.2.0, and 3.9.0.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.4,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2020/5xxx/CVE-2020-5216.json",
    "references": [
      "https://github.com/twitter/secure_headers/commit/301695706f6a70517c2a90c6ef9b32178440a2d0",
      "https://github.com/twitter/secure_headers/security/advisories/GHSA-w978-rmpf-qmwg"
    ],
    "title": "Limited header injection when using dynamic overrides with user input in RubyGems secure_headers",
    "updated": "2024-08-04T08:22:08.681000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-113"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:twitter:secure_headers:*:*:*:*:*:ruby:*:*"
    ],
    "created": "2020-01-23T03:15:10.683000+00:00",
    "description": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.9.0, 5.2.0, and 6.3.0. If user-supplied input was passed into append/override_content_security_policy_directives, a newline could be injected leading to limited header injection. Upon seeing a newline in the header, rails will silently create a new Content-Security-Policy header with the remaining value of the original string. It will continue to create new headers for each newline. This has been fixed in 6.3.0, 5.2.0, and 3.9.0.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2020/CVE-2020-5216.json",
    "references": [
      "https://github.com/twitter/secure_headers/commit/301695706f6a70517c2a90c6ef9b32178440a2d0",
      "https://github.com/twitter/secure_headers/security/advisories/GHSA-w978-rmpf-qmwg"
    ],
    "title": null,
    "updated": "2020-02-18T14:58:04.207000+00:00",
    "vendors": [
      "twitter",
      "twitter$PRODUCT$secure_headers"
    ],
    "weaknesses": [
      "CWE-113",
      "CWE-74"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:satellite:6.8::el7",
        "cpe:/a:redhat:satellite_capsule:6.8::el7",
        "cpe:2.3:a:twitter:secure_headers:*:*:*:*:*:ruby:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2020-01-22T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.9.0, 5.2.0, and 6.3.0. If user-supplied input was passed into append/override_content_security_policy_directives, a newline could be injected leading to limited header injection. Upon seeing a newline in the header, rails will silently create a new Content-Security-Policy header with the remaining value of the original string. It will continue to create new headers for each newline. This has been fixed in 6.3.0, 5.2.0, and 3.9.0.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.0,
          "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.4,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/twitter/secure_headers/commit/301695706f6a70517c2a90c6ef9b32178440a2d0",
        "https://github.com/twitter/secure_headers/security/advisories/GHSA-w978-rmpf-qmwg",
        "https://nvd.nist.gov/vuln/detail/CVE-2020-5216",
        "https://www.cve.org/CVERecord?id=CVE-2020-5216"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "Limited header injection when using dynamic overrides with user input in RubyGems secure_headers",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T08:22:08.681000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$satellite",
        "redhat$PRODUCT$satellite_capsule",
        "twitter",
        "twitter$PRODUCT$secure_headers"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-113",
        "CWE-284",
        "CWE-74"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:satellite:6.8::el7",
      "cpe:/a:redhat:satellite_capsule:6.8::el7"
    ],
    "created": "2020-01-22T00:00:00+00:00",
    "description": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.9.0, 5.2.0, and 6.3.0. If user-supplied input was passed into append/override_content_security_policy_directives, a newline could be injected leading to limited header injection. Upon seeing a newline in the header, rails will silently create a new Content-Security-Policy header with the remaining value of the original string. It will continue to create new headers for each newline. This has been fixed in 6.3.0, 5.2.0, and 3.9.0.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:N"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2020/CVE-2020-5216.json",
    "references": [
      "https://github.com/twitter/secure_headers/security/advisories/GHSA-w978-rmpf-qmwg",
      "https://nvd.nist.gov/vuln/detail/CVE-2020-5216",
      "https://www.cve.org/CVERecord?id=CVE-2020-5216"
    ],
    "title": "rubygem-secure_headers: limited header injection when using dynamic overrides with user input",
    "updated": "2020-01-22T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$satellite",
      "redhat$PRODUCT$satellite_capsule"
    ],
    "weaknesses": [
      "CWE-113",
      "CWE-284"
    ]
  }
}