{
  "cve": "CVE-2017-12581",
  "mitre": {
    "cpes": [],
    "created": "2017-08-06T02:00:00+00:00",
    "description": "GitHub Electron before 1.6.8 allows remote command execution because of a nodeIntegration bypass vulnerability. This also affects all applications that bundle Electron code equivalent to 1.6.8 or earlier. Bypassing the Same Origin Policy (SOP) is a precondition; however, recent Electron versions do not have strict SOP enforcement. Combining an SOP bypass with a privileged URL internally used by Electron, it was possible to execute native Node.js primitives in order to run OS commands on the user's host. Specifically, a chrome-devtools://devtools/bundled/inspector.html window could be used to eval a Node.js child_process.execFile API call.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2017/12xxx/CVE-2017-12581.json",
    "references": [
      "https://blog.doyensec.com/2017/08/03/electron-framework-security.html",
      "https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf"
    ],
    "title": null,
    "updated": "2024-08-05T18:43:56.211000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:electron:electron:*:*:*:*:*:*:*:*"
    ],
    "created": "2017-08-06T02:29:00.227000+00:00",
    "description": "GitHub Electron before 1.6.8 allows remote command execution because of a nodeIntegration bypass vulnerability. This also affects all applications that bundle Electron code equivalent to 1.6.8 or earlier. Bypassing the Same Origin Policy (SOP) is a precondition; however, recent Electron versions do not have strict SOP enforcement. Combining an SOP bypass with a privileged URL internally used by Electron, it was possible to execute native Node.js primitives in order to run OS commands on the user's host. Specifically, a chrome-devtools://devtools/bundled/inspector.html window could be used to eval a Node.js child_process.execFile API call.",
    "metrics": {
      "cvssV2_0": {
        "score": 9.3,
        "vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C"
      },
      "cvssV3_0": {
        "score": 8.1,
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2017/CVE-2017-12581.json",
    "references": [
      "https://blog.doyensec.com/2017/08/03/electron-framework-security.html",
      "https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf"
    ],
    "title": null,
    "updated": "2017-08-14T12:04:27.033000+00:00",
    "vendors": [
      "electron",
      "electron$PRODUCT$electron"
    ],
    "weaknesses": [
      "CWE-78"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:electron:electron:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2017-08-06T02:00:00+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "GitHub Electron before 1.6.8 allows remote command execution because of a nodeIntegration bypass vulnerability. This also affects all applications that bundle Electron code equivalent to 1.6.8 or earlier. Bypassing the Same Origin Policy (SOP) is a precondition; however, recent Electron versions do not have strict SOP enforcement. Combining an SOP bypass with a privileged URL internally used by Electron, it was possible to execute native Node.js primitives in order to run OS commands on the user's host. Specifically, a chrome-devtools://devtools/bundled/inspector.html window could be used to eval a Node.js child_process.execFile API call.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 9.3,
          "vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 8.1,
          "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://blog.doyensec.com/2017/08/03/electron-framework-security.html",
        "https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2024-08-05T18:43:56.211000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "electron",
        "electron$PRODUCT$electron"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-78"
      ],
      "providers": [
        "nvd"
      ]
    }
  }
}