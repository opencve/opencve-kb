{
  "cve": "CVE-2022-23639",
  "mitre": {
    "cpes": [],
    "created": "2022-02-15T18:20:10+00:00",
    "description": "crossbeam-utils provides atomics, synchronization primitives, scoped threads, and other utilities for concurrent programming in Rust. crossbeam-utils prior to version 0.8.7 incorrectly assumed that the alignment of `{i,u}64` was always the same as `Atomic{I,U}64`. However, the alignment of `{i,u}64` on a 32-bit target can be smaller than `Atomic{I,U}64`. This can cause unaligned memory accesses and data race. Crates using `fetch_*` methods with `AtomicCell<{i,u}64>` are affected by this issue. 32-bit targets without `Atomic{I,U}64` and 64-bit targets are not affected by this issue. This has been fixed in crossbeam-utils 0.8.7. There are currently no known workarounds.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.1,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/23xxx/CVE-2022-23639.json",
    "references": [
      "https://github.com/crossbeam-rs/crossbeam/pull/781",
      "https://github.com/crossbeam-rs/crossbeam/releases/tag/crossbeam-utils-0.8.7",
      "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-qc84-gqf4-9926"
    ],
    "title": "Improper Restriction of Operations within the Bounds of a Memory Buffer and Race Condition in crossbeam-utils",
    "updated": "2024-08-03T03:51:44.181000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-362"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:crossbeam_project:crossbeam:*:*:*:*:*:rust:*:*"
    ],
    "created": "2022-02-15T19:15:08.340000+00:00",
    "description": "crossbeam-utils provides atomics, synchronization primitives, scoped threads, and other utilities for concurrent programming in Rust. crossbeam-utils prior to version 0.8.7 incorrectly assumed that the alignment of `{i,u}64` was always the same as `Atomic{I,U}64`. However, the alignment of `{i,u}64` on a 32-bit target can be smaller than `Atomic{I,U}64`. This can cause unaligned memory accesses and data race. Crates using `fetch_*` methods with `AtomicCell<{i,u}64>` are affected by this issue. 32-bit targets without `Atomic{I,U}64` and 64-bit targets are not affected by this issue. This has been fixed in crossbeam-utils 0.8.7. There are currently no known workarounds.",
    "metrics": {
      "cvssV2_0": {
        "score": 6.8,
        "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.1,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-23639.json",
    "references": [
      "https://github.com/crossbeam-rs/crossbeam/pull/781",
      "https://github.com/crossbeam-rs/crossbeam/releases/tag/crossbeam-utils-0.8.7",
      "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-qc84-gqf4-9926"
    ],
    "title": null,
    "updated": "2023-02-10T16:28:40.170000+00:00",
    "vendors": [
      "crossbeam_project",
      "crossbeam_project$PRODUCT$crossbeam"
    ],
    "weaknesses": [
      "CWE-362",
      "NVD-CWE-noinfo"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:crossbeam_project:crossbeam:*:*:*:*:*:rust:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2022-02-15T18:20:10+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "crossbeam-utils provides atomics, synchronization primitives, scoped threads, and other utilities for concurrent programming in Rust. crossbeam-utils prior to version 0.8.7 incorrectly assumed that the alignment of `{i,u}64` was always the same as `Atomic{I,U}64`. However, the alignment of `{i,u}64` on a 32-bit target can be smaller than `Atomic{I,U}64`. This can cause unaligned memory accesses and data race. Crates using `fetch_*` methods with `AtomicCell<{i,u}64>` are affected by this issue. 32-bit targets without `Atomic{I,U}64` and 64-bit targets are not affected by this issue. This has been fixed in crossbeam-utils 0.8.7. There are currently no known workarounds.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 6.8,
          "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 8.1,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/crossbeam-rs/crossbeam/pull/781",
        "https://github.com/crossbeam-rs/crossbeam/releases/tag/crossbeam-utils-0.8.7",
        "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-qc84-gqf4-9926"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Improper Restriction of Operations within the Bounds of a Memory Buffer and Race Condition in crossbeam-utils",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T03:51:44.181000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "crossbeam_project",
        "crossbeam_project$PRODUCT$crossbeam"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-362",
        "NVD-CWE-noinfo"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}