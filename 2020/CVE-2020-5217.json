{
  "cve": "CVE-2020-5217",
  "mitre": {
    "cpes": [],
    "created": "2020-01-23T02:15:17+00:00",
    "description": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.8.0, 5.1.0, and 6.2.0. If user-supplied input was passed into append/override_content_security_policy_directives, a semicolon could be injected leading to directive injection. This could be used to e.g. override a script-src directive. Duplicate directives are ignored and the first one wins. The directives in secure_headers are sorted alphabetically so they pretty much all come before script-src. A previously undefined directive would receive a value even if SecureHeaders::OPT_OUT was supplied. The fixed versions will silently convert the semicolons to spaces and emit a deprecation warning when this happens. This will result in innocuous browser console messages if being exploited/accidentally used. In future releases, we will raise application errors resulting in 500s. Depending on what major version you are using, the fixed versions are 6.2.0, 5.1.0, 3.8.0.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.4,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2020/5xxx/CVE-2020-5217.json",
    "references": [
      "https://github.com/twitter/secure_headers/commit/936a160e3e9659737a9f9eafce13eea36b5c9fa3",
      "https://github.com/twitter/secure_headers/issues/418",
      "https://github.com/twitter/secure_headers/pull/421",
      "https://github.com/twitter/secure_headers/security/advisories/GHSA-xq52-rv6w-397c"
    ],
    "title": "Directive injection when using dynamic overrides with user input in RubyGems secure_headers",
    "updated": "2024-08-04T08:22:08.919000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-95"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:twitter:secure_headers:*:*:*:*:*:ruby:*:*"
    ],
    "created": "2020-01-23T03:15:10.793000+00:00",
    "description": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.8.0, 5.1.0, and 6.2.0. If user-supplied input was passed into append/override_content_security_policy_directives, a semicolon could be injected leading to directive injection. This could be used to e.g. override a script-src directive. Duplicate directives are ignored and the first one wins. The directives in secure_headers are sorted alphabetically so they pretty much all come before script-src. A previously undefined directive would receive a value even if SecureHeaders::OPT_OUT was supplied. The fixed versions will silently convert the semicolons to spaces and emit a deprecation warning when this happens. This will result in innocuous browser console messages if being exploited/accidentally used. In future releases, we will raise application errors resulting in 500s. Depending on what major version you are using, the fixed versions are 6.2.0, 5.1.0, 3.8.0.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2020/CVE-2020-5217.json",
    "references": [
      "https://github.com/twitter/secure_headers/commit/936a160e3e9659737a9f9eafce13eea36b5c9fa3",
      "https://github.com/twitter/secure_headers/issues/418",
      "https://github.com/twitter/secure_headers/pull/421",
      "https://github.com/twitter/secure_headers/security/advisories/GHSA-xq52-rv6w-397c"
    ],
    "title": null,
    "updated": "2020-05-21T13:51:17.810000+00:00",
    "vendors": [
      "twitter",
      "twitter$PRODUCT$secure_headers"
    ],
    "weaknesses": [
      "CWE-74",
      "CWE-95"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:satellite:6.8::el7",
        "cpe:/a:redhat:satellite_capsule:6.8::el7",
        "cpe:2.3:a:twitter:secure_headers:*:*:*:*:*:ruby:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2020-01-22T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.8.0, 5.1.0, and 6.2.0. If user-supplied input was passed into append/override_content_security_policy_directives, a semicolon could be injected leading to directive injection. This could be used to e.g. override a script-src directive. Duplicate directives are ignored and the first one wins. The directives in secure_headers are sorted alphabetically so they pretty much all come before script-src. A previously undefined directive would receive a value even if SecureHeaders::OPT_OUT was supplied. The fixed versions will silently convert the semicolons to spaces and emit a deprecation warning when this happens. This will result in innocuous browser console messages if being exploited/accidentally used. In future releases, we will raise application errors resulting in 500s. Depending on what major version you are using, the fixed versions are 6.2.0, 5.1.0, 3.8.0.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.0,
          "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.4,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/twitter/secure_headers/commit/936a160e3e9659737a9f9eafce13eea36b5c9fa3",
        "https://github.com/twitter/secure_headers/issues/418",
        "https://github.com/twitter/secure_headers/pull/421",
        "https://github.com/twitter/secure_headers/security/advisories/GHSA-xq52-rv6w-397c",
        "https://nvd.nist.gov/vuln/detail/CVE-2020-5217",
        "https://www.cve.org/CVERecord?id=CVE-2020-5217"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "Directive injection when using dynamic overrides with user input in RubyGems secure_headers",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T08:22:08.919000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$satellite",
        "redhat$PRODUCT$satellite_capsule",
        "twitter",
        "twitter$PRODUCT$secure_headers"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-284",
        "CWE-74",
        "CWE-95"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:satellite:6.8::el7",
      "cpe:/a:redhat:satellite_capsule:6.8::el7"
    ],
    "created": "2020-01-22T00:00:00+00:00",
    "description": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.8.0, 5.1.0, and 6.2.0. If user-supplied input was passed into append/override_content_security_policy_directives, a semicolon could be injected leading to directive injection. This could be used to e.g. override a script-src directive. Duplicate directives are ignored and the first one wins. The directives in secure_headers are sorted alphabetically so they pretty much all come before script-src. A previously undefined directive would receive a value even if SecureHeaders::OPT_OUT was supplied. The fixed versions will silently convert the semicolons to spaces and emit a deprecation warning when this happens. This will result in innocuous browser console messages if being exploited/accidentally used. In future releases, we will raise application errors resulting in 500s. Depending on what major version you are using, the fixed versions are 6.2.0, 5.1.0, 3.8.0.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:N"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2020/CVE-2020-5217.json",
    "references": [
      "https://github.com/twitter/secure_headers/security/advisories/GHSA-xq52-rv6w-397c",
      "https://nvd.nist.gov/vuln/detail/CVE-2020-5217",
      "https://www.cve.org/CVERecord?id=CVE-2020-5217"
    ],
    "title": "rubygem-secure_headers: directive injection when using dynamic overrides with user input",
    "updated": "2020-01-22T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$satellite",
      "redhat$PRODUCT$satellite_capsule"
    ],
    "weaknesses": [
      "CWE-284",
      "CWE-95"
    ]
  }
}