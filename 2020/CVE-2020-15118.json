{
  "cve": "CVE-2020-15118",
  "mitre": {
    "cpes": [],
    "created": "2020-07-20T17:50:16+00:00",
    "description": "In Wagtail before versions 2.7.4 and 2.9.3, when a form page type is made available to Wagtail editors through the `wagtail.contrib.forms` app, and the page template is built using Django's standard form rendering helpers such as form.as_p, any HTML tags used within a form field's help text will be rendered unescaped in the page. Allowing HTML within help text is an intentional design decision by Django; however, as a matter of policy Wagtail does not allow editors to insert arbitrary HTML by default, as this could potentially be used to carry out cross-site scripting attacks, including privilege escalation. This functionality should therefore not have been made available to editor-level users. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin. Patched versions have been released as Wagtail 2.7.4 (for the LTS 2.7 branch) and Wagtail 2.9.3 (for the current 2.9 branch). In these versions, help text will be escaped to prevent the inclusion of HTML tags. Site owners who wish to re-enable the use of HTML within help text (and are willing to accept the risk of this being exploited by editors) may set WAGTAILFORMS_HELP_TEXT_ALLOW_HTML = True in their configuration settings. Site owners who are unable to upgrade to the new versions can secure their form page templates by rendering forms field-by-field as per Django's documentation, but omitting the |safe filter when outputting the help text.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.7,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2020/15xxx/CVE-2020-15118.json",
    "references": [
      "https://docs.djangoproject.com/en/3.0/ref/models/fields/#django.db.models.Field.help_text",
      "https://docs.wagtail.io/en/stable/reference/contrib/forms/index.html#usage",
      "https://github.com/wagtail/wagtail/blob/master/docs/releases/2.9.3.rst",
      "https://github.com/wagtail/wagtail/commit/d9a41e7f24d08c024acc9a3094940199df94db34",
      "https://github.com/wagtail/wagtail/security/advisories/GHSA-2473-9hgq-j7xw"
    ],
    "title": "Cross-Site Scripting in Wagtail",
    "updated": "2024-08-04T13:08:21.683000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-79"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:torchbox:wagtail:*:*:*:*:*:*:*:*"
    ],
    "created": "2020-07-20T18:15:12.107000+00:00",
    "description": "In Wagtail before versions 2.7.4 and 2.9.3, when a form page type is made available to Wagtail editors through the `wagtail.contrib.forms` app, and the page template is built using Django's standard form rendering helpers such as form.as_p, any HTML tags used within a form field's help text will be rendered unescaped in the page. Allowing HTML within help text is an intentional design decision by Django; however, as a matter of policy Wagtail does not allow editors to insert arbitrary HTML by default, as this could potentially be used to carry out cross-site scripting attacks, including privilege escalation. This functionality should therefore not have been made available to editor-level users. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin. Patched versions have been released as Wagtail 2.7.4 (for the LTS 2.7 branch) and Wagtail 2.9.3 (for the current 2.9 branch). In these versions, help text will be escaped to prevent the inclusion of HTML tags. Site owners who wish to re-enable the use of HTML within help text (and are willing to accept the risk of this being exploited by editors) may set WAGTAILFORMS_HELP_TEXT_ALLOW_HTML = True in their configuration settings. Site owners who are unable to upgrade to the new versions can secure their form page templates by rendering forms field-by-field as per Django's documentation, but omitting the |safe filter when outputting the help text.",
    "metrics": {
      "cvssV2_0": {
        "score": 3.5,
        "vector": "AV:N/AC:M/Au:S/C:N/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.4,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2020/CVE-2020-15118.json",
    "references": [
      "https://docs.djangoproject.com/en/3.0/ref/models/fields/#django.db.models.Field.help_text",
      "https://docs.wagtail.io/en/stable/reference/contrib/forms/index.html#usage",
      "https://github.com/wagtail/wagtail/blob/master/docs/releases/2.9.3.rst",
      "https://github.com/wagtail/wagtail/commit/d9a41e7f24d08c024acc9a3094940199df94db34",
      "https://github.com/wagtail/wagtail/security/advisories/GHSA-2473-9hgq-j7xw"
    ],
    "title": null,
    "updated": "2020-07-28T12:29:45.730000+00:00",
    "vendors": [
      "torchbox",
      "torchbox$PRODUCT$wagtail"
    ],
    "weaknesses": [
      "CWE-79"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:torchbox:wagtail:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2020-07-20T17:50:16+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "In Wagtail before versions 2.7.4 and 2.9.3, when a form page type is made available to Wagtail editors through the `wagtail.contrib.forms` app, and the page template is built using Django's standard form rendering helpers such as form.as_p, any HTML tags used within a form field's help text will be rendered unescaped in the page. Allowing HTML within help text is an intentional design decision by Django; however, as a matter of policy Wagtail does not allow editors to insert arbitrary HTML by default, as this could potentially be used to carry out cross-site scripting attacks, including privilege escalation. This functionality should therefore not have been made available to editor-level users. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin. Patched versions have been released as Wagtail 2.7.4 (for the LTS 2.7 branch) and Wagtail 2.9.3 (for the current 2.9 branch). In these versions, help text will be escaped to prevent the inclusion of HTML tags. Site owners who wish to re-enable the use of HTML within help text (and are willing to accept the risk of this being exploited by editors) may set WAGTAILFORMS_HELP_TEXT_ALLOW_HTML = True in their configuration settings. Site owners who are unable to upgrade to the new versions can secure their form page templates by rendering forms field-by-field as per Django's documentation, but omitting the |safe filter when outputting the help text.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 3.5,
          "vector": "AV:N/AC:M/Au:S/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.7,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://docs.djangoproject.com/en/3.0/ref/models/fields/#django.db.models.Field.help_text",
        "https://docs.wagtail.io/en/stable/reference/contrib/forms/index.html#usage",
        "https://github.com/wagtail/wagtail/blob/master/docs/releases/2.9.3.rst",
        "https://github.com/wagtail/wagtail/commit/d9a41e7f24d08c024acc9a3094940199df94db34",
        "https://github.com/wagtail/wagtail/security/advisories/GHSA-2473-9hgq-j7xw"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Cross-Site Scripting in Wagtail",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T13:08:21.683000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "torchbox",
        "torchbox$PRODUCT$wagtail"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-79"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}