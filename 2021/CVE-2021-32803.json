{
  "cve": "CVE-2021-32803",
  "mitre": {
    "cpes": [],
    "created": "2021-08-03T19:05:12+00:00",
    "description": "The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.2,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/32xxx/CVE-2021-32803.json",
    "references": [
      "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf",
      "https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
      "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw",
      "https://www.npmjs.com/advisories/1771",
      "https://www.npmjs.com/package/tar",
      "https://www.oracle.com/security-alerts/cpuoct2021.html"
    ],
    "title": "Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning",
    "updated": "2024-08-03T23:33:56.082000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-22"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:oracle:graalvm:20.3.3:*:*:*:enterprise:*:*:*",
      "cpe:2.3:a:oracle:graalvm:21.2.0:*:*:*:enterprise:*:*:*",
      "cpe:2.3:a:siemens:sinec_infrastructure_network_services:*:*:*:*:*:*:*:*",
      "cpe:2.3:a:tar_project:tar:*:*:*:*:*:node.js:*:*"
    ],
    "created": "2021-08-03T19:15:08.297000+00:00",
    "description": "The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.8,
        "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.1,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-32803.json",
    "references": [
      "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf",
      "https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
      "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw",
      "https://www.npmjs.com/advisories/1771",
      "https://www.npmjs.com/package/tar",
      "https://www.oracle.com/security-alerts/cpuoct2021.html"
    ],
    "title": null,
    "updated": "2022-07-02T18:28:32.410000+00:00",
    "vendors": [
      "oracle",
      "oracle$PRODUCT$graalvm",
      "siemens",
      "siemens$PRODUCT$sinec_infrastructure_network_services",
      "tar_project",
      "tar_project$PRODUCT$tar"
    ],
    "weaknesses": [
      "CWE-22",
      "CWE-59"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-19T22:15:00+00:00",
        "data": [
          {
            "details": {
              "added": [],
              "removed": [
                "cpe:/a:redhat:acm:2.4::el8"
              ]
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [],
              "removed": [
                "redhat$PRODUCT$acm"
              ]
            },
            "type": "vendors"
          }
        ],
        "id": "d2cf5c36-a940-47bd-9baa-445edef03e63"
      },
      {
        "created": "2024-09-08T18:30:00+00:00",
        "data": [
          {
            "details": [
              "redhat$PRODUCT$acm"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "cpe:/a:redhat:acm:2.4::el8"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "redhat$PRODUCT$acm"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "8442a44a-5797-4992-9700-bf058f41b91e"
      }
    ],
    "cpes": {
      "data": [
        "cpe:/a:redhat:acm:2.4::el8",
        "cpe:/a:redhat:enterprise_linux:8",
        "cpe:/a:redhat:openshift_data_foundation:4.9::el8",
        "cpe:/a:redhat:rhel_eus:8.1",
        "cpe:/a:redhat:rhel_eus:8.2",
        "cpe:/a:redhat:rhel_software_collections:3::el7",
        "cpe:2.3:a:oracle:graalvm:20.3.3:*:*:*:enterprise:*:*:*",
        "cpe:2.3:a:oracle:graalvm:21.2.0:*:*:*:enterprise:*:*:*",
        "cpe:2.3:a:siemens:sinec_infrastructure_network_services:*:*:*:*:*:*:*:*",
        "cpe:2.3:a:tar_project:tar:*:*:*:*:*:node.js:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2021-08-03T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.8,
          "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 8.2,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf",
        "https://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20",
        "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-32803",
        "https://www.cve.org/CVERecord?id=CVE-2021-32803",
        "https://www.npmjs.com/advisories/1771",
        "https://www.npmjs.com/package/tar",
        "https://www.oracle.com/security-alerts/cpuoct2021.html"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T23:33:56.082000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "oracle",
        "oracle$PRODUCT$graalvm",
        "redhat",
        "redhat$PRODUCT$acm",
        "redhat$PRODUCT$enterprise_linux",
        "redhat$PRODUCT$openshift_data_foundation",
        "redhat$PRODUCT$rhel_eus",
        "redhat$PRODUCT$rhel_software_collections",
        "siemens",
        "siemens$PRODUCT$sinec_infrastructure_network_services",
        "tar_project",
        "tar_project$PRODUCT$tar"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-22",
        "CWE-59"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:acm:2.4::el8",
      "cpe:/a:redhat:enterprise_linux:8",
      "cpe:/a:redhat:openshift_data_foundation:4.9::el8",
      "cpe:/a:redhat:rhel_eus:8.1",
      "cpe:/a:redhat:rhel_eus:8.2",
      "cpe:/a:redhat:rhel_software_collections:3::el7"
    ],
    "created": "2021-08-03T00:00:00+00:00",
    "description": "The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.1,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2021/CVE-2021-32803.json",
    "references": [
      "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-32803",
      "https://www.cve.org/CVERecord?id=CVE-2021-32803"
    ],
    "title": "nodejs-tar: Insufficient symlink protection allowing arbitrary file creation and overwrite",
    "updated": "2021-08-03T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$acm",
      "redhat$PRODUCT$enterprise_linux",
      "redhat$PRODUCT$openshift_data_foundation",
      "redhat$PRODUCT$rhel_eus",
      "redhat$PRODUCT$rhel_software_collections"
    ],
    "weaknesses": [
      "CWE-22"
    ]
  }
}