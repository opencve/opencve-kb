{
  "cve": "CVE-2022-26477",
  "mitre": {
    "cpes": [],
    "created": "2022-06-27T17:15:18+00:00",
    "description": "The Security Team noticed that the termination condition of the for loop in the readExternal method is a controllable variable, which, if tampered with, may lead to CPU exhaustion. As a fix, we added an upper bound and termination condition in the read and write logic. We classify it as a \"low-priority but useful improvement\". SystemDS is a distributed system and needs to serialize/deserialize data but in many code paths (e.g., on Spark broadcast/shuffle or writing to sequence files) the byte stream is anyway protected by additional CRC fingerprints. In this particular case though, the number of decoders is upper-bounded by twice the number of columns, which means an attacker would need to modify two entries in the byte stream in a consistent manner. By adding these checks robustness was strictly improved with almost zero overhead. These code changes are available in versions higher than 2.2.1.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/26xxx/CVE-2022-26477.json",
    "references": [
      "https://lists.apache.org/thread/r4x2d2r6d4zykdrrx6s2l4qbxgzws0z3",
      "https://security.netapp.com/advisory/ntap-20220812-0003/"
    ],
    "title": "Denial of service in readExternal method",
    "updated": "2024-08-03T05:03:32.880000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-400"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:apache:systemds:*:*:*:*:*:*:*:*"
    ],
    "created": "2022-06-27T18:15:08.853000+00:00",
    "description": "The Security Team noticed that the termination condition of the for loop in the readExternal method is a controllable variable, which, if tampered with, may lead to CPU exhaustion. As a fix, we added an upper bound and termination condition in the read and write logic. We classify it as a \"low-priority but useful improvement\". SystemDS is a distributed system and needs to serialize/deserialize data but in many code paths (e.g., on Spark broadcast/shuffle or writing to sequence files) the byte stream is anyway protected by additional CRC fingerprints. In this particular case though, the number of decoders is upper-bounded by twice the number of columns, which means an attacker would need to modify two entries in the byte stream in a consistent manner. By adding these checks robustness was strictly improved with almost zero overhead. These code changes are available in versions higher than 2.2.1.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-26477.json",
    "references": [
      "https://lists.apache.org/thread/r4x2d2r6d4zykdrrx6s2l4qbxgzws0z3",
      "https://security.netapp.com/advisory/ntap-20220812-0003/"
    ],
    "title": null,
    "updated": "2022-10-29T02:45:51.367000+00:00",
    "vendors": [
      "apache",
      "apache$PRODUCT$systemds"
    ],
    "weaknesses": [
      "CWE-400"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:apache:systemds:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2022-06-27T17:15:18+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "The Security Team noticed that the termination condition of the for loop in the readExternal method is a controllable variable, which, if tampered with, may lead to CPU exhaustion. As a fix, we added an upper bound and termination condition in the read and write logic. We classify it as a \"low-priority but useful improvement\". SystemDS is a distributed system and needs to serialize/deserialize data but in many code paths (e.g., on Spark broadcast/shuffle or writing to sequence files) the byte stream is anyway protected by additional CRC fingerprints. In this particular case though, the number of decoders is upper-bounded by twice the number of columns, which means an attacker would need to modify two entries in the byte stream in a consistent manner. By adding these checks robustness was strictly improved with almost zero overhead. These code changes are available in versions higher than 2.2.1.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.0,
          "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://lists.apache.org/thread/r4x2d2r6d4zykdrrx6s2l4qbxgzws0z3",
        "https://security.netapp.com/advisory/ntap-20220812-0003/"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Denial of service in readExternal method",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T05:03:32.880000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "apache",
        "apache$PRODUCT$systemds"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-400"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}