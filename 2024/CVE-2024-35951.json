{
  "cve": "CVE-2024-35951",
  "mitre": {
    "cpes": [],
    "created": "2024-05-20T09:41:45.999000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/35xxx/CVE-2024-35951.json",
    "references": [
      "http://www.openwall.com/lists/oss-security/2024/05/30/1",
      "http://www.openwall.com/lists/oss-security/2024/05/30/2",
      "https://git.kernel.org/stable/c/1fc9af813b25e146d3607669247d0f970f5a87c3",
      "https://git.kernel.org/stable/c/31806711e8a4b75e09b1c43652f2a6420e6e1002",
      "https://git.kernel.org/stable/c/e18070c622c63f0cab170348e320454728c277aa"
    ],
    "title": "drm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()",
    "updated": "2024-08-02T03:21:48.983000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-20T10:15:10.577000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-35951.json",
    "references": [
      "http://www.openwall.com/lists/oss-security/2024/05/30/1",
      "http://www.openwall.com/lists/oss-security/2024/05/30/2",
      "https://git.kernel.org/stable/c/1fc9af813b25e146d3607669247d0f970f5a87c3",
      "https://git.kernel.org/stable/c/31806711e8a4b75e09b1c43652f2a6420e6e1002",
      "https://git.kernel.org/stable/c/e18070c622c63f0cab170348e320454728c277aa"
    ],
    "title": null,
    "updated": "2024-06-10T17:16:31.873000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-20T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://www.openwall.com/lists/oss-security/2024/05/30/1",
        "http://www.openwall.com/lists/oss-security/2024/05/30/2",
        "https://git.kernel.org/stable/c/1fc9af813b25e146d3607669247d0f970f5a87c3",
        "https://git.kernel.org/stable/c/31806711e8a4b75e09b1c43652f2a6420e6e1002",
        "https://git.kernel.org/stable/c/e18070c622c63f0cab170348e320454728c277aa",
        "https://lore.kernel.org/linux-cve-announce/2024052017-CVE-2024-35951-d66a@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-35951",
        "https://www.cve.org/CVERecord?id=CVE-2024-35951"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "drm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T03:21:48.983000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-20T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\nSubject: [PATCH] drm/panfrost: Fix the error path in\npanfrost_mmu_map_fault_addr()\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-35951.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024052017-CVE-2024-35951-d66a@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-35951",
      "https://www.cve.org/CVERecord?id=CVE-2024-35951"
    ],
    "title": "kernel: drm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()",
    "updated": "2024-05-20T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-20T09:41:45.999000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "drm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()",
    "updated": "2024-05-23T19:20:13.671000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/35xxx/CVE-2024-35951.json",
    "weaknesses": []
  }
}