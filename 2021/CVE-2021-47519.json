{
  "cve": "CVE-2021-47519",
  "mitre": {
    "cpes": [],
    "created": "2024-05-24T15:09:33.118000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: m_can_read_fifo: fix memory leak in error branch\n\nIn m_can_read_fifo(), if the second call to m_can_fifo_read() fails,\nthe function jump to the out_fail label and returns without calling\nm_can_receive_skb(). This means that the skb previously allocated by\nalloc_can_skb() is not freed. In other terms, this is a memory leak.\n\nThis patch adds a goto label to destroy the skb if an error occurs.\n\nIssue was found with GCC -fanalyzer, please follow the link below for\ndetails.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/47xxx/CVE-2021-47519.json",
    "references": [
      "https://git.kernel.org/stable/c/31cb32a590d62b18f69a9a6d433f4e69c74fdd56",
      "https://git.kernel.org/stable/c/75a422165477dd12d2d20aa7c9ee7c9a281c9908"
    ],
    "title": "can: m_can: m_can_read_fifo: fix memory leak in error branch",
    "updated": "2024-08-04T05:39:59.702000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-05-24T15:15:13.783000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: m_can_read_fifo: fix memory leak in error branch\n\nIn m_can_read_fifo(), if the second call to m_can_fifo_read() fails,\nthe function jump to the out_fail label and returns without calling\nm_can_receive_skb(). This means that the skb previously allocated by\nalloc_can_skb() is not freed. In other terms, this is a memory leak.\n\nThis patch adds a goto label to destroy the skb if an error occurs.\n\nIssue was found with GCC -fanalyzer, please follow the link below for\ndetails.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-47519.json",
    "references": [
      "https://git.kernel.org/stable/c/31cb32a590d62b18f69a9a6d433f4e69c74fdd56",
      "https://git.kernel.org/stable/c/75a422165477dd12d2d20aa7c9ee7c9a281c9908"
    ],
    "title": null,
    "updated": "2024-07-03T01:38:05.877000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-401"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2024-05-24T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: m_can_read_fifo: fix memory leak in error branch\n\nIn m_can_read_fifo(), if the second call to m_can_fifo_read() fails,\nthe function jump to the out_fail label and returns without calling\nm_can_receive_skb(). This means that the skb previously allocated by\nalloc_can_skb() is not freed. In other terms, this is a memory leak.\n\nThis patch adds a goto label to destroy the skb if an error occurs.\n\nIssue was found with GCC -fanalyzer, please follow the link below for\ndetails.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/31cb32a590d62b18f69a9a6d433f4e69c74fdd56",
        "https://git.kernel.org/stable/c/75a422165477dd12d2d20aa7c9ee7c9a281c9908",
        "https://lore.kernel.org/linux-cve-announce/2024052432-CVE-2021-47519-ed69@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-47519",
        "https://www.cve.org/CVERecord?id=CVE-2021-47519"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "can: m_can: m_can_read_fifo: fix memory leak in error branch",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T05:39:59.702000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-400",
        "CWE-401"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-24T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ncan: m_can: m_can_read_fifo: fix memory leak in error branch\nIn m_can_read_fifo(), if the second call to m_can_fifo_read() fails,\nthe function jump to the out_fail label and returns without calling\nm_can_receive_skb(). This means that the skb previously allocated by\nalloc_can_skb() is not freed. In other terms, this is a memory leak.\nThis patch adds a goto label to destroy the skb if an error occurs.\nIssue was found with GCC -fanalyzer, please follow the link below for\ndetails.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2021/CVE-2021-47519.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024052432-CVE-2021-47519-ed69@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-47519",
      "https://www.cve.org/CVERecord?id=CVE-2021-47519"
    ],
    "title": "kernel: can: m_can: m_can_read_fifo: fix memory leak in error branch",
    "updated": "2024-05-24T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-400"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-24T15:09:33.118000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: m_can_read_fifo: fix memory leak in error branch\n\nIn m_can_read_fifo(), if the second call to m_can_fifo_read() fails,\nthe function jump to the out_fail label and returns without calling\nm_can_receive_skb(). This means that the skb previously allocated by\nalloc_can_skb() is not freed. In other terms, this is a memory leak.\n\nThis patch adds a goto label to destroy the skb if an error occurs.\n\nIssue was found with GCC -fanalyzer, please follow the link below for\ndetails.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/31cb32a590d62b18f69a9a6d433f4e69c74fdd56",
      "https://git.kernel.org/stable/c/75a422165477dd12d2d20aa7c9ee7c9a281c9908"
    ],
    "title": "can: m_can: m_can_read_fifo: fix memory leak in error branch",
    "updated": "2024-08-04T05:39:59.702000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2021/47xxx/CVE-2021-47519.json",
    "weaknesses": []
  }
}