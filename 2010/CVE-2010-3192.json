{
  "cve": "CVE-2010-3192",
  "mitre": {
    "cpes": [],
    "created": "2022-10-03T16:20:57+00:00",
    "description": "Certain run-time memory protection mechanisms in the GNU C Library (aka glibc or libc6) print argv[0] and backtrace information, which might allow context-dependent attackers to obtain sensitive information from process memory by executing an incorrect program, as demonstrated by a setuid program that contains a stack-based buffer overflow error, related to the __fortify_fail function in debug/fortify_fail.c, and the __stack_chk_fail (aka stack protection) and __chk_fail (aka FORTIFY_SOURCE) implementations.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2010/3xxx/CVE-2010-3192.json",
    "references": [
      "http://seclists.org/fulldisclosure/2010/Apr/399",
      "http://www.openwall.com/lists/oss-security/2010/08/25/8",
      "http://www.openwall.com/lists/oss-security/2010/08/31/6",
      "http://www.openwall.com/lists/oss-security/2010/08/31/7",
      "http://www.openwall.com/lists/oss-security/2010/09/02/2",
      "http://www.openwall.com/lists/oss-security/2010/09/02/3",
      "http://www.openwall.com/lists/oss-security/2010/09/02/4",
      "http://www.openwall.com/lists/oss-security/2010/09/02/5"
    ],
    "title": null,
    "updated": "2022-10-03T16:20:57+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:gnu:glibc:*:*:*:*:*:*:*:*"
    ],
    "created": "2010-10-14T05:58:06.833000+00:00",
    "description": "Certain run-time memory protection mechanisms in the GNU C Library (aka glibc or libc6) print argv[0] and backtrace information, which might allow context-dependent attackers to obtain sensitive information from process memory by executing an incorrect program, as demonstrated by a setuid program that contains a stack-based buffer overflow error, related to the __fortify_fail function in debug/fortify_fail.c, and the __stack_chk_fail (aka stack protection) and __chk_fail (aka FORTIFY_SOURCE) implementations.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2010/CVE-2010-3192.json",
    "references": [
      "http://seclists.org/fulldisclosure/2010/Apr/399",
      "http://www.openwall.com/lists/oss-security/2010/08/25/8",
      "http://www.openwall.com/lists/oss-security/2010/08/31/6",
      "http://www.openwall.com/lists/oss-security/2010/08/31/7",
      "http://www.openwall.com/lists/oss-security/2010/09/02/2",
      "http://www.openwall.com/lists/oss-security/2010/09/02/3",
      "http://www.openwall.com/lists/oss-security/2010/09/02/4",
      "http://www.openwall.com/lists/oss-security/2010/09/02/5"
    ],
    "title": null,
    "updated": "2020-03-31T15:32:56.367000+00:00",
    "vendors": [
      "gnu",
      "gnu$PRODUCT$glibc"
    ],
    "weaknesses": [
      "CWE-200"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:gnu:glibc:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2010-04-27T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "Certain run-time memory protection mechanisms in the GNU C Library (aka glibc or libc6) print argv[0] and backtrace information, which might allow context-dependent attackers to obtain sensitive information from process memory by executing an incorrect program, as demonstrated by a setuid program that contains a stack-based buffer overflow error, related to the __fortify_fail function in debug/fortify_fail.c, and the __stack_chk_fail (aka stack protection) and __chk_fail (aka FORTIFY_SOURCE) implementations.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.0,
          "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://seclists.org/fulldisclosure/2010/Apr/399",
        "http://www.openwall.com/lists/oss-security/2010/08/25/8",
        "http://www.openwall.com/lists/oss-security/2010/08/31/6",
        "http://www.openwall.com/lists/oss-security/2010/08/31/7",
        "http://www.openwall.com/lists/oss-security/2010/09/02/2",
        "http://www.openwall.com/lists/oss-security/2010/09/02/3",
        "http://www.openwall.com/lists/oss-security/2010/09/02/4",
        "http://www.openwall.com/lists/oss-security/2010/09/02/5",
        "https://nvd.nist.gov/vuln/detail/CVE-2010-3192",
        "https://www.cve.org/CVERecord?id=CVE-2010-3192"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "glibc: __fortify_fail may use corrupted memory when called from SSP callback",
      "provider": "nvd"
    },
    "updated": {
      "data": "2022-10-03T16:20:57+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "gnu",
        "gnu$PRODUCT$glibc"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-200"
      ],
      "providers": [
        "nvd"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2010-04-27T00:00:00+00:00",
    "description": "Certain run-time memory protection mechanisms in the GNU C Library (aka glibc or libc6) print argv[0] and backtrace information, which might allow context-dependent attackers to obtain sensitive information from process memory by executing an incorrect program, as demonstrated by a setuid program that contains a stack-based buffer overflow error, related to the __fortify_fail function in debug/fortify_fail.c, and the __stack_chk_fail (aka stack protection) and __chk_fail (aka FORTIFY_SOURCE) implementations.",
    "metrics": {
      "cvssV2_0": {
        "score": 2.1,
        "vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {},
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2010/CVE-2010-3192.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2010-3192",
      "https://www.cve.org/CVERecord?id=CVE-2010-3192"
    ],
    "title": "glibc: __fortify_fail may use corrupted memory when called from SSP callback",
    "updated": "2010-04-27T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}