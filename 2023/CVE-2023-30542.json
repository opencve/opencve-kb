{
  "cve": "CVE-2023-30542",
  "mitre": {
    "cpes": [],
    "created": "2023-04-16T07:10:13.474000+00:00",
    "description": "OpenZeppelin Contracts is a library for secure smart contract development. The proposal creation entrypoint (`propose`) in `GovernorCompatibilityBravo` allows the creation of proposals with a `signatures` array shorter than the `calldatas` array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The `ProposalCreated` event correctly represents what will eventually execute, but the proposal parameters as queried through `getActions` appear to respect the original intended calldata. This issue has been patched in 4.8.3. As a workaround, ensure that all proposals that pass through governance have equal length `signatures` and `calldatas` parameters.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:H/A:L"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/30xxx/CVE-2023-30542.json",
    "references": [
      "https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3",
      "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82"
    ],
    "title": "GovernorCompatibilityBravo may trim proposal calldata",
    "updated": "2024-08-02T14:28:51.788000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-20"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:openzeppelin:contracts:*:*:*:*:*:node.js:*:*",
      "cpe:2.3:a:openzeppelin:contracts_upgradeable:*:*:*:*:*:node.js:*:*"
    ],
    "created": "2023-04-16T08:15:07.867000+00:00",
    "description": "OpenZeppelin Contracts is a library for secure smart contract development. The proposal creation entrypoint (`propose`) in `GovernorCompatibilityBravo` allows the creation of proposals with a `signatures` array shorter than the `calldatas` array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The `ProposalCreated` event correctly represents what will eventually execute, but the proposal parameters as queried through `getActions` appear to respect the original intended calldata. This issue has been patched in 4.8.3. As a workaround, ensure that all proposals that pass through governance have equal length `signatures` and `calldatas` parameters.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-30542.json",
    "references": [
      "https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3",
      "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82"
    ],
    "title": null,
    "updated": "2023-04-27T13:23:36.267000+00:00",
    "vendors": [
      "openzeppelin",
      "openzeppelin$PRODUCT$contracts",
      "openzeppelin$PRODUCT$contracts_upgradeable"
    ],
    "weaknesses": [
      "CWE-20",
      "NVD-CWE-noinfo"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:openzeppelin:contracts:*:*:*:*:*:node.js:*:*",
        "cpe:2.3:a:openzeppelin:contracts_upgradeable:*:*:*:*:*:node.js:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-04-16T07:10:13.474000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "OpenZeppelin Contracts is a library for secure smart contract development. The proposal creation entrypoint (`propose`) in `GovernorCompatibilityBravo` allows the creation of proposals with a `signatures` array shorter than the `calldatas` array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The `ProposalCreated` event correctly represents what will eventually execute, but the proposal parameters as queried through `getActions` appear to respect the original intended calldata. This issue has been patched in 4.8.3. As a workaround, ensure that all proposals that pass through governance have equal length `signatures` and `calldatas` parameters.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.8,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:H/A:L"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3",
        "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "GovernorCompatibilityBravo may trim proposal calldata",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T14:28:51.788000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "openzeppelin",
        "openzeppelin$PRODUCT$contracts",
        "openzeppelin$PRODUCT$contracts_upgradeable"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-20",
        "NVD-CWE-noinfo"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}