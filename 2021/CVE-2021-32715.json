{
  "cve": "CVE-2021-32715",
  "mitre": {
    "cpes": [],
    "created": "2021-07-07T20:05:11+00:00",
    "description": "hyper is an HTTP library for rust. hyper's HTTP/1 server code had a flaw that incorrectly parses and accepts requests with a `Content-Length` header with a prefixed plus sign, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that doesn't parse such `Content-Length` headers, but forwards them, can result in \"request smuggling\" or \"desync attacks\". The flaw exists in all prior versions of hyper prior to 0.14.10, if built with `rustc` v1.5.0 or newer. The vulnerability is patched in hyper version 0.14.10. Two workarounds exist: One may reject requests manually that contain a plus sign prefix in the `Content-Length` header or ensure any upstream proxy handles `Content-Length` headers with a plus sign prefix.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 3.1,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/32xxx/CVE-2021-32715.json",
    "references": [
      "https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c",
      "https://github.com/rust-lang/rust/pull/28826/commits/123a83326fb95366e94a3be1a74775df4db97739"
    ],
    "title": "Lenient Parsing of Content-Length Header When Prefixed with Plus Sign",
    "updated": "2024-08-03T23:25:31.081000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-444"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:hyper:hyper:*:*:*:*:*:rust:*:*"
    ],
    "created": "2021-07-07T20:15:08.750000+00:00",
    "description": "hyper is an HTTP library for rust. hyper's HTTP/1 server code had a flaw that incorrectly parses and accepts requests with a `Content-Length` header with a prefixed plus sign, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that doesn't parse such `Content-Length` headers, but forwards them, can result in \"request smuggling\" or \"desync attacks\". The flaw exists in all prior versions of hyper prior to 0.14.10, if built with `rustc` v1.5.0 or newer. The vulnerability is patched in hyper version 0.14.10. Two workarounds exist: One may reject requests manually that contain a plus sign prefix in the `Content-Length` header or ensure any upstream proxy handles `Content-Length` headers with a plus sign prefix.",
    "metrics": {
      "cvssV2_0": {
        "score": 4.3,
        "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-32715.json",
    "references": [
      "https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c",
      "https://github.com/rust-lang/rust/pull/28826/commits/123a83326fb95366e94a3be1a74775df4db97739"
    ],
    "title": null,
    "updated": "2021-07-22T12:49:47.863000+00:00",
    "vendors": [
      "hyper",
      "hyper$PRODUCT$hyper"
    ],
    "weaknesses": [
      "CWE-444"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:hyper:hyper:*:*:*:*:*:rust:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2021-07-07T20:05:11+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "hyper is an HTTP library for rust. hyper's HTTP/1 server code had a flaw that incorrectly parses and accepts requests with a `Content-Length` header with a prefixed plus sign, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that doesn't parse such `Content-Length` headers, but forwards them, can result in \"request smuggling\" or \"desync attacks\". The flaw exists in all prior versions of hyper prior to 0.14.10, if built with `rustc` v1.5.0 or newer. The vulnerability is patched in hyper version 0.14.10. Two workarounds exist: One may reject requests manually that contain a plus sign prefix in the `Content-Length` header or ensure any upstream proxy handles `Content-Length` headers with a plus sign prefix.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.3,
          "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 3.1,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c",
        "https://github.com/rust-lang/rust/pull/28826/commits/123a83326fb95366e94a3be1a74775df4db97739"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Lenient Parsing of Content-Length Header When Prefixed with Plus Sign",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T23:25:31.081000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "hyper",
        "hyper$PRODUCT$hyper"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-444"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}