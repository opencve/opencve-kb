{
  "cve": "CVE-2024-44965",
  "mitre": {
    "cpes": [],
    "created": "2024-09-04T18:36:02.762000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Fix pti_clone_pgtable() alignment assumption\n\nGuenter reported dodgy crashes on an i386-nosmp build using GCC-11\nthat had the form of endless traps until entry stack exhaust and then\n#DF from the stack guard.\n\nIt turned out that pti_clone_pgtable() had alignment assumptions on\nthe start address, notably it hard assumes start is PMD aligned. This\nis true on x86_64, but very much not true on i386.\n\nThese assumptions can cause the end condition to malfunction, leading\nto a 'short' clone. Guess what happens when the user mapping has a\nshort copy of the entry text?\n\nUse the correct increment form for addr to avoid alignment\nassumptions.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/44xxx/CVE-2024-44965.json",
    "references": [
      "https://git.kernel.org/stable/c/18da1b27ce16a14a9b636af9232acb4fb24f4c9e",
      "https://git.kernel.org/stable/c/25a727233a40a9b33370eec9f0cad67d8fd312f8",
      "https://git.kernel.org/stable/c/41e71dbb0e0a0fe214545fe64af031303a08524c",
      "https://git.kernel.org/stable/c/4d143ae782009b43b4f366402e5c37f59d4e4346",
      "https://git.kernel.org/stable/c/5c580c1050bcbc15c3e78090859d798dcf8c9763",
      "https://git.kernel.org/stable/c/ca07aab70dd3b5e7fddb62d7a6ecd7a7d6d0b2ed",
      "https://git.kernel.org/stable/c/d00c9b4bbc442d99e1dafbdfdab848bc1ead73f6",
      "https://git.kernel.org/stable/c/df3eecb5496f87263d171b254ca6e2758ab3c35c"
    ],
    "title": "x86/mm: Fix pti_clone_pgtable() alignment assumption",
    "updated": "2024-09-15T17:56:05.390000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-09-04T19:15:30.990000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Fix pti_clone_pgtable() alignment assumption\n\nGuenter reported dodgy crashes on an i386-nosmp build using GCC-11\nthat had the form of endless traps until entry stack exhaust and then\n#DF from the stack guard.\n\nIt turned out that pti_clone_pgtable() had alignment assumptions on\nthe start address, notably it hard assumes start is PMD aligned. This\nis true on x86_64, but very much not true on i386.\n\nThese assumptions can cause the end condition to malfunction, leading\nto a 'short' clone. Guess what happens when the user mapping has a\nshort copy of the entry text?\n\nUse the correct increment form for addr to avoid alignment\nassumptions.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-44965.json",
    "references": [
      "https://git.kernel.org/stable/c/18da1b27ce16a14a9b636af9232acb4fb24f4c9e",
      "https://git.kernel.org/stable/c/25a727233a40a9b33370eec9f0cad67d8fd312f8",
      "https://git.kernel.org/stable/c/41e71dbb0e0a0fe214545fe64af031303a08524c",
      "https://git.kernel.org/stable/c/4d143ae782009b43b4f366402e5c37f59d4e4346",
      "https://git.kernel.org/stable/c/5c580c1050bcbc15c3e78090859d798dcf8c9763",
      "https://git.kernel.org/stable/c/ca07aab70dd3b5e7fddb62d7a6ecd7a7d6d0b2ed",
      "https://git.kernel.org/stable/c/d00c9b4bbc442d99e1dafbdfdab848bc1ead73f6",
      "https://git.kernel.org/stable/c/df3eecb5496f87263d171b254ca6e2758ab3c35c"
    ],
    "title": null,
    "updated": "2024-09-05T12:53:21.110000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-04T18:45:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Fix pti_clone_pgtable() alignment assumption\n\nGuenter reported dodgy crashes on an i386-nosmp build using GCC-11\nthat had the form of endless traps until entry stack exhaust and then\n#DF from the stack guard.\n\nIt turned out that pti_clone_pgtable() had alignment assumptions on\nthe start address, notably it hard assumes start is PMD aligned. This\nis true on x86_64, but very much not true on i386.\n\nThese assumptions can cause the end condition to malfunction, leading\nto a 'short' clone. Guess what happens when the user mapping has a\nshort copy of the entry text?\n\nUse the correct increment form for addr to avoid alignment\nassumptions.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "x86/mm: Fix pti_clone_pgtable() alignment assumption",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/18da1b27ce16a14a9b636af9232acb4fb24f4c9e",
                "https://git.kernel.org/stable/c/25a727233a40a9b33370eec9f0cad67d8fd312f8",
                "https://git.kernel.org/stable/c/41e71dbb0e0a0fe214545fe64af031303a08524c",
                "https://git.kernel.org/stable/c/4d143ae782009b43b4f366402e5c37f59d4e4346",
                "https://git.kernel.org/stable/c/5c580c1050bcbc15c3e78090859d798dcf8c9763",
                "https://git.kernel.org/stable/c/ca07aab70dd3b5e7fddb62d7a6ecd7a7d6d0b2ed",
                "https://git.kernel.org/stable/c/d00c9b4bbc442d99e1dafbdfdab848bc1ead73f6",
                "https://git.kernel.org/stable/c/df3eecb5496f87263d171b254ca6e2758ab3c35c"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "b22335d2-2f26-4d5b-9f12-f8bf264e9c7f"
      },
      {
        "created": "2024-09-04T23:30:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024090415-CVE-2024-44965-d41d@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2024-44965",
                "https://www.cve.org/CVERecord?id=CVE-2024-44965"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Moderate",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "d94f9d1b-1349-4686-a5fd-db9a6329db13"
      },
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "d96f9f64-cb28-4614-a5a4-a9b95e18faa6"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-09-04T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Fix pti_clone_pgtable() alignment assumption\n\nGuenter reported dodgy crashes on an i386-nosmp build using GCC-11\nthat had the form of endless traps until entry stack exhaust and then\n#DF from the stack guard.\n\nIt turned out that pti_clone_pgtable() had alignment assumptions on\nthe start address, notably it hard assumes start is PMD aligned. This\nis true on x86_64, but very much not true on i386.\n\nThese assumptions can cause the end condition to malfunction, leading\nto a 'short' clone. Guess what happens when the user mapping has a\nshort copy of the entry text?\n\nUse the correct increment form for addr to avoid alignment\nassumptions.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/18da1b27ce16a14a9b636af9232acb4fb24f4c9e",
        "https://git.kernel.org/stable/c/25a727233a40a9b33370eec9f0cad67d8fd312f8",
        "https://git.kernel.org/stable/c/41e71dbb0e0a0fe214545fe64af031303a08524c",
        "https://git.kernel.org/stable/c/4d143ae782009b43b4f366402e5c37f59d4e4346",
        "https://git.kernel.org/stable/c/5c580c1050bcbc15c3e78090859d798dcf8c9763",
        "https://git.kernel.org/stable/c/ca07aab70dd3b5e7fddb62d7a6ecd7a7d6d0b2ed",
        "https://git.kernel.org/stable/c/d00c9b4bbc442d99e1dafbdfdab848bc1ead73f6",
        "https://git.kernel.org/stable/c/df3eecb5496f87263d171b254ca6e2758ab3c35c",
        "https://lore.kernel.org/linux-cve-announce/2024090415-CVE-2024-44965-d41d@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-44965",
        "https://www.cve.org/CVERecord?id=CVE-2024-44965"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "x86/mm: Fix pti_clone_pgtable() alignment assumption",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-15T17:56:05.390000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-09-04T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nx86/mm: Fix pti_clone_pgtable() alignment assumption\nGuenter reported dodgy crashes on an i386-nosmp build using GCC-11\nthat had the form of endless traps until entry stack exhaust and then\n#DF from the stack guard.\nIt turned out that pti_clone_pgtable() had alignment assumptions on\nthe start address, notably it hard assumes start is PMD aligned. This\nis true on x86_64, but very much not true on i386.\nThese assumptions can cause the end condition to malfunction, leading\nto a 'short' clone. Guess what happens when the user mapping has a\nshort copy of the entry text?\nUse the correct increment form for addr to avoid alignment\nassumptions.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-44965.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024090415-CVE-2024-44965-d41d@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-44965",
      "https://www.cve.org/CVERecord?id=CVE-2024-44965"
    ],
    "title": "kernel: x86/mm: Fix pti_clone_pgtable() alignment assumption",
    "updated": "2024-09-04T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-09-04T18:36:02.762000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Fix pti_clone_pgtable() alignment assumption\n\nGuenter reported dodgy crashes on an i386-nosmp build using GCC-11\nthat had the form of endless traps until entry stack exhaust and then\n#DF from the stack guard.\n\nIt turned out that pti_clone_pgtable() had alignment assumptions on\nthe start address, notably it hard assumes start is PMD aligned. This\nis true on x86_64, but very much not true on i386.\n\nThese assumptions can cause the end condition to malfunction, leading\nto a 'short' clone. Guess what happens when the user mapping has a\nshort copy of the entry text?\n\nUse the correct increment form for addr to avoid alignment\nassumptions.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "x86/mm: Fix pti_clone_pgtable() alignment assumption",
    "updated": "2024-09-11T12:42:27.531000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/44xxx/CVE-2024-44965.json",
    "weaknesses": []
  }
}