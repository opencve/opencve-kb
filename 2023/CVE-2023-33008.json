{
  "cve": "CVE-2023-33008",
  "mitre": {
    "cpes": [],
    "created": "2023-07-07T09:07:31.070000+00:00",
    "description": "Deserialization of Untrusted Data vulnerability in Apache Software Foundation Apache Johnzon.\n\n\nA malicious attacker can craft up some JSON input that uses large numbers (numbers such as 1e20000000) that Apache Johnzon will deserialize into BigDecimal and maybe use numbers too large which may result in a slow conversion (Denial of service risk). Apache Johnzon 1.2.21 mitigates this by setting a scale limit of 1000 (by default) to the BigDecimal. \n\n\nThis issue affects Apache Johnzon: through 1.2.20.\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/33xxx/CVE-2023-33008.json",
    "references": [
      "https://lists.apache.org/thread/qbg14djo95gfpk7o560lr8wcrzfyw43l"
    ],
    "title": "Apache Johnzon: Prevent inefficient internal conversion from BigDecimal at large scale",
    "updated": "2024-10-07T19:13:58.440000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-502"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:apache:johnzon:*:*:*:*:*:*:*:*"
    ],
    "created": "2023-07-07T10:15:09.487000+00:00",
    "description": "Deserialization of Untrusted Data vulnerability in Apache Software Foundation Apache Johnzon.\n\n\nA malicious attacker can craft up some JSON input that uses large numbers (numbers such as 1e20000000) that Apache Johnzon will deserialize into BigDecimal and maybe use numbers too large which may result in a slow conversion (Denial of service risk). Apache Johnzon 1.2.21 mitigates this by setting a scale limit of 1000 (by default) to the BigDecimal. \n\n\nThis issue affects Apache Johnzon: through 1.2.20.\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-33008.json",
    "references": [
      "https://lists.apache.org/thread/qbg14djo95gfpk7o560lr8wcrzfyw43l"
    ],
    "title": null,
    "updated": "2023-07-14T17:00:04.467000+00:00",
    "vendors": [
      "apache",
      "apache$PRODUCT$johnzon"
    ],
    "weaknesses": [
      "CWE-502"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:amq_broker:7",
        "cpe:/a:redhat:camel_spring_boot:4.0.0",
        "cpe:/a:redhat:openshift_application_runtimes:1.0",
        "cpe:2.3:a:apache:johnzon:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2023-07-06T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "Deserialization of Untrusted Data vulnerability in Apache Software Foundation Apache Johnzon.\n\n\nA malicious attacker can craft up some JSON input that uses large numbers (numbers such as 1e20000000) that Apache Johnzon will deserialize into BigDecimal and maybe use numbers too large which may result in a slow conversion (Denial of service risk). Apache Johnzon 1.2.21 mitigates this by setting a scale limit of 1000 (by default) to the BigDecimal. \n\n\nThis issue affects Apache Johnzon: through 1.2.20.\n\n",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.3,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://lists.apache.org/thread/qbg14djo95gfpk7o560lr8wcrzfyw43l",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-33008",
        "https://www.cve.org/CVERecord?id=CVE-2023-33008"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "Apache Johnzon: Prevent inefficient internal conversion from BigDecimal at large scale",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-10-07T19:13:58.440000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "apache",
        "apache$PRODUCT$johnzon",
        "redhat",
        "redhat$PRODUCT$amq_broker",
        "redhat$PRODUCT$camel_spring_boot",
        "redhat$PRODUCT$openshift_application_runtimes"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-502"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:amq_broker:7",
      "cpe:/a:redhat:camel_spring_boot:4.0.0",
      "cpe:/a:redhat:openshift_application_runtimes:1.0"
    ],
    "created": "2023-07-06T00:00:00+00:00",
    "description": "Deserialization of Untrusted Data vulnerability in Apache Software Foundation Apache Johnzon.\nA malicious attacker can craft up some JSON input that uses large numbers (numbers such as 1e20000000) that Apache Johnzon will deserialize into BigDecimal and maybe use numbers too large which may result in a slow conversion (Denial of service risk). Apache Johnzon 1.2.21 mitigates this by setting a scale limit of 1000 (by default) to the BigDecimal. \nThis issue affects Apache Johnzon: through 1.2.20.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2023/CVE-2023-33008.json",
    "references": [
      "https://lists.apache.org/thread/qbg14djo95gfpk7o560lr8wcrzfyw43l",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-33008",
      "https://www.cve.org/CVERecord?id=CVE-2023-33008"
    ],
    "title": "apache-johnzon: Prevent inefficient internal conversion from BigDecimal at large scale",
    "updated": "2023-07-06T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$amq_broker",
      "redhat$PRODUCT$camel_spring_boot",
      "redhat$PRODUCT$openshift_application_runtimes"
    ],
    "weaknesses": [
      "CWE-502"
    ]
  }
}