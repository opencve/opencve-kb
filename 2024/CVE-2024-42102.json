{
  "cve": "CVE-2024-42102",
  "mitre": {
    "cpes": [],
    "created": "2024-07-30T07:45:58.423000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\"\n\nPatch series \"mm: Avoid possible overflows in dirty throttling\".\n\nDirty throttling logic assumes dirty limits in page units fit into\n32-bits.  This patch series makes sure this is true (see patch 2/2 for\nmore details).\n\n\nThis patch (of 2):\n\nThis reverts commit 9319b647902cbd5cc884ac08a8a6d54ce111fc78.\n\nThe commit is broken in several ways.  Firstly, the removed (u64) cast\nfrom the multiplication will introduce a multiplication overflow on 32-bit\narchs if wb_thresh * bg_thresh >= 1<<32 (which is actually common - the\ndefault settings with 4GB of RAM will trigger this).  Secondly, the\ndiv64_u64() is unnecessarily expensive on 32-bit archs.  We have\ndiv64_ul() in case we want to be safe & cheap.  Thirdly, if dirty\nthresholds are larger than 1<<32 pages, then dirty balancing is going to\nblow up in many other spectacular ways anyway so trying to fix one\npossible overflow is just moot.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/42xxx/CVE-2024-42102.json",
    "references": [
      "https://git.kernel.org/stable/c/000099d71648504fb9c7a4616f92c2b70c3e44ec",
      "https://git.kernel.org/stable/c/145faa3d03688cbb7bbaaecbd84c01539852942c",
      "https://git.kernel.org/stable/c/23a28f5f3f6ca1e4184bd0e9631cd0944cf1c807",
      "https://git.kernel.org/stable/c/253f9ea7e8e53a5176bd80ceb174907b10724c1a",
      "https://git.kernel.org/stable/c/2820005edae13b140f2d54267d1bd6bb23915f59",
      "https://git.kernel.org/stable/c/30139c702048f1097342a31302cbd3d478f50c63",
      "https://git.kernel.org/stable/c/cbbe17a324437c0ff99881a3ee453da45b228a00",
      "https://git.kernel.org/stable/c/f6620df12cb6bdcad671d269debbb23573502f9d"
    ],
    "title": "Revert \"mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\"",
    "updated": "2024-08-02T04:54:32.558000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-07-30T08:15:02.733000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\"\n\nPatch series \"mm: Avoid possible overflows in dirty throttling\".\n\nDirty throttling logic assumes dirty limits in page units fit into\n32-bits.  This patch series makes sure this is true (see patch 2/2 for\nmore details).\n\n\nThis patch (of 2):\n\nThis reverts commit 9319b647902cbd5cc884ac08a8a6d54ce111fc78.\n\nThe commit is broken in several ways.  Firstly, the removed (u64) cast\nfrom the multiplication will introduce a multiplication overflow on 32-bit\narchs if wb_thresh * bg_thresh >= 1<<32 (which is actually common - the\ndefault settings with 4GB of RAM will trigger this).  Secondly, the\ndiv64_u64() is unnecessarily expensive on 32-bit archs.  We have\ndiv64_ul() in case we want to be safe & cheap.  Thirdly, if dirty\nthresholds are larger than 1<<32 pages, then dirty balancing is going to\nblow up in many other spectacular ways anyway so trying to fix one\npossible overflow is just moot.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-42102.json",
    "references": [
      "https://git.kernel.org/stable/c/000099d71648504fb9c7a4616f92c2b70c3e44ec",
      "https://git.kernel.org/stable/c/145faa3d03688cbb7bbaaecbd84c01539852942c",
      "https://git.kernel.org/stable/c/23a28f5f3f6ca1e4184bd0e9631cd0944cf1c807",
      "https://git.kernel.org/stable/c/253f9ea7e8e53a5176bd80ceb174907b10724c1a",
      "https://git.kernel.org/stable/c/2820005edae13b140f2d54267d1bd6bb23915f59",
      "https://git.kernel.org/stable/c/30139c702048f1097342a31302cbd3d478f50c63",
      "https://git.kernel.org/stable/c/cbbe17a324437c0ff99881a3ee453da45b228a00",
      "https://git.kernel.org/stable/c/f6620df12cb6bdcad671d269debbb23573502f9d"
    ],
    "title": null,
    "updated": "2024-07-30T13:32:45.943000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-07-30T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\"\n\nPatch series \"mm: Avoid possible overflows in dirty throttling\".\n\nDirty throttling logic assumes dirty limits in page units fit into\n32-bits.  This patch series makes sure this is true (see patch 2/2 for\nmore details).\n\n\nThis patch (of 2):\n\nThis reverts commit 9319b647902cbd5cc884ac08a8a6d54ce111fc78.\n\nThe commit is broken in several ways.  Firstly, the removed (u64) cast\nfrom the multiplication will introduce a multiplication overflow on 32-bit\narchs if wb_thresh * bg_thresh >= 1<<32 (which is actually common - the\ndefault settings with 4GB of RAM will trigger this).  Secondly, the\ndiv64_u64() is unnecessarily expensive on 32-bit archs.  We have\ndiv64_ul() in case we want to be safe & cheap.  Thirdly, if dirty\nthresholds are larger than 1<<32 pages, then dirty balancing is going to\nblow up in many other spectacular ways anyway so trying to fix one\npossible overflow is just moot.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/000099d71648504fb9c7a4616f92c2b70c3e44ec",
        "https://git.kernel.org/stable/c/145faa3d03688cbb7bbaaecbd84c01539852942c",
        "https://git.kernel.org/stable/c/23a28f5f3f6ca1e4184bd0e9631cd0944cf1c807",
        "https://git.kernel.org/stable/c/253f9ea7e8e53a5176bd80ceb174907b10724c1a",
        "https://git.kernel.org/stable/c/2820005edae13b140f2d54267d1bd6bb23915f59",
        "https://git.kernel.org/stable/c/30139c702048f1097342a31302cbd3d478f50c63",
        "https://git.kernel.org/stable/c/cbbe17a324437c0ff99881a3ee453da45b228a00",
        "https://git.kernel.org/stable/c/f6620df12cb6bdcad671d269debbb23573502f9d",
        "https://lore.kernel.org/linux-cve-announce/2024073019-CVE-2024-42102-bcee@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-42102",
        "https://www.cve.org/CVERecord?id=CVE-2024-42102"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "Revert \"mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\"",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T04:54:32.558000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-07-30T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nRevert \"mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again\"\nPatch series \"mm: Avoid possible overflows in dirty throttling\".\nDirty throttling logic assumes dirty limits in page units fit into\n32-bits.  This patch series makes sure this is true (see patch 2/2 for\nmore details).\nThis patch (of 2):\nThis reverts commit 9319b647902cbd5cc884ac08a8a6d54ce111fc78.\nThe commit is broken in several ways.  Firstly, the removed (u64) cast\nfrom the multiplication will introduce a multiplication overflow on 32-bit\narchs if wb_thresh * bg_thresh >= 1<<32 (which is actually common - the\ndefault settings with 4GB of RAM will trigger this).  Secondly, the\ndiv64_u64() is unnecessarily expensive on 32-bit archs.  We have\ndiv64_ul() in case we want to be safe & cheap.  Thirdly, if dirty\nthresholds are larger than 1<<32 pages, then dirty balancing is going to\nblow up in many other spectacular ways anyway so trying to fix one\npossible overflow is just moot.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-42102.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024073019-CVE-2024-42102-bcee@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-42102",
      "https://www.cve.org/CVERecord?id=CVE-2024-42102"
    ],
    "title": "kernel: Revert &#34;mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again&#34;",
    "updated": "2024-07-30T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}