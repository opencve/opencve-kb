{
  "cve": "CVE-2020-7212",
  "mitre": {
    "cpes": [],
    "created": "2020-03-06T19:14:54+00:00",
    "description": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2020/7xxx/CVE-2020-7212.json",
    "references": [
      "https://github.com/urllib3/urllib3/blob/master/CHANGES.rst",
      "https://github.com/urllib3/urllib3/commit/a74c9cfbaed9f811e7563cfc3dce894928e0221a",
      "https://pypi.org/project/urllib3/1.25.8/"
    ],
    "title": null,
    "updated": "2024-08-04T09:25:48.318000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:python:urllib3:*:*:*:*:*:*:*:*"
    ],
    "created": "2020-03-06T20:15:12.707000+00:00",
    "description": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
    "metrics": {
      "cvssV2_0": {
        "score": 7.8,
        "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2020/CVE-2020-7212.json",
    "references": [
      "https://github.com/urllib3/urllib3/blob/master/CHANGES.rst",
      "https://github.com/urllib3/urllib3/commit/a74c9cfbaed9f811e7563cfc3dce894928e0221a",
      "https://pypi.org/project/urllib3/1.25.8/"
    ],
    "title": null,
    "updated": "2020-03-09T16:55:14.563000+00:00",
    "vendors": [
      "python",
      "python$PRODUCT$urllib3"
    ],
    "weaknesses": [
      "CWE-400"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:python:urllib3:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2020-03-06T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 7.8,
          "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://bugzilla.novell.com/show_bug.cgi?id=1166069",
        "https://github.com/urllib3/urllib3/blob/master/CHANGES.rst",
        "https://github.com/urllib3/urllib3/commit/a74c9cfbaed9f811e7563cfc3dce894928e0221a",
        "https://nvd.nist.gov/vuln/detail/CVE-2020-7212",
        "https://pypi.org/project/urllib3/1.25.8/",
        "https://www.cve.org/CVERecord?id=CVE-2020-7212"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "python-urllib3: inefficient algorithm allows a DoS (CPU consumption) in _encode_invalid_chars function in util/url.py",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-04T09:25:48.318000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "python",
        "python$PRODUCT$urllib3"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-400"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2020-03-06T00:00:00+00:00",
    "description": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 0.0,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:N"
      },
      "threat_severity": null
    },
    "redhat_repo_path": "2020/CVE-2020-7212.json",
    "references": [
      "https://bugzilla.novell.com/show_bug.cgi?id=1166069",
      "https://nvd.nist.gov/vuln/detail/CVE-2020-7212",
      "https://pypi.org/project/urllib3/1.25.8/",
      "https://www.cve.org/CVERecord?id=CVE-2020-7212"
    ],
    "title": "python-urllib3: inefficient algorithm allows a DoS (CPU consumption) in _encode_invalid_chars function in util/url.py",
    "updated": "2020-03-06T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-400"
    ]
  }
}