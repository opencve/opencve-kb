{
  "cve": "CVE-2024-40944",
  "mitre": {
    "cpes": [],
    "created": "2024-07-12T12:25:18.490000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kexec: Fix bug with call depth tracking\n\nThe call to cc_platform_has() triggers a fault and system crash if call depth\ntracking is active because the GS segment has been reset by load_segments() and\nGS_BASE is now 0 but call depth tracking uses per-CPU variables to operate.\n\nCall cc_platform_has() earlier in the function when GS is still valid.\n\n  [ bp: Massage. ]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/40xxx/CVE-2024-40944.json",
    "references": [
      "https://git.kernel.org/stable/c/2cfb464669b645a9b98478b74f2bcea9860dcff1",
      "https://git.kernel.org/stable/c/93c1800b3799f17375989b0daf76497dd3e80922",
      "https://git.kernel.org/stable/c/d91ddd05082691e69b30744825d18ae799293258"
    ],
    "title": "x86/kexec: Fix bug with call depth tracking",
    "updated": "2024-09-11T17:34:25.451000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-07-12T13:15:16.753000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kexec: Fix bug with call depth tracking\n\nThe call to cc_platform_has() triggers a fault and system crash if call depth\ntracking is active because the GS segment has been reset by load_segments() and\nGS_BASE is now 0 but call depth tracking uses per-CPU variables to operate.\n\nCall cc_platform_has() earlier in the function when GS is still valid.\n\n  [ bp: Massage. ]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-40944.json",
    "references": [
      "https://git.kernel.org/stable/c/2cfb464669b645a9b98478b74f2bcea9860dcff1",
      "https://git.kernel.org/stable/c/93c1800b3799f17375989b0daf76497dd3e80922",
      "https://git.kernel.org/stable/c/d91ddd05082691e69b30744825d18ae799293258"
    ],
    "title": null,
    "updated": "2024-07-12T16:34:58.687000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "c529f34f-c35d-4750-b3a2-747801025b5c"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-07-12T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kexec: Fix bug with call depth tracking\n\nThe call to cc_platform_has() triggers a fault and system crash if call depth\ntracking is active because the GS segment has been reset by load_segments() and\nGS_BASE is now 0 but call depth tracking uses per-CPU variables to operate.\n\nCall cc_platform_has() earlier in the function when GS is still valid.\n\n  [ bp: Massage. ]",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.1,
          "vector": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/2cfb464669b645a9b98478b74f2bcea9860dcff1",
        "https://git.kernel.org/stable/c/93c1800b3799f17375989b0daf76497dd3e80922",
        "https://git.kernel.org/stable/c/d91ddd05082691e69b30744825d18ae799293258",
        "https://lore.kernel.org/linux-cve-announce/2024071219-CVE-2024-40944-98ef@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-40944",
        "https://www.cve.org/CVERecord?id=CVE-2024-40944"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "x86/kexec: Fix bug with call depth tracking",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-11T17:34:25.451000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-07-12T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nx86/kexec: Fix bug with call depth tracking\nThe call to cc_platform_has() triggers a fault and system crash if call depth\ntracking is active because the GS segment has been reset by load_segments() and\nGS_BASE is now 0 but call depth tracking uses per-CPU variables to operate.\nCall cc_platform_has() earlier in the function when GS is still valid.\n[ bp: Massage. ]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.1,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-40944.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024071219-CVE-2024-40944-98ef@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-40944",
      "https://www.cve.org/CVERecord?id=CVE-2024-40944"
    ],
    "title": "kernel: x86/kexec: Fix bug with call depth tracking",
    "updated": "2024-07-12T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-07-12T12:25:18.490000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kexec: Fix bug with call depth tracking\n\nThe call to cc_platform_has() triggers a fault and system crash if call depth\ntracking is active because the GS segment has been reset by load_segments() and\nGS_BASE is now 0 but call depth tracking uses per-CPU variables to operate.\n\nCall cc_platform_has() earlier in the function when GS is still valid.\n\n  [ bp: Massage. ]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "x86/kexec: Fix bug with call depth tracking",
    "updated": "2024-09-11T12:42:22.548000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/40xxx/CVE-2024-40944.json",
    "weaknesses": []
  }
}