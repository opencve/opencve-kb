{
  "cve": "CVE-2024-38596",
  "mitre": {
    "cpes": [],
    "created": "2024-06-19T13:45:45.984000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix data races in unix_release_sock/unix_stream_sendmsg\n\nA data-race condition has been identified in af_unix. In one data path,\nthe write function unix_release_sock() atomically writes to\nsk->sk_shutdown using WRITE_ONCE. However, on the reader side,\nunix_stream_sendmsg() does not read it atomically. Consequently, this\nissue is causing the following KCSAN splat to occur:\n\n\tBUG: KCSAN: data-race in unix_release_sock / unix_stream_sendmsg\n\n\twrite (marked) to 0xffff88867256ddbb of 1 bytes by task 7270 on cpu 28:\n\tunix_release_sock (net/unix/af_unix.c:640)\n\tunix_release (net/unix/af_unix.c:1050)\n\tsock_close (net/socket.c:659 net/socket.c:1421)\n\t__fput (fs/file_table.c:422)\n\t__fput_sync (fs/file_table.c:508)\n\t__se_sys_close (fs/open.c:1559 fs/open.c:1541)\n\t__x64_sys_close (fs/open.c:1541)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tread to 0xffff88867256ddbb of 1 bytes by task 989 on cpu 14:\n\tunix_stream_sendmsg (net/unix/af_unix.c:2273)\n\t__sock_sendmsg (net/socket.c:730 net/socket.c:745)\n\t____sys_sendmsg (net/socket.c:2584)\n\t__sys_sendmmsg (net/socket.c:2638 net/socket.c:2724)\n\t__x64_sys_sendmmsg (net/socket.c:2753 net/socket.c:2750 net/socket.c:2750)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tvalue changed: 0x01 -> 0x03\n\nThe line numbers are related to commit dd5a440a31fa (\"Linux 6.9-rc7\").\n\nCommit e1d09c2c2f57 (\"af_unix: Fix data races around sk->sk_shutdown.\")\naddressed a comparable issue in the past regarding sk->sk_shutdown.\nHowever, it overlooked resolving this particular data path.\nThis patch only offending unix_stream_sendmsg() function, since the\nother reads seem to be protected by unix_state_lock() as discussed in",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/38xxx/CVE-2024-38596.json",
    "references": [
      "https://git.kernel.org/stable/c/0688d4e499bee3f2749bca27329bd128686230cb",
      "https://git.kernel.org/stable/c/4d51845d734a4c5d079e56e0916f936a55e15055",
      "https://git.kernel.org/stable/c/540bf24fba16b88c1b3b9353927204b4f1074e25",
      "https://git.kernel.org/stable/c/8299e4d778f664b31b67cf4cf3d5409de2ecb92c",
      "https://git.kernel.org/stable/c/9aa8773abfa0e954136875b4cbf2df4cf638e8a5",
      "https://git.kernel.org/stable/c/a4c88072abcaca593cefe70f90e9d3707526e8f9",
      "https://git.kernel.org/stable/c/a52fa2addfcccc2c5a0217fd45562605088c018b",
      "https://git.kernel.org/stable/c/de6641d213373fbde9bbdd7c4b552254bc9f82fe",
      "https://git.kernel.org/stable/c/fca6072e1a7b1e709ada5604b951513b89b4bd0a"
    ],
    "title": "af_unix: Fix data races in unix_release_sock/unix_stream_sendmsg",
    "updated": "2024-08-02T04:12:26.062000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-06-19T14:15:19.640000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix data races in unix_release_sock/unix_stream_sendmsg\n\nA data-race condition has been identified in af_unix. In one data path,\nthe write function unix_release_sock() atomically writes to\nsk->sk_shutdown using WRITE_ONCE. However, on the reader side,\nunix_stream_sendmsg() does not read it atomically. Consequently, this\nissue is causing the following KCSAN splat to occur:\n\n\tBUG: KCSAN: data-race in unix_release_sock / unix_stream_sendmsg\n\n\twrite (marked) to 0xffff88867256ddbb of 1 bytes by task 7270 on cpu 28:\n\tunix_release_sock (net/unix/af_unix.c:640)\n\tunix_release (net/unix/af_unix.c:1050)\n\tsock_close (net/socket.c:659 net/socket.c:1421)\n\t__fput (fs/file_table.c:422)\n\t__fput_sync (fs/file_table.c:508)\n\t__se_sys_close (fs/open.c:1559 fs/open.c:1541)\n\t__x64_sys_close (fs/open.c:1541)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tread to 0xffff88867256ddbb of 1 bytes by task 989 on cpu 14:\n\tunix_stream_sendmsg (net/unix/af_unix.c:2273)\n\t__sock_sendmsg (net/socket.c:730 net/socket.c:745)\n\t____sys_sendmsg (net/socket.c:2584)\n\t__sys_sendmmsg (net/socket.c:2638 net/socket.c:2724)\n\t__x64_sys_sendmmsg (net/socket.c:2753 net/socket.c:2750 net/socket.c:2750)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tvalue changed: 0x01 -> 0x03\n\nThe line numbers are related to commit dd5a440a31fa (\"Linux 6.9-rc7\").\n\nCommit e1d09c2c2f57 (\"af_unix: Fix data races around sk->sk_shutdown.\")\naddressed a comparable issue in the past regarding sk->sk_shutdown.\nHowever, it overlooked resolving this particular data path.\nThis patch only offending unix_stream_sendmsg() function, since the\nother reads seem to be protected by unix_state_lock() as discussed in",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-38596.json",
    "references": [
      "https://git.kernel.org/stable/c/0688d4e499bee3f2749bca27329bd128686230cb",
      "https://git.kernel.org/stable/c/4d51845d734a4c5d079e56e0916f936a55e15055",
      "https://git.kernel.org/stable/c/540bf24fba16b88c1b3b9353927204b4f1074e25",
      "https://git.kernel.org/stable/c/8299e4d778f664b31b67cf4cf3d5409de2ecb92c",
      "https://git.kernel.org/stable/c/9aa8773abfa0e954136875b4cbf2df4cf638e8a5",
      "https://git.kernel.org/stable/c/a4c88072abcaca593cefe70f90e9d3707526e8f9",
      "https://git.kernel.org/stable/c/a52fa2addfcccc2c5a0217fd45562605088c018b",
      "https://git.kernel.org/stable/c/de6641d213373fbde9bbdd7c4b552254bc9f82fe",
      "https://git.kernel.org/stable/c/fca6072e1a7b1e709ada5604b951513b89b4bd0a"
    ],
    "title": null,
    "updated": "2024-07-15T07:15:11.600000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-08T23:00:00+00:00",
        "data": [
          {
            "details": [
              "redhat$PRODUCT$enterprise_linux"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "cpe:/a:redhat:enterprise_linux:8::nfv",
                "cpe:/o:redhat:enterprise_linux:8"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "redhat$PRODUCT$enterprise_linux"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "a0187fe0-99e3-481d-be7a-ce5adfb8b415"
      },
      {
        "created": "2024-09-06T13:45:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "cpe:/o:redhat:rhel_eus:8.8"
              ],
              "removed": []
            },
            "type": "cpes"
          }
        ],
        "id": "6a46ab58-1807-4f09-809b-2332aa90f3d5"
      },
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "4e868b8a-a9c2-42c8-b135-06e4c8e7680e"
      }
    ],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_linux:8::nfv",
        "cpe:/a:redhat:rhel_eus:9.2",
        "cpe:/a:redhat:rhel_eus:9.2::nfv",
        "cpe:/o:redhat:enterprise_linux:8",
        "cpe:/o:redhat:rhel_aus:8.6",
        "cpe:/o:redhat:rhel_e4s:8.6",
        "cpe:/o:redhat:rhel_eus:8.8",
        "cpe:/o:redhat:rhel_tus:8.6"
      ],
      "providers": [
        "redhat"
      ]
    },
    "created": {
      "data": "2024-06-19T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix data races in unix_release_sock/unix_stream_sendmsg\n\nA data-race condition has been identified in af_unix. In one data path,\nthe write function unix_release_sock() atomically writes to\nsk->sk_shutdown using WRITE_ONCE. However, on the reader side,\nunix_stream_sendmsg() does not read it atomically. Consequently, this\nissue is causing the following KCSAN splat to occur:\n\n\tBUG: KCSAN: data-race in unix_release_sock / unix_stream_sendmsg\n\n\twrite (marked) to 0xffff88867256ddbb of 1 bytes by task 7270 on cpu 28:\n\tunix_release_sock (net/unix/af_unix.c:640)\n\tunix_release (net/unix/af_unix.c:1050)\n\tsock_close (net/socket.c:659 net/socket.c:1421)\n\t__fput (fs/file_table.c:422)\n\t__fput_sync (fs/file_table.c:508)\n\t__se_sys_close (fs/open.c:1559 fs/open.c:1541)\n\t__x64_sys_close (fs/open.c:1541)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tread to 0xffff88867256ddbb of 1 bytes by task 989 on cpu 14:\n\tunix_stream_sendmsg (net/unix/af_unix.c:2273)\n\t__sock_sendmsg (net/socket.c:730 net/socket.c:745)\n\t____sys_sendmsg (net/socket.c:2584)\n\t__sys_sendmmsg (net/socket.c:2638 net/socket.c:2724)\n\t__x64_sys_sendmmsg (net/socket.c:2753 net/socket.c:2750 net/socket.c:2750)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tvalue changed: 0x01 -> 0x03\n\nThe line numbers are related to commit dd5a440a31fa (\"Linux 6.9-rc7\").\n\nCommit e1d09c2c2f57 (\"af_unix: Fix data races around sk->sk_shutdown.\")\naddressed a comparable issue in the past regarding sk->sk_shutdown.\nHowever, it overlooked resolving this particular data path.\nThis patch only offending unix_stream_sendmsg() function, since the\nother reads seem to be protected by unix_state_lock() as discussed in",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.7,
          "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/0688d4e499bee3f2749bca27329bd128686230cb",
        "https://git.kernel.org/stable/c/4d51845d734a4c5d079e56e0916f936a55e15055",
        "https://git.kernel.org/stable/c/540bf24fba16b88c1b3b9353927204b4f1074e25",
        "https://git.kernel.org/stable/c/8299e4d778f664b31b67cf4cf3d5409de2ecb92c",
        "https://git.kernel.org/stable/c/9aa8773abfa0e954136875b4cbf2df4cf638e8a5",
        "https://git.kernel.org/stable/c/a4c88072abcaca593cefe70f90e9d3707526e8f9",
        "https://git.kernel.org/stable/c/a52fa2addfcccc2c5a0217fd45562605088c018b",
        "https://git.kernel.org/stable/c/de6641d213373fbde9bbdd7c4b552254bc9f82fe",
        "https://git.kernel.org/stable/c/fca6072e1a7b1e709ada5604b951513b89b4bd0a",
        "https://lore.kernel.org/linux-cve-announce/2024061956-CVE-2024-38596-f660@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-38596",
        "https://www.cve.org/CVERecord?id=CVE-2024-38596"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "af_unix: Fix data races in unix_release_sock/unix_stream_sendmsg",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-11T12:42:26.758000+00:00",
      "provider": "vulnrichment"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$enterprise_linux",
        "redhat$PRODUCT$rhel_aus",
        "redhat$PRODUCT$rhel_e4s",
        "redhat$PRODUCT$rhel_eus",
        "redhat$PRODUCT$rhel_tus"
      ],
      "providers": [
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-362"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_linux:8::nfv",
      "cpe:/a:redhat:rhel_eus:9.2",
      "cpe:/a:redhat:rhel_eus:9.2::nfv",
      "cpe:/o:redhat:enterprise_linux:8",
      "cpe:/o:redhat:rhel_aus:8.6",
      "cpe:/o:redhat:rhel_e4s:8.6",
      "cpe:/o:redhat:rhel_eus:8.8",
      "cpe:/o:redhat:rhel_tus:8.6"
    ],
    "created": "2024-06-19T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\naf_unix: Fix data races in unix_release_sock/unix_stream_sendmsg\nA data-race condition has been identified in af_unix. In one data path,\nthe write function unix_release_sock() atomically writes to\nsk->sk_shutdown using WRITE_ONCE. However, on the reader side,\nunix_stream_sendmsg() does not read it atomically. Consequently, this\nissue is causing the following KCSAN splat to occur:\nBUG: KCSAN: data-race in unix_release_sock / unix_stream_sendmsg\nwrite (marked) to 0xffff88867256ddbb of 1 bytes by task 7270 on cpu 28:\nunix_release_sock (net/unix/af_unix.c:640)\nunix_release (net/unix/af_unix.c:1050)\nsock_close (net/socket.c:659 net/socket.c:1421)\n__fput (fs/file_table.c:422)\n__fput_sync (fs/file_table.c:508)\n__se_sys_close (fs/open.c:1559 fs/open.c:1541)\n__x64_sys_close (fs/open.c:1541)\nx64_sys_call (arch/x86/entry/syscall_64.c:33)\ndo_syscall_64 (arch/x86/entry/common.c:?)\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\nread to 0xffff88867256ddbb of 1 bytes by task 989 on cpu 14:\nunix_stream_sendmsg (net/unix/af_unix.c:2273)\n__sock_sendmsg (net/socket.c:730 net/socket.c:745)\n____sys_sendmsg (net/socket.c:2584)\n__sys_sendmmsg (net/socket.c:2638 net/socket.c:2724)\n__x64_sys_sendmmsg (net/socket.c:2753 net/socket.c:2750 net/socket.c:2750)\nx64_sys_call (arch/x86/entry/syscall_64.c:33)\ndo_syscall_64 (arch/x86/entry/common.c:?)\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\nvalue changed: 0x01 -> 0x03\nThe line numbers are related to commit dd5a440a31fa (\"Linux 6.9-rc7\").\nCommit e1d09c2c2f57 (\"af_unix: Fix data races around sk->sk_shutdown.\")\naddressed a comparable issue in the past regarding sk->sk_shutdown.\nHowever, it overlooked resolving this particular data path.\nThis patch only offending unix_stream_sendmsg() function, since the\nother reads seem to be protected by unix_state_lock() as discussed in",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.7,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-38596.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024061956-CVE-2024-38596-f660@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-38596",
      "https://www.cve.org/CVERecord?id=CVE-2024-38596"
    ],
    "title": "kernel: af_unix: Fix data races in unix_release_sock/unix_stream_sendmsg",
    "updated": "2024-06-19T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux",
      "redhat$PRODUCT$rhel_aus",
      "redhat$PRODUCT$rhel_e4s",
      "redhat$PRODUCT$rhel_eus",
      "redhat$PRODUCT$rhel_tus"
    ],
    "weaknesses": [
      "CWE-362"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-06-19T13:45:45.984000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix data races in unix_release_sock/unix_stream_sendmsg\n\nA data-race condition has been identified in af_unix. In one data path,\nthe write function unix_release_sock() atomically writes to\nsk->sk_shutdown using WRITE_ONCE. However, on the reader side,\nunix_stream_sendmsg() does not read it atomically. Consequently, this\nissue is causing the following KCSAN splat to occur:\n\n\tBUG: KCSAN: data-race in unix_release_sock / unix_stream_sendmsg\n\n\twrite (marked) to 0xffff88867256ddbb of 1 bytes by task 7270 on cpu 28:\n\tunix_release_sock (net/unix/af_unix.c:640)\n\tunix_release (net/unix/af_unix.c:1050)\n\tsock_close (net/socket.c:659 net/socket.c:1421)\n\t__fput (fs/file_table.c:422)\n\t__fput_sync (fs/file_table.c:508)\n\t__se_sys_close (fs/open.c:1559 fs/open.c:1541)\n\t__x64_sys_close (fs/open.c:1541)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tread to 0xffff88867256ddbb of 1 bytes by task 989 on cpu 14:\n\tunix_stream_sendmsg (net/unix/af_unix.c:2273)\n\t__sock_sendmsg (net/socket.c:730 net/socket.c:745)\n\t____sys_sendmsg (net/socket.c:2584)\n\t__sys_sendmmsg (net/socket.c:2638 net/socket.c:2724)\n\t__x64_sys_sendmmsg (net/socket.c:2753 net/socket.c:2750 net/socket.c:2750)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tvalue changed: 0x01 -> 0x03\n\nThe line numbers are related to commit dd5a440a31fa (\"Linux 6.9-rc7\").\n\nCommit e1d09c2c2f57 (\"af_unix: Fix data races around sk->sk_shutdown.\")\naddressed a comparable issue in the past regarding sk->sk_shutdown.\nHowever, it overlooked resolving this particular data path.\nThis patch only offending unix_stream_sendmsg() function, since the\nother reads seem to be protected by unix_state_lock() as discussed in",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "af_unix: Fix data races in unix_release_sock/unix_stream_sendmsg",
    "updated": "2024-09-11T12:42:26.758000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/38xxx/CVE-2024-38596.json",
    "weaknesses": []
  }
}