{
  "cve": "CVE-2024-27009",
  "mitre": {
    "cpes": [],
    "created": "2024-05-01T05:29:18.671000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cio: fix race condition during online processing\n\nA race condition exists in ccw_device_set_online() that can cause the\nonline process to fail, leaving the affected device in an inconsistent\nstate. As a result, subsequent attempts to set that device online fail\nwith return code ENODEV.\n\nThe problem occurs when a path verification request arrives after\na wait for final device state completed, but before the result state\nis evaluated.\n\nFix this by ensuring that the CCW-device lock is held between\ndetermining final state and checking result state.\n\nNote that since:\n\ncommit 2297791c92d0 (\"s390/cio: dont unregister subchannel from child-drivers\")\n\npath verification requests are much more likely to occur during boot,\nresulting in an increased chance of this race condition occurring.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/27xxx/CVE-2024-27009.json",
    "references": [
      "https://git.kernel.org/stable/c/2d8527f2f911fab84aec04df4788c0c23af3df48",
      "https://git.kernel.org/stable/c/2df56f4ea769ff81e51bbb05699989603bde9c49",
      "https://git.kernel.org/stable/c/3076b3c38a704e10df5e143c213653309d532538",
      "https://git.kernel.org/stable/c/559f3a6333397ab6cd4a696edd65a70b6be62c6e",
      "https://git.kernel.org/stable/c/a4234decd0fe429832ca81c4637be7248b88b49e"
    ],
    "title": "s390/cio: fix race condition during online processing",
    "updated": "2024-09-11T17:33:38.137000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-01T06:15:19.360000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cio: fix race condition during online processing\n\nA race condition exists in ccw_device_set_online() that can cause the\nonline process to fail, leaving the affected device in an inconsistent\nstate. As a result, subsequent attempts to set that device online fail\nwith return code ENODEV.\n\nThe problem occurs when a path verification request arrives after\na wait for final device state completed, but before the result state\nis evaluated.\n\nFix this by ensuring that the CCW-device lock is held between\ndetermining final state and checking result state.\n\nNote that since:\n\ncommit 2297791c92d0 (\"s390/cio: dont unregister subchannel from child-drivers\")\n\npath verification requests are much more likely to occur during boot,\nresulting in an increased chance of this race condition occurring.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-27009.json",
    "references": [
      "https://git.kernel.org/stable/c/2d8527f2f911fab84aec04df4788c0c23af3df48",
      "https://git.kernel.org/stable/c/2df56f4ea769ff81e51bbb05699989603bde9c49",
      "https://git.kernel.org/stable/c/3076b3c38a704e10df5e143c213653309d532538",
      "https://git.kernel.org/stable/c/559f3a6333397ab6cd4a696edd65a70b6be62c6e",
      "https://git.kernel.org/stable/c/a4234decd0fe429832ca81c4637be7248b88b49e"
    ],
    "title": null,
    "updated": "2024-05-13T08:15:11.870000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "433a3925-098b-43db-a7c0-8f3faac64b76"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-01T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cio: fix race condition during online processing\n\nA race condition exists in ccw_device_set_online() that can cause the\nonline process to fail, leaving the affected device in an inconsistent\nstate. As a result, subsequent attempts to set that device online fail\nwith return code ENODEV.\n\nThe problem occurs when a path verification request arrives after\na wait for final device state completed, but before the result state\nis evaluated.\n\nFix this by ensuring that the CCW-device lock is held between\ndetermining final state and checking result state.\n\nNote that since:\n\ncommit 2297791c92d0 (\"s390/cio: dont unregister subchannel from child-drivers\")\n\npath verification requests are much more likely to occur during boot,\nresulting in an increased chance of this race condition occurring.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/2d8527f2f911fab84aec04df4788c0c23af3df48",
        "https://git.kernel.org/stable/c/2df56f4ea769ff81e51bbb05699989603bde9c49",
        "https://git.kernel.org/stable/c/3076b3c38a704e10df5e143c213653309d532538",
        "https://git.kernel.org/stable/c/559f3a6333397ab6cd4a696edd65a70b6be62c6e",
        "https://git.kernel.org/stable/c/a4234decd0fe429832ca81c4637be7248b88b49e",
        "https://lore.kernel.org/linux-cve-announce/2024050148-CVE-2024-27009-d63d@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-27009",
        "https://www.cve.org/CVERecord?id=CVE-2024-27009"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "s390/cio: fix race condition during online processing",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-11T17:33:38.137000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-01T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ns390/cio: fix race condition during online processing\nA race condition exists in ccw_device_set_online() that can cause the\nonline process to fail, leaving the affected device in an inconsistent\nstate. As a result, subsequent attempts to set that device online fail\nwith return code ENODEV.\nThe problem occurs when a path verification request arrives after\na wait for final device state completed, but before the result state\nis evaluated.\nFix this by ensuring that the CCW-device lock is held between\ndetermining final state and checking result state.\nNote that since:\ncommit 2297791c92d0 (\"s390/cio: dont unregister subchannel from child-drivers\")\npath verification requests are much more likely to occur during boot,\nresulting in an increased chance of this race condition occurring.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-27009.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024050148-CVE-2024-27009-d63d@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-27009",
      "https://www.cve.org/CVERecord?id=CVE-2024-27009"
    ],
    "title": "kernel: s390/cio: fix race condition during online processing",
    "updated": "2024-05-01T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-01T05:29:18.671000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cio: fix race condition during online processing\n\nA race condition exists in ccw_device_set_online() that can cause the\nonline process to fail, leaving the affected device in an inconsistent\nstate. As a result, subsequent attempts to set that device online fail\nwith return code ENODEV.\n\nThe problem occurs when a path verification request arrives after\na wait for final device state completed, but before the result state\nis evaluated.\n\nFix this by ensuring that the CCW-device lock is held between\ndetermining final state and checking result state.\n\nNote that since:\n\ncommit 2297791c92d0 (\"s390/cio: dont unregister subchannel from child-drivers\")\n\npath verification requests are much more likely to occur during boot,\nresulting in an increased chance of this race condition occurring.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "s390/cio: fix race condition during online processing",
    "updated": "2024-09-11T12:42:17.776000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/27xxx/CVE-2024-27009.json",
    "weaknesses": []
  }
}