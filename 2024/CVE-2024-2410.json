{
  "cve": "CVE-2024-2410",
  "mitre": {
    "cpes": [],
    "created": "2024-05-03T12:58:39.449000+00:00",
    "description": "The JsonToBinaryStream() function is part of the protocol buffers C++ implementation and is used to parse JSON from a stream. If the input is broken up into separate chunks in a certain way, the parser will attempt to read bytes from a chunk that has already been freed. \n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.6,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/2xxx/CVE-2024-2410.json",
    "references": [
      "https://github.com/protocolbuffers/protobuf/releases/tag/v25.0"
    ],
    "title": "Use after free in C++ protobuf",
    "updated": "2024-08-01T19:11:53.511000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-416"
    ]
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-03T13:15:21.700000+00:00",
    "description": "The JsonToBinaryStream() function is part of the protocol buffers C++ implementation and is used to parse JSON from a stream. If the input is broken up into separate chunks in a certain way, the parser will attempt to read bytes from a chunk that has already been freed. \n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.6,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-2410.json",
    "references": [
      "https://github.com/protocolbuffers/protobuf/releases/tag/v25.0"
    ],
    "title": null,
    "updated": "2024-05-03T14:17:53.690000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-416"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-03T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "The JsonToBinaryStream() function is part of the protocol buffers C++ implementation and is used to parse JSON from a stream. If the input is broken up into separate chunks in a certain way, the parser will attempt to read bytes from a chunk that has already been freed. \n",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.6,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/advisories/GHSA-h86c-v8g6-46f2",
        "https://github.com/protocolbuffers/protobuf/releases/tag/v25.0",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-2410",
        "https://www.cve.org/CVERecord?id=CVE-2024-2410"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "Use after free in C++ protobuf",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-01T19:11:53.511000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-416"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-03T00:00:00+00:00",
    "description": "The JsonToBinaryStream() function is part of the protocol buffers C++ implementation and is used to parse JSON from a stream. If the input is broken up into separate chunks in a certain way, the parser will attempt to read bytes from a chunk that has already been freed. ",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-2410.json",
    "references": [
      "https://github.com/advisories/GHSA-h86c-v8g6-46f2",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-2410",
      "https://www.cve.org/CVERecord?id=CVE-2024-2410"
    ],
    "title": "protobuf: Use-after-free in JsonToBinaryStream()",
    "updated": "2024-05-03T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-416"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-03T12:58:39.449000+00:00",
    "description": "The JsonToBinaryStream() function is part of the protocol buffers C++ implementation and is used to parse JSON from a stream. If the input is broken up into separate chunks in a certain way, the parser will attempt to read bytes from a chunk that has already been freed. \n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://github.com/protocolbuffers/protobuf/releases/tag/v25.0"
    ],
    "title": "Use after free in C++ protobuf",
    "updated": "2024-08-01T19:11:53.511000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/2xxx/CVE-2024-2410.json",
    "weaknesses": []
  }
}