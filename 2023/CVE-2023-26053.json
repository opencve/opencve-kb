{
  "cve": "CVE-2023-26053",
  "mitre": {
    "cpes": [],
    "created": "2023-03-02T03:11:31.488000+00:00",
    "description": "Gradle is a build tool with a focus on build automation and support for multi-language development. This is a collision attack on long IDs (64bits) for PGP keys. Users of dependency verification in Gradle are vulnerable if they use long IDs for PGP keys in a `trusted-key` or `pgp` element in their dependency verification metadata file. The fix is to fail dependency verification if anything but a fingerprint is used in a trust element in dependency verification metadata. The problem is fixed in Gradle 8.0 and above. The problem is also patched in Gradle 6.9.4 and 7.6.1. As a workaround, use only full fingerprint IDs for `trusted-key` or `pgp` element in the metadata is a protection against this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.6,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/26xxx/CVE-2023-26053.json",
    "references": [
      "https://github.com/gradle/gradle/commit/bf3cc0f2b463033037e67aaacda31291643ea1a9",
      "https://github.com/gradle/gradle/security/advisories/GHSA-c724-3xg7-g3hf",
      "https://security.netapp.com/advisory/ntap-20230413-0002/"
    ],
    "title": "Gradle usage of long IDs for PGP keys opens potential for collision attacks",
    "updated": "2024-08-02T11:39:06.583000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-829"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:gradle:gradle:*:*:*:*:*:*:*:*"
    ],
    "created": "2023-03-02T04:15:11.147000+00:00",
    "description": "Gradle is a build tool with a focus on build automation and support for multi-language development. This is a collision attack on long IDs (64bits) for PGP keys. Users of dependency verification in Gradle are vulnerable if they use long IDs for PGP keys in a `trusted-key` or `pgp` element in their dependency verification metadata file. The fix is to fail dependency verification if anything but a fingerprint is used in a trust element in dependency verification metadata. The problem is fixed in Gradle 8.0 and above. The problem is also patched in Gradle 6.9.4 and 7.6.1. As a workaround, use only full fingerprint IDs for `trusted-key` or `pgp` element in the metadata is a protection against this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 9.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-26053.json",
    "references": [
      "https://github.com/gradle/gradle/commit/bf3cc0f2b463033037e67aaacda31291643ea1a9",
      "https://github.com/gradle/gradle/security/advisories/GHSA-c724-3xg7-g3hf",
      "https://security.netapp.com/advisory/ntap-20230413-0002/"
    ],
    "title": null,
    "updated": "2023-04-13T17:15:13.577000+00:00",
    "vendors": [
      "gradle",
      "gradle$PRODUCT$gradle"
    ],
    "weaknesses": [
      "CWE-829"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:gradle:gradle:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-02-28T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "Gradle is a build tool with a focus on build automation and support for multi-language development. This is a collision attack on long IDs (64bits) for PGP keys. Users of dependency verification in Gradle are vulnerable if they use long IDs for PGP keys in a `trusted-key` or `pgp` element in their dependency verification metadata file. The fix is to fail dependency verification if anything but a fingerprint is used in a trust element in dependency verification metadata. The problem is fixed in Gradle 8.0 and above. The problem is also patched in Gradle 6.9.4 and 7.6.1. As a workaround, use only full fingerprint IDs for `trusted-key` or `pgp` element in the metadata is a protection against this issue.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.6,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/gradle/gradle/commit/bf3cc0f2b463033037e67aaacda31291643ea1a9",
        "https://github.com/gradle/gradle/security/advisories/GHSA-c724-3xg7-g3hf",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-26053",
        "https://security.netapp.com/advisory/ntap-20230413-0002/",
        "https://www.cve.org/CVERecord?id=CVE-2023-26053"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "Gradle usage of long IDs for PGP keys opens potential for collision attacks",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T11:39:06.583000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "gradle",
        "gradle$PRODUCT$gradle"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-829"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2023-02-28T00:00:00+00:00",
    "description": "Gradle is a build tool with a focus on build automation and support for multi-language development. This is a collision attack on long IDs (64bits) for PGP keys. Users of dependency verification in Gradle are vulnerable if they use long IDs for PGP keys in a `trusted-key` or `pgp` element in their dependency verification metadata file. The fix is to fail dependency verification if anything but a fingerprint is used in a trust element in dependency verification metadata. The problem is fixed in Gradle 8.0 and above. The problem is also patched in Gradle 6.9.4 and 7.6.1. As a workaround, use only full fingerprint IDs for `trusted-key` or `pgp` element in the metadata is a protection against this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.6,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2023/CVE-2023-26053.json",
    "references": [
      "https://github.com/gradle/gradle/security/advisories/GHSA-c724-3xg7-g3hf",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-26053",
      "https://www.cve.org/CVERecord?id=CVE-2023-26053"
    ],
    "title": "gradle: usage of long IDs for PGP keys is unsafe and is subject to collision attacks",
    "updated": "2023-02-28T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-829"
    ]
  }
}