{
  "cve": "CVE-2018-10470",
  "mitre": {
    "cpes": [],
    "created": "2018-06-12T17:00:00+00:00",
    "description": "Little Snitch versions 4.0 to 4.0.6 use the SecStaticCodeCheckValidityWithErrors() function without the kSecCSCheckAllArchitectures flag and therefore do not validate all architectures stored in a fat binary. An attacker can maliciously craft a fat binary containing multiple architectures that may cause a situation where Little Snitch treats the running process as having no code signature at all while erroneously indicating that the binary on disk does have a valid code signature. This could lead to users being confused about whether or not the code signature is valid.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2018/10xxx/CVE-2018-10470.json",
    "references": [
      "https://obdev.at/cve/2018-10470-8FRWkW4oH8.html",
      "https://www.okta.com/security-blog/2018/06/issues-around-third-party-apple-code-signing-checks/"
    ],
    "title": null,
    "updated": "2024-09-16T21:03:03.661000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-347"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:objective_development:little_snitch:*:*:*:*:*:*:*:*",
      "cpe:2.3:o:apple:macos:-:*:*:*:*:*:*:*"
    ],
    "created": "2018-06-12T17:29:00.207000+00:00",
    "description": "Little Snitch versions 4.0 to 4.0.6 use the SecStaticCodeCheckValidityWithErrors() function without the kSecCSCheckAllArchitectures flag and therefore do not validate all architectures stored in a fat binary. An attacker can maliciously craft a fat binary containing multiple architectures that may cause a situation where Little Snitch treats the running process as having no code signature at all while erroneously indicating that the binary on disk does have a valid code signature. This could lead to users being confused about whether or not the code signature is valid.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2018/CVE-2018-10470.json",
    "references": [
      "https://obdev.at/cve/2018-10470-8FRWkW4oH8.html",
      "https://www.okta.com/security-blog/2018/06/issues-around-third-party-apple-code-signing-checks/"
    ],
    "title": null,
    "updated": "2023-11-07T02:51:28.670000+00:00",
    "vendors": [
      "apple",
      "apple$PRODUCT$macos",
      "objective_development",
      "objective_development$PRODUCT$little_snitch"
    ],
    "weaknesses": [
      "CWE-347"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:objective_development:little_snitch:*:*:*:*:*:*:*:*",
        "cpe:2.3:o:apple:macos:-:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2018-06-12T17:00:00+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "Little Snitch versions 4.0 to 4.0.6 use the SecStaticCodeCheckValidityWithErrors() function without the kSecCSCheckAllArchitectures flag and therefore do not validate all architectures stored in a fat binary. An attacker can maliciously craft a fat binary containing multiple architectures that may cause a situation where Little Snitch treats the running process as having no code signature at all while erroneously indicating that the binary on disk does have a valid code signature. This could lead to users being confused about whether or not the code signature is valid.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.0,
          "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.3,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://obdev.at/cve/2018-10470-8FRWkW4oH8.html",
        "https://www.okta.com/security-blog/2018/06/issues-around-third-party-apple-code-signing-checks/"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2024-09-16T21:03:03.661000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "apple",
        "apple$PRODUCT$macos",
        "objective_development",
        "objective_development$PRODUCT$little_snitch"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-347"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}