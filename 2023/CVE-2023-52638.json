{
  "cve": "CVE-2023-52638",
  "mitre": {
    "cpes": [],
    "created": "2024-04-03T14:54:41.271000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: prevent deadlock by changing j1939_socks_lock to rwlock\n\nThe following 3 locks would race against each other, causing the\ndeadlock situation in the Syzbot bug report:\n\n- j1939_socks_lock\n- active_session_list_lock\n- sk_session_queue_lock\n\nA reasonable fix is to change j1939_socks_lock to an rwlock, since in\nthe rare situations where a write lock is required for the linked list\nthat j1939_socks_lock is protecting, the code does not attempt to\nacquire any more locks. This would break the circular lock dependency,\nwhere, for example, the current thread already locks j1939_socks_lock\nand attempts to acquire sk_session_queue_lock, and at the same time,\nanother thread attempts to acquire j1939_socks_lock while holding\nsk_session_queue_lock.\n\nNOTE: This patch along does not fix the unregister_netdevice bug\nreported by Syzbot; instead, it solves a deadlock situation to prepare\nfor one or more further patches to actually fix the Syzbot bug, which\nappears to be a reference counting problem within the j1939 codebase.\n\n[mkl: remove unrelated newline change]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/52xxx/CVE-2023-52638.json",
    "references": [
      "https://git.kernel.org/stable/c/03358aba991668d3bb2c65b3c82aa32c36851170",
      "https://git.kernel.org/stable/c/26dfe112ec2e95fe0099681f6aec33da13c2dd8e",
      "https://git.kernel.org/stable/c/559b6322f9480bff68cfa98d108991e945a4f284",
      "https://git.kernel.org/stable/c/6cdedc18ba7b9dacc36466e27e3267d201948c8d",
      "https://git.kernel.org/stable/c/aedda066d717a0b4335d7e0a00b2e3a61e40afcf"
    ],
    "title": "can: j1939: prevent deadlock by changing j1939_socks_lock to rwlock",
    "updated": "2024-08-02T23:03:21.237000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-04-03T15:15:51.417000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: prevent deadlock by changing j1939_socks_lock to rwlock\n\nThe following 3 locks would race against each other, causing the\ndeadlock situation in the Syzbot bug report:\n\n- j1939_socks_lock\n- active_session_list_lock\n- sk_session_queue_lock\n\nA reasonable fix is to change j1939_socks_lock to an rwlock, since in\nthe rare situations where a write lock is required for the linked list\nthat j1939_socks_lock is protecting, the code does not attempt to\nacquire any more locks. This would break the circular lock dependency,\nwhere, for example, the current thread already locks j1939_socks_lock\nand attempts to acquire sk_session_queue_lock, and at the same time,\nanother thread attempts to acquire j1939_socks_lock while holding\nsk_session_queue_lock.\n\nNOTE: This patch along does not fix the unregister_netdevice bug\nreported by Syzbot; instead, it solves a deadlock situation to prepare\nfor one or more further patches to actually fix the Syzbot bug, which\nappears to be a reference counting problem within the j1939 codebase.\n\n[mkl: remove unrelated newline change]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-52638.json",
    "references": [
      "https://git.kernel.org/stable/c/03358aba991668d3bb2c65b3c82aa32c36851170",
      "https://git.kernel.org/stable/c/26dfe112ec2e95fe0099681f6aec33da13c2dd8e",
      "https://git.kernel.org/stable/c/559b6322f9480bff68cfa98d108991e945a4f284",
      "https://git.kernel.org/stable/c/6cdedc18ba7b9dacc36466e27e3267d201948c8d",
      "https://git.kernel.org/stable/c/aedda066d717a0b4335d7e0a00b2e3a61e40afcf"
    ],
    "title": null,
    "updated": "2024-04-03T17:24:18.150000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_linux:9",
        "cpe:/a:redhat:rhel_eus:9.2",
        "cpe:/a:redhat:rhel_eus:9.2::nfv",
        "cpe:/o:redhat:enterprise_linux:9"
      ],
      "providers": [
        "redhat"
      ]
    },
    "created": {
      "data": "2024-04-03T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: prevent deadlock by changing j1939_socks_lock to rwlock\n\nThe following 3 locks would race against each other, causing the\ndeadlock situation in the Syzbot bug report:\n\n- j1939_socks_lock\n- active_session_list_lock\n- sk_session_queue_lock\n\nA reasonable fix is to change j1939_socks_lock to an rwlock, since in\nthe rare situations where a write lock is required for the linked list\nthat j1939_socks_lock is protecting, the code does not attempt to\nacquire any more locks. This would break the circular lock dependency,\nwhere, for example, the current thread already locks j1939_socks_lock\nand attempts to acquire sk_session_queue_lock, and at the same time,\nanother thread attempts to acquire j1939_socks_lock while holding\nsk_session_queue_lock.\n\nNOTE: This patch along does not fix the unregister_netdevice bug\nreported by Syzbot; instead, it solves a deadlock situation to prepare\nfor one or more further patches to actually fix the Syzbot bug, which\nappears to be a reference counting problem within the j1939 codebase.\n\n[mkl: remove unrelated newline change]",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/03358aba991668d3bb2c65b3c82aa32c36851170",
        "https://git.kernel.org/stable/c/26dfe112ec2e95fe0099681f6aec33da13c2dd8e",
        "https://git.kernel.org/stable/c/559b6322f9480bff68cfa98d108991e945a4f284",
        "https://git.kernel.org/stable/c/6cdedc18ba7b9dacc36466e27e3267d201948c8d",
        "https://git.kernel.org/stable/c/aedda066d717a0b4335d7e0a00b2e3a61e40afcf",
        "https://lore.kernel.org/linux-cve-announce/2024040334-CVE-2023-52638-26a6@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-52638",
        "https://www.cve.org/CVERecord?id=CVE-2023-52638"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "can: j1939: prevent deadlock by changing j1939_socks_lock to rwlock",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T23:03:21.237000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$enterprise_linux",
        "redhat$PRODUCT$rhel_eus"
      ],
      "providers": [
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-833"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_linux:9",
      "cpe:/a:redhat:rhel_eus:9.2",
      "cpe:/a:redhat:rhel_eus:9.2::nfv",
      "cpe:/o:redhat:enterprise_linux:9"
    ],
    "created": "2024-04-03T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ncan: j1939: prevent deadlock by changing j1939_socks_lock to rwlock\nThe following 3 locks would race against each other, causing the\ndeadlock situation in the Syzbot bug report:\n- j1939_socks_lock\n- active_session_list_lock\n- sk_session_queue_lock\nA reasonable fix is to change j1939_socks_lock to an rwlock, since in\nthe rare situations where a write lock is required for the linked list\nthat j1939_socks_lock is protecting, the code does not attempt to\nacquire any more locks. This would break the circular lock dependency,\nwhere, for example, the current thread already locks j1939_socks_lock\nand attempts to acquire sk_session_queue_lock, and at the same time,\nanother thread attempts to acquire j1939_socks_lock while holding\nsk_session_queue_lock.\nNOTE: This patch along does not fix the unregister_netdevice bug\nreported by Syzbot; instead, it solves a deadlock situation to prepare\nfor one or more further patches to actually fix the Syzbot bug, which\nappears to be a reference counting problem within the j1939 codebase.\n[mkl: remove unrelated newline change]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2023/CVE-2023-52638.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024040334-CVE-2023-52638-26a6@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-52638",
      "https://www.cve.org/CVERecord?id=CVE-2023-52638"
    ],
    "title": "kernel: can: j1939: prevent deadlock by changing j1939_socks_lock to rwlock",
    "updated": "2024-04-03T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux",
      "redhat$PRODUCT$rhel_eus"
    ],
    "weaknesses": [
      "CWE-833"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-04-03T14:54:41.271000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: prevent deadlock by changing j1939_socks_lock to rwlock\n\nThe following 3 locks would race against each other, causing the\ndeadlock situation in the Syzbot bug report:\n\n- j1939_socks_lock\n- active_session_list_lock\n- sk_session_queue_lock\n\nA reasonable fix is to change j1939_socks_lock to an rwlock, since in\nthe rare situations where a write lock is required for the linked list\nthat j1939_socks_lock is protecting, the code does not attempt to\nacquire any more locks. This would break the circular lock dependency,\nwhere, for example, the current thread already locks j1939_socks_lock\nand attempts to acquire sk_session_queue_lock, and at the same time,\nanother thread attempts to acquire j1939_socks_lock while holding\nsk_session_queue_lock.\n\nNOTE: This patch along does not fix the unregister_netdevice bug\nreported by Syzbot; instead, it solves a deadlock situation to prepare\nfor one or more further patches to actually fix the Syzbot bug, which\nappears to be a reference counting problem within the j1939 codebase.\n\n[mkl: remove unrelated newline change]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/03358aba991668d3bb2c65b3c82aa32c36851170",
      "https://git.kernel.org/stable/c/26dfe112ec2e95fe0099681f6aec33da13c2dd8e",
      "https://git.kernel.org/stable/c/559b6322f9480bff68cfa98d108991e945a4f284",
      "https://git.kernel.org/stable/c/6cdedc18ba7b9dacc36466e27e3267d201948c8d",
      "https://git.kernel.org/stable/c/aedda066d717a0b4335d7e0a00b2e3a61e40afcf"
    ],
    "title": "can: j1939: prevent deadlock by changing j1939_socks_lock to rwlock",
    "updated": "2024-08-02T23:03:21.237000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2023/52xxx/CVE-2023-52638.json",
    "weaknesses": []
  }
}