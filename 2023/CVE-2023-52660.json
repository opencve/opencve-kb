{
  "cve": "CVE-2023-52660",
  "mitre": {
    "cpes": [],
    "created": "2024-05-17T12:08:39.897000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: rkisp1: Fix IRQ handling due to shared interrupts\n\nThe driver requests the interrupts as IRQF_SHARED, so the interrupt\nhandlers can be called at any time. If such a call happens while the ISP\nis powered down, the SoC will hang as the driver tries to access the\nISP registers.\n\nThis can be reproduced even without the platform sharing the IRQ line:\nEnable CONFIG_DEBUG_SHIRQ and unload the driver, and the board will\nhang.\n\nFix this by adding a new field, 'irqs_enabled', which is used to bail\nout from the interrupt handler when the ISP is not operational.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/52xxx/CVE-2023-52660.json",
    "references": [
      "https://git.kernel.org/stable/c/abd34206f396d3ae50cddbd5aa840b8cd7f68c63",
      "https://git.kernel.org/stable/c/b39b4d207d4f236a74e20d291f6356f2231fd9ee",
      "https://git.kernel.org/stable/c/edcf92bc66d8361c51dff953a55210e5cfd95587",
      "https://git.kernel.org/stable/c/ffb635bb398fc07cb38f8a7b4a82cbe5f412f08e"
    ],
    "title": "media: rkisp1: Fix IRQ handling due to shared interrupts",
    "updated": "2024-08-02T23:03:21.359000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-17T13:15:57.770000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: rkisp1: Fix IRQ handling due to shared interrupts\n\nThe driver requests the interrupts as IRQF_SHARED, so the interrupt\nhandlers can be called at any time. If such a call happens while the ISP\nis powered down, the SoC will hang as the driver tries to access the\nISP registers.\n\nThis can be reproduced even without the platform sharing the IRQ line:\nEnable CONFIG_DEBUG_SHIRQ and unload the driver, and the board will\nhang.\n\nFix this by adding a new field, 'irqs_enabled', which is used to bail\nout from the interrupt handler when the ISP is not operational.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-52660.json",
    "references": [
      "https://git.kernel.org/stable/c/abd34206f396d3ae50cddbd5aa840b8cd7f68c63",
      "https://git.kernel.org/stable/c/b39b4d207d4f236a74e20d291f6356f2231fd9ee",
      "https://git.kernel.org/stable/c/edcf92bc66d8361c51dff953a55210e5cfd95587",
      "https://git.kernel.org/stable/c/ffb635bb398fc07cb38f8a7b4a82cbe5f412f08e"
    ],
    "title": null,
    "updated": "2024-05-17T18:35:35.070000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-17T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: rkisp1: Fix IRQ handling due to shared interrupts\n\nThe driver requests the interrupts as IRQF_SHARED, so the interrupt\nhandlers can be called at any time. If such a call happens while the ISP\nis powered down, the SoC will hang as the driver tries to access the\nISP registers.\n\nThis can be reproduced even without the platform sharing the IRQ line:\nEnable CONFIG_DEBUG_SHIRQ and unload the driver, and the board will\nhang.\n\nFix this by adding a new field, 'irqs_enabled', which is used to bail\nout from the interrupt handler when the ISP is not operational.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/abd34206f396d3ae50cddbd5aa840b8cd7f68c63",
        "https://git.kernel.org/stable/c/b39b4d207d4f236a74e20d291f6356f2231fd9ee",
        "https://git.kernel.org/stable/c/edcf92bc66d8361c51dff953a55210e5cfd95587",
        "https://git.kernel.org/stable/c/ffb635bb398fc07cb38f8a7b4a82cbe5f412f08e",
        "https://lore.kernel.org/linux-cve-announce/2024051755-CVE-2023-52660-6eac@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-52660",
        "https://www.cve.org/CVERecord?id=CVE-2023-52660"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "media: rkisp1: Fix IRQ handling due to shared interrupts",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T23:03:21.359000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-17T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nmedia: rkisp1: Fix IRQ handling due to shared interrupts\nThe driver requests the interrupts as IRQF_SHARED, so the interrupt\nhandlers can be called at any time. If such a call happens while the ISP\nis powered down, the SoC will hang as the driver tries to access the\nISP registers.\nThis can be reproduced even without the platform sharing the IRQ line:\nEnable CONFIG_DEBUG_SHIRQ and unload the driver, and the board will\nhang.\nFix this by adding a new field, 'irqs_enabled', which is used to bail\nout from the interrupt handler when the ISP is not operational.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2023/CVE-2023-52660.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024051755-CVE-2023-52660-6eac@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-52660",
      "https://www.cve.org/CVERecord?id=CVE-2023-52660"
    ],
    "title": "kernel: media: rkisp1: Fix IRQ handling due to shared interrupts",
    "updated": "2024-05-17T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-17T12:08:39.897000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: rkisp1: Fix IRQ handling due to shared interrupts\n\nThe driver requests the interrupts as IRQF_SHARED, so the interrupt\nhandlers can be called at any time. If such a call happens while the ISP\nis powered down, the SoC will hang as the driver tries to access the\nISP registers.\n\nThis can be reproduced even without the platform sharing the IRQ line:\nEnable CONFIG_DEBUG_SHIRQ and unload the driver, and the board will\nhang.\n\nFix this by adding a new field, 'irqs_enabled', which is used to bail\nout from the interrupt handler when the ISP is not operational.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/abd34206f396d3ae50cddbd5aa840b8cd7f68c63",
      "https://git.kernel.org/stable/c/b39b4d207d4f236a74e20d291f6356f2231fd9ee",
      "https://git.kernel.org/stable/c/edcf92bc66d8361c51dff953a55210e5cfd95587",
      "https://git.kernel.org/stable/c/ffb635bb398fc07cb38f8a7b4a82cbe5f412f08e"
    ],
    "title": "media: rkisp1: Fix IRQ handling due to shared interrupts",
    "updated": "2024-08-02T23:03:21.359000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2023/52xxx/CVE-2023-52660.json",
    "weaknesses": []
  }
}