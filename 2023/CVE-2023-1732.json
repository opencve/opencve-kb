{
  "cve": "CVE-2023-1732",
  "mitre": {
    "cpes": [],
    "created": "2023-05-10T11:41:53.902000+00:00",
    "description": "When sampling randomness for a shared secret, the implementation of Kyber and FrodoKEM, did not check whether crypto/rand.Read() returns an error. In rare deployment cases (error thrown by the Read() function), this could lead to a predictable shared secret.\n\nThe tkn20 and blindrsa components did not check whether enough randomness was returned from the user provided randomness source. Typically the user provides crypto/rand.Reader, which in the vast majority of cases will always return the right number random bytes. In the cases where it does not, or the user provides a source that does not, the blinding for blindrsa is weak and integrity of the plaintext is not ensured in tkn20.\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/1xxx/CVE-2023-1732.json",
    "references": [
      "https://github.com/cloudflare/circl/security/advisories/GHSA-2q89-485c-9j2x"
    ],
    "title": "Improper random reading in CIRCL",
    "updated": "2024-08-02T05:57:24.987000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-20",
      "CWE-755"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:cloudflare:circl:*:*:*:*:*:go:*:*"
    ],
    "created": "2023-05-10T12:15:10.523000+00:00",
    "description": "When sampling randomness for a shared secret, the implementation of Kyber and FrodoKEM, did not check whether crypto/rand.Read() returns an error. In rare deployment cases (error thrown by the Read() function), this could lead to a predictable shared secret.\n\nThe tkn20 and blindrsa components did not check whether enough randomness was returned from the user provided randomness source. Typically the user provides crypto/rand.Reader, which in the vast majority of cases will always return the right number random bytes. In the cases where it does not, or the user provides a source that does not, the blinding for blindrsa is weak and integrity of the plaintext is not ensured in tkn20.\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.2,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-1732.json",
    "references": [
      "https://github.com/cloudflare/circl/security/advisories/GHSA-2q89-485c-9j2x"
    ],
    "title": null,
    "updated": "2023-05-17T17:04:45.347000+00:00",
    "vendors": [
      "cloudflare",
      "cloudflare$PRODUCT$circl"
    ],
    "weaknesses": [
      "CWE-20",
      "CWE-755"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:cloudflare:circl:*:*:*:*:*:go:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-05-10T11:41:53.902000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "When sampling randomness for a shared secret, the implementation of Kyber and FrodoKEM, did not check whether crypto/rand.Read() returns an error. In rare deployment cases (error thrown by the Read() function), this could lead to a predictable shared secret.\n\nThe tkn20 and blindrsa components did not check whether enough randomness was returned from the user provided randomness source. Typically the user provides crypto/rand.Reader, which in the vast majority of cases will always return the right number random bytes. In the cases where it does not, or the user provides a source that does not, the blinding for blindrsa is weak and integrity of the plaintext is not ensured in tkn20.\n\n",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.3,
          "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/cloudflare/circl/security/advisories/GHSA-2q89-485c-9j2x"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Improper random reading in CIRCL",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T05:57:24.987000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "cloudflare",
        "cloudflare$PRODUCT$circl"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-20",
        "CWE-755"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}