{
  "cve": "CVE-2023-39523",
  "mitre": {
    "cpes": [],
    "created": "2023-08-07T20:55:46.855000+00:00",
    "description": "ScanCode.io is a server to script and automate software composition analysis with ScanPipe pipelines. Prior to version 32.5.1, the software has a possible command injection vulnerability in the docker fetch process as it allows to append malicious commands in the `docker_reference` parameter.\n\nIn the function `scanpipe/pipes/fetch.py:fetch_docker_image` the parameter `docker_reference` is user controllable. The `docker_reference` variable is then passed to the vulnerable function `get_docker_image_platform`.  However, the `get_docker_image_plaform` function constructs a shell command with the passed `docker_reference`. The `pipes.run_command` then executes the shell command without any prior sanitization, making the function vulnerable to command injections. A malicious user who is able to create or add inputs to a project can inject commands. Although the command injections are blind and the user will not receive direct feedback without logs, it is still possible to cause damage to the server/container. The vulnerability appears for example if a malicious user adds a semicolon after the input of `docker://;`, it would allow appending malicious commands.\n\nVersion 32.5.1 contains a patch for this issue. The `docker_reference` input should be sanitized to avoid command injections and, as a workaround, one may avoid creating commands with user controlled input directly.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.8,
        "vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:H"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/39xxx/CVE-2023-39523.json",
    "references": [
      "https://github.com/nexB/scancode.io/blob/main/scanpipe/pipes/fetch.py#L185",
      "https://github.com/nexB/scancode.io/commit/07ec0de1964b14bf085a1c9a27ece2b61ab6105c",
      "https://github.com/nexB/scancode.io/releases/tag/v32.5.1",
      "https://github.com/nexB/scancode.io/security/advisories/GHSA-2ggp-cmvm-f62f"
    ],
    "title": "ScanCode.io command injection in docker image fetch process",
    "updated": "2024-10-03T16:00:56.672000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-77"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:nexb:scancode.io:*:*:*:*:*:*:*:*"
    ],
    "created": "2023-08-07T21:15:09.553000+00:00",
    "description": "ScanCode.io is a server to script and automate software composition analysis with ScanPipe pipelines. Prior to version 32.5.1, the software has a possible command injection vulnerability in the docker fetch process as it allows to append malicious commands in the `docker_reference` parameter.\n\nIn the function `scanpipe/pipes/fetch.py:fetch_docker_image` the parameter `docker_reference` is user controllable. The `docker_reference` variable is then passed to the vulnerable function `get_docker_image_platform`.  However, the `get_docker_image_plaform` function constructs a shell command with the passed `docker_reference`. The `pipes.run_command` then executes the shell command without any prior sanitization, making the function vulnerable to command injections. A malicious user who is able to create or add inputs to a project can inject commands. Although the command injections are blind and the user will not receive direct feedback without logs, it is still possible to cause damage to the server/container. The vulnerability appears for example if a malicious user adds a semicolon after the input of `docker://;`, it would allow appending malicious commands.\n\nVersion 32.5.1 contains a patch for this issue. The `docker_reference` input should be sanitized to avoid command injections and, as a workaround, one may avoid creating commands with user controlled input directly.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-39523.json",
    "references": [
      "https://github.com/nexB/scancode.io/blob/main/scanpipe/pipes/fetch.py#L185",
      "https://github.com/nexB/scancode.io/commit/07ec0de1964b14bf085a1c9a27ece2b61ab6105c",
      "https://github.com/nexB/scancode.io/releases/tag/v32.5.1",
      "https://github.com/nexB/scancode.io/security/advisories/GHSA-2ggp-cmvm-f62f"
    ],
    "title": null,
    "updated": "2023-08-11T18:12:57.827000+00:00",
    "vendors": [
      "nexb",
      "nexb$PRODUCT$scancode.io"
    ],
    "weaknesses": [
      "CWE-77"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:nexb:scancode.io:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-08-07T20:55:46.855000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "ScanCode.io is a server to script and automate software composition analysis with ScanPipe pipelines. Prior to version 32.5.1, the software has a possible command injection vulnerability in the docker fetch process as it allows to append malicious commands in the `docker_reference` parameter.\n\nIn the function `scanpipe/pipes/fetch.py:fetch_docker_image` the parameter `docker_reference` is user controllable. The `docker_reference` variable is then passed to the vulnerable function `get_docker_image_platform`.  However, the `get_docker_image_plaform` function constructs a shell command with the passed `docker_reference`. The `pipes.run_command` then executes the shell command without any prior sanitization, making the function vulnerable to command injections. A malicious user who is able to create or add inputs to a project can inject commands. Although the command injections are blind and the user will not receive direct feedback without logs, it is still possible to cause damage to the server/container. The vulnerability appears for example if a malicious user adds a semicolon after the input of `docker://;`, it would allow appending malicious commands.\n\nVersion 32.5.1 contains a patch for this issue. The `docker_reference` input should be sanitized to avoid command injections and, as a workaround, one may avoid creating commands with user controlled input directly.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.8,
          "vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:H"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/nexB/scancode.io/blob/main/scanpipe/pipes/fetch.py#L185",
        "https://github.com/nexB/scancode.io/commit/07ec0de1964b14bf085a1c9a27ece2b61ab6105c",
        "https://github.com/nexB/scancode.io/releases/tag/v32.5.1",
        "https://github.com/nexB/scancode.io/security/advisories/GHSA-2ggp-cmvm-f62f"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "ScanCode.io command injection in docker image fetch process",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-10-03T16:00:56.672000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "nexb",
        "nexb$PRODUCT$scancode.io"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-77"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}