{
  "cve": "CVE-2018-1000005",
  "mitre": {
    "cpes": [],
    "created": "2018-01-24T22:00:00+00:00",
    "description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2018/1000xxx/CVE-2018-1000005.json",
    "references": [
      "http://www.securitytracker.com/id/1040273",
      "https://access.redhat.com/errata/RHSA-2019:1543",
      "https://curl.haxx.se/docs/adv_2018-824a.html",
      "https://github.com/curl/curl/pull/2231",
      "https://usn.ubuntu.com/3554-1/",
      "https://www.debian.org/security/2018/dsa-4098"
    ],
    "title": null,
    "updated": "2024-08-05T12:33:49.200000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:haxx:libcurl:*:*:*:*:*:*:*:*",
      "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*",
      "cpe:2.3:o:canonical:ubuntu_linux:16.04:*:*:*:lts:*:*:*",
      "cpe:2.3:o:canonical:ubuntu_linux:17.10:*:*:*:*:*:*:*",
      "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*",
      "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*"
    ],
    "created": "2018-01-24T22:29:00.307000+00:00",
    "description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
    "metrics": {
      "cvssV2_0": {
        "score": 6.4,
        "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:P"
      },
      "cvssV3_0": {
        "score": 9.1,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2018/CVE-2018-1000005.json",
    "references": [
      "http://www.securitytracker.com/id/1040273",
      "https://access.redhat.com/errata/RHSA-2019:1543",
      "https://curl.haxx.se/docs/adv_2018-824a.html",
      "https://github.com/curl/curl/pull/2231",
      "https://usn.ubuntu.com/3554-1/",
      "https://www.debian.org/security/2018/dsa-4098"
    ],
    "title": null,
    "updated": "2019-06-18T22:15:11.153000+00:00",
    "vendors": [
      "canonical",
      "canonical$PRODUCT$ubuntu_linux",
      "debian",
      "debian$PRODUCT$debian_linux",
      "haxx",
      "haxx$PRODUCT$libcurl"
    ],
    "weaknesses": [
      "CWE-125"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:jboss_core_services:1",
        "cpe:2.3:a:haxx:libcurl:*:*:*:*:*:*:*:*",
        "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*",
        "cpe:2.3:o:canonical:ubuntu_linux:16.04:*:*:*:lts:*:*:*",
        "cpe:2.3:o:canonical:ubuntu_linux:17.10:*:*:*:*:*:*:*",
        "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*",
        "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2018-01-24T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 6.4,
          "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 9.1,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://www.securitytracker.com/id/1040273",
        "https://access.redhat.com/errata/RHSA-2019:1543",
        "https://curl.haxx.se/docs/adv_2018-824a.html",
        "https://github.com/curl/curl/pull/2231",
        "https://nvd.nist.gov/vuln/detail/CVE-2018-1000005",
        "https://usn.ubuntu.com/3554-1/",
        "https://www.cve.org/CVERecord?id=CVE-2018-1000005",
        "https://www.debian.org/security/2018/dsa-4098"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "curl: Out-of-bounds read in code handling HTTP/2 trailers",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-05T12:33:49.200000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "canonical",
        "canonical$PRODUCT$ubuntu_linux",
        "debian",
        "debian$PRODUCT$debian_linux",
        "haxx",
        "haxx$PRODUCT$libcurl",
        "redhat",
        "redhat$PRODUCT$jboss_core_services"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-125"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:jboss_core_services:1"
    ],
    "created": "2018-01-24T00:00:00+00:00",
    "description": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 4.8,
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:L"
      },
      "cvssV3_1": {},
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2018/CVE-2018-1000005.json",
    "references": [
      "https://curl.haxx.se/docs/adv_2018-824a.html",
      "https://nvd.nist.gov/vuln/detail/CVE-2018-1000005",
      "https://www.cve.org/CVERecord?id=CVE-2018-1000005"
    ],
    "title": "curl: Out-of-bounds read in code handling HTTP/2 trailers",
    "updated": "2018-01-24T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$jboss_core_services"
    ],
    "weaknesses": [
      "CWE-125"
    ]
  }
}