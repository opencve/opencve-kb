{
  "cve": "CVE-2012-4673",
  "mitre": {
    "cpes": [],
    "created": "2022-10-03T16:15:34+00:00",
    "description": "SQL injection vulnerability in application/controllers/invoice.php in NeoInvoice might allow remote attackers to execute arbitrary SQL commands via vectors involving the sort_col variable in the list_items function, a different vulnerability than CVE-2012-3477.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2012/4xxx/CVE-2012-4673.json",
    "references": [
      "http://adamcaudill.com/2012/08/12/neoinvoice-blind-sql-injection-cve-2012-3477/",
      "https://github.com/mweimerskirch/neoinvoice/commit/501a9d5d261c718913cfc13d212b09b56f3bf087",
      "https://github.com/tlhunter/neoinvoice/issues/2"
    ],
    "title": null,
    "updated": "2022-10-03T16:15:34+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:thomas_hunter:neoinvoice:-:*:*:*:*:*:*:*"
    ],
    "created": "2012-08-26T03:17:44.200000+00:00",
    "description": "SQL injection vulnerability in application/controllers/invoice.php in NeoInvoice might allow remote attackers to execute arbitrary SQL commands via vectors involving the sort_col variable in the list_items function, a different vulnerability than CVE-2012-3477.",
    "metrics": {
      "cvssV2_0": {
        "score": 7.5,
        "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2012/CVE-2012-4673.json",
    "references": [
      "http://adamcaudill.com/2012/08/12/neoinvoice-blind-sql-injection-cve-2012-3477/",
      "https://github.com/mweimerskirch/neoinvoice/commit/501a9d5d261c718913cfc13d212b09b56f3bf087",
      "https://github.com/tlhunter/neoinvoice/issues/2"
    ],
    "title": null,
    "updated": "2012-08-27T04:00:00+00:00",
    "vendors": [
      "thomas_hunter",
      "thomas_hunter$PRODUCT$neoinvoice"
    ],
    "weaknesses": [
      "CWE-89"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:thomas_hunter:neoinvoice:-:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2012-08-26T03:17:44.200000+00:00",
      "provider": "nvd"
    },
    "description": {
      "data": "SQL injection vulnerability in application/controllers/invoice.php in NeoInvoice might allow remote attackers to execute arbitrary SQL commands via vectors involving the sort_col variable in the list_items function, a different vulnerability than CVE-2012-3477.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 7.5,
          "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "http://adamcaudill.com/2012/08/12/neoinvoice-blind-sql-injection-cve-2012-3477/",
        "https://github.com/mweimerskirch/neoinvoice/commit/501a9d5d261c718913cfc13d212b09b56f3bf087",
        "https://github.com/tlhunter/neoinvoice/issues/2"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2022-10-03T16:15:34+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "thomas_hunter",
        "thomas_hunter$PRODUCT$neoinvoice"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-89"
      ],
      "providers": [
        "nvd"
      ]
    }
  }
}