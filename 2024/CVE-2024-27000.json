{
  "cve": "CVE-2024-27000",
  "mitre": {
    "cpes": [],
    "created": "2024-05-01T05:28:35.749000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: mxs-auart: add spinlock around changing cts state\n\nThe uart_handle_cts_change() function in serial_core expects the caller\nto hold uport->lock. For example, I have seen the below kernel splat,\nwhen the Bluetooth driver is loaded on an i.MX28 board.\n\n    [   85.119255] ------------[ cut here ]------------\n    [   85.124413] WARNING: CPU: 0 PID: 27 at /drivers/tty/serial/serial_core.c:3453 uart_handle_cts_change+0xb4/0xec\n    [   85.134694] Modules linked in: hci_uart bluetooth ecdh_generic ecc wlcore_sdio configfs\n    [   85.143314] CPU: 0 PID: 27 Comm: kworker/u3:0 Not tainted 6.6.3-00021-gd62a2f068f92 #1\n    [   85.151396] Hardware name: Freescale MXS (Device Tree)\n    [   85.156679] Workqueue: hci0 hci_power_on [bluetooth]\n    (...)\n    [   85.191765]  uart_handle_cts_change from mxs_auart_irq_handle+0x380/0x3f4\n    [   85.198787]  mxs_auart_irq_handle from __handle_irq_event_percpu+0x88/0x210\n    (...)",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/27xxx/CVE-2024-27000.json",
    "references": [
      "https://git.kernel.org/stable/c/0dc0637e6b16158af85945425821bfd0151adb37",
      "https://git.kernel.org/stable/c/21535ef0ac1945080198fe3e4347ea498205c99a",
      "https://git.kernel.org/stable/c/2c9b943e9924cf1269e44289bc5e60e51b0f5270",
      "https://git.kernel.org/stable/c/479244d68f5d94f3903eced52b093c1e01ddb495",
      "https://git.kernel.org/stable/c/54c4ec5f8c471b7c1137a1f769648549c423c026",
      "https://git.kernel.org/stable/c/56434e295bd446142025913bfdf1587f5e1970ad",
      "https://git.kernel.org/stable/c/5f40fd6ca2cf0bfbc5a5c9e403dfce8ca899ba37",
      "https://git.kernel.org/stable/c/94b0e65c75f4af888ab2dd6c90f060f762924e86",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
    ],
    "title": "serial: mxs-auart: add spinlock around changing cts state",
    "updated": "2024-08-02T00:21:05.866000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-01T06:15:18.140000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: mxs-auart: add spinlock around changing cts state\n\nThe uart_handle_cts_change() function in serial_core expects the caller\nto hold uport->lock. For example, I have seen the below kernel splat,\nwhen the Bluetooth driver is loaded on an i.MX28 board.\n\n    [   85.119255] ------------[ cut here ]------------\n    [   85.124413] WARNING: CPU: 0 PID: 27 at /drivers/tty/serial/serial_core.c:3453 uart_handle_cts_change+0xb4/0xec\n    [   85.134694] Modules linked in: hci_uart bluetooth ecdh_generic ecc wlcore_sdio configfs\n    [   85.143314] CPU: 0 PID: 27 Comm: kworker/u3:0 Not tainted 6.6.3-00021-gd62a2f068f92 #1\n    [   85.151396] Hardware name: Freescale MXS (Device Tree)\n    [   85.156679] Workqueue: hci0 hci_power_on [bluetooth]\n    (...)\n    [   85.191765]  uart_handle_cts_change from mxs_auart_irq_handle+0x380/0x3f4\n    [   85.198787]  mxs_auart_irq_handle from __handle_irq_event_percpu+0x88/0x210\n    (...)",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-27000.json",
    "references": [
      "https://git.kernel.org/stable/c/0dc0637e6b16158af85945425821bfd0151adb37",
      "https://git.kernel.org/stable/c/21535ef0ac1945080198fe3e4347ea498205c99a",
      "https://git.kernel.org/stable/c/2c9b943e9924cf1269e44289bc5e60e51b0f5270",
      "https://git.kernel.org/stable/c/479244d68f5d94f3903eced52b093c1e01ddb495",
      "https://git.kernel.org/stable/c/54c4ec5f8c471b7c1137a1f769648549c423c026",
      "https://git.kernel.org/stable/c/56434e295bd446142025913bfdf1587f5e1970ad",
      "https://git.kernel.org/stable/c/5f40fd6ca2cf0bfbc5a5c9e403dfce8ca899ba37",
      "https://git.kernel.org/stable/c/94b0e65c75f4af888ab2dd6c90f060f762924e86",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
    ],
    "title": null,
    "updated": "2024-06-25T23:15:29.003000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-01T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: mxs-auart: add spinlock around changing cts state\n\nThe uart_handle_cts_change() function in serial_core expects the caller\nto hold uport->lock. For example, I have seen the below kernel splat,\nwhen the Bluetooth driver is loaded on an i.MX28 board.\n\n    [   85.119255] ------------[ cut here ]------------\n    [   85.124413] WARNING: CPU: 0 PID: 27 at /drivers/tty/serial/serial_core.c:3453 uart_handle_cts_change+0xb4/0xec\n    [   85.134694] Modules linked in: hci_uart bluetooth ecdh_generic ecc wlcore_sdio configfs\n    [   85.143314] CPU: 0 PID: 27 Comm: kworker/u3:0 Not tainted 6.6.3-00021-gd62a2f068f92 #1\n    [   85.151396] Hardware name: Freescale MXS (Device Tree)\n    [   85.156679] Workqueue: hci0 hci_power_on [bluetooth]\n    (...)\n    [   85.191765]  uart_handle_cts_change from mxs_auart_irq_handle+0x380/0x3f4\n    [   85.198787]  mxs_auart_irq_handle from __handle_irq_event_percpu+0x88/0x210\n    (...)",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/0dc0637e6b16158af85945425821bfd0151adb37",
        "https://git.kernel.org/stable/c/21535ef0ac1945080198fe3e4347ea498205c99a",
        "https://git.kernel.org/stable/c/2c9b943e9924cf1269e44289bc5e60e51b0f5270",
        "https://git.kernel.org/stable/c/479244d68f5d94f3903eced52b093c1e01ddb495",
        "https://git.kernel.org/stable/c/54c4ec5f8c471b7c1137a1f769648549c423c026",
        "https://git.kernel.org/stable/c/56434e295bd446142025913bfdf1587f5e1970ad",
        "https://git.kernel.org/stable/c/5f40fd6ca2cf0bfbc5a5c9e403dfce8ca899ba37",
        "https://git.kernel.org/stable/c/94b0e65c75f4af888ab2dd6c90f060f762924e86",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
        "https://lore.kernel.org/linux-cve-announce/2024050146-CVE-2024-27000-c789@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-27000",
        "https://www.cve.org/CVERecord?id=CVE-2024-27000"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "serial: mxs-auart: add spinlock around changing cts state",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T00:21:05.866000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-01T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nserial: mxs-auart: add spinlock around changing cts state\nThe uart_handle_cts_change() function in serial_core expects the caller\nto hold uport->lock. For example, I have seen the below kernel splat,\nwhen the Bluetooth driver is loaded on an i.MX28 board.\n[   85.119255] ------------[ cut here ]------------\n[   85.124413] WARNING: CPU: 0 PID: 27 at /drivers/tty/serial/serial_core.c:3453 uart_handle_cts_change+0xb4/0xec\n[   85.134694] Modules linked in: hci_uart bluetooth ecdh_generic ecc wlcore_sdio configfs\n[   85.143314] CPU: 0 PID: 27 Comm: kworker/u3:0 Not tainted 6.6.3-00021-gd62a2f068f92 #1\n[   85.151396] Hardware name: Freescale MXS (Device Tree)\n[   85.156679] Workqueue: hci0 hci_power_on [bluetooth]\n(...)\n[   85.191765]  uart_handle_cts_change from mxs_auart_irq_handle+0x380/0x3f4\n[   85.198787]  mxs_auart_irq_handle from __handle_irq_event_percpu+0x88/0x210\n(...)",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-27000.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024050146-CVE-2024-27000-c789@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-27000",
      "https://www.cve.org/CVERecord?id=CVE-2024-27000"
    ],
    "title": "kernel: serial: mxs-auart: add spinlock around changing cts state",
    "updated": "2024-05-01T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-01T05:28:35.749000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: mxs-auart: add spinlock around changing cts state\n\nThe uart_handle_cts_change() function in serial_core expects the caller\nto hold uport->lock. For example, I have seen the below kernel splat,\nwhen the Bluetooth driver is loaded on an i.MX28 board.\n\n    [   85.119255] ------------[ cut here ]------------\n    [   85.124413] WARNING: CPU: 0 PID: 27 at /drivers/tty/serial/serial_core.c:3453 uart_handle_cts_change+0xb4/0xec\n    [   85.134694] Modules linked in: hci_uart bluetooth ecdh_generic ecc wlcore_sdio configfs\n    [   85.143314] CPU: 0 PID: 27 Comm: kworker/u3:0 Not tainted 6.6.3-00021-gd62a2f068f92 #1\n    [   85.151396] Hardware name: Freescale MXS (Device Tree)\n    [   85.156679] Workqueue: hci0 hci_power_on [bluetooth]\n    (...)\n    [   85.191765]  uart_handle_cts_change from mxs_auart_irq_handle+0x380/0x3f4\n    [   85.198787]  mxs_auart_irq_handle from __handle_irq_event_percpu+0x88/0x210\n    (...)",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/0dc0637e6b16158af85945425821bfd0151adb37",
      "https://git.kernel.org/stable/c/21535ef0ac1945080198fe3e4347ea498205c99a",
      "https://git.kernel.org/stable/c/2c9b943e9924cf1269e44289bc5e60e51b0f5270",
      "https://git.kernel.org/stable/c/479244d68f5d94f3903eced52b093c1e01ddb495",
      "https://git.kernel.org/stable/c/54c4ec5f8c471b7c1137a1f769648549c423c026",
      "https://git.kernel.org/stable/c/56434e295bd446142025913bfdf1587f5e1970ad",
      "https://git.kernel.org/stable/c/5f40fd6ca2cf0bfbc5a5c9e403dfce8ca899ba37",
      "https://git.kernel.org/stable/c/94b0e65c75f4af888ab2dd6c90f060f762924e86",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
    ],
    "title": "serial: mxs-auart: add spinlock around changing cts state",
    "updated": "2024-08-02T00:21:05.866000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/27xxx/CVE-2024-27000.json",
    "weaknesses": []
  }
}