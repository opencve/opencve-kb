{
  "cve": "CVE-2024-5753",
  "mitre": {
    "cpes": [],
    "created": "2024-07-05T19:27:22.046000+00:00",
    "description": "vanna-ai/vanna version v0.3.4 is vulnerable to SQL injection in some file-critical functions such as `pg_read_file()`. This vulnerability allows unauthenticated remote users to read arbitrary local files on the victim server, including sensitive files like `/etc/passwd`, by exploiting the exposed SQL queries via a Python Flask API.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 7.5,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/5xxx/CVE-2024-5753.json",
    "references": [
      "https://huntr.com/bounties/a3f913d6-c717-4528-b974-26d8d9e839ca"
    ],
    "title": "Local File Read (LFI) by Prompt Injection via Postgres SQL in vanna-ai/vanna",
    "updated": "2024-08-01T21:18:07.118000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-200"
    ]
  },
  "nvd": {
    "cpes": [],
    "created": "2024-07-05T20:15:02.343000+00:00",
    "description": "vanna-ai/vanna version v0.3.4 is vulnerable to SQL injection in some file-critical functions such as `pg_read_file()`. This vulnerability allows unauthenticated remote users to read arbitrary local files on the victim server, including sensitive files like `/etc/passwd`, by exploiting the exposed SQL queries via a Python Flask API.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 7.5,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-5753.json",
    "references": [
      "https://huntr.com/bounties/a3f913d6-c717-4528-b974-26d8d9e839ca"
    ],
    "title": null,
    "updated": "2024-07-08T15:49:22.437000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-200"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-07-05T19:27:22.046000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "vanna-ai/vanna version v0.3.4 is vulnerable to SQL injection in some file-critical functions such as `pg_read_file()`. This vulnerability allows unauthenticated remote users to read arbitrary local files on the victim server, including sensitive files like `/etc/passwd`, by exploiting the exposed SQL queries via a Python Flask API.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
        },
        "provider": "mitre"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://huntr.com/bounties/a3f913d6-c717-4528-b974-26d8d9e839ca"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "Local File Read (LFI) by Prompt Injection via Postgres SQL in vanna-ai/vanna",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-01T21:18:07.118000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-200"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-07-05T19:27:22.046000+00:00",
    "description": "vanna-ai/vanna version v0.3.4 is vulnerable to SQL injection in some file-critical functions such as `pg_read_file()`. This vulnerability allows unauthenticated remote users to read arbitrary local files on the victim server, including sensitive files like `/etc/passwd`, by exploiting the exposed SQL queries via a Python Flask API.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://huntr.com/bounties/a3f913d6-c717-4528-b974-26d8d9e839ca"
    ],
    "title": "Local File Read (LFI) by Prompt Injection via Postgres SQL in vanna-ai/vanna",
    "updated": "2024-08-01T21:18:07.118000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/5xxx/CVE-2024-5753.json",
    "weaknesses": []
  }
}