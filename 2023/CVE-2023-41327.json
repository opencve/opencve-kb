{
  "cve": "CVE-2023-41327",
  "mitre": {
    "cpes": [],
    "created": "2023-09-06T20:38:45.161000+00:00",
    "description": "WireMock is a tool for mocking HTTP services. WireMock can be configured to only permit proxying (and therefore recording) to certain addresses. This is achieved via a list of allowed address rules and a list of denied address rules, where the allowed list is evaluated first. \n\nUntil WireMock Webhooks Extension 3.0.0-beta-15, the filtering of target addresses from the proxy mode DID NOT work for Webhooks, so the users were potentially vulnerable regardless of the `limitProxyTargets` settings. Via the WireMock webhooks configuration, POST requests from a webhook might be forwarded to an arbitrary service reachable from WireMock’s instance. For example, If someone is running the WireMock docker Container inside a private cluster, they can trigger internal POST requests against unsecured APIs or even against secure ones by passing a token, discovered using another exploit, via authentication headers. This issue has been addressed in versions 2.35.1 and 3.0.3 of wiremock. Wiremock studio has been discontinued and will not see a fix. Users unable to upgrade should use external firewall rules to define the list of permitted destinations.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.6,
        "vector": "CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/41xxx/CVE-2023-41327.json",
    "references": [
      "https://github.com/wiremock/wiremock/releases/tag/3.0.0-beta-15",
      "https://github.com/wiremock/wiremock/security/advisories/GHSA-hq8w-9w8w-pmx7",
      "https://wiremock.org/docs/configuration/#preventing-proxying-to-and-recording-from-specific-target-addresses"
    ],
    "title": "Controlled SSRF through URL in the WireMock",
    "updated": "2024-09-26T15:51:46.334000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-918"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:wiremock:studio:*:*:*:*:*:*:*:*",
      "cpe:2.3:a:wiremock:wiremock:*:*:*:*:*:*:*:*"
    ],
    "created": "2023-09-06T21:15:14.323000+00:00",
    "description": "WireMock is a tool for mocking HTTP services. WireMock can be configured to only permit proxying (and therefore recording) to certain addresses. This is achieved via a list of allowed address rules and a list of denied address rules, where the allowed list is evaluated first. \n\nUntil WireMock Webhooks Extension 3.0.0-beta-15, the filtering of target addresses from the proxy mode DID NOT work for Webhooks, so the users were potentially vulnerable regardless of the `limitProxyTargets` settings. Via the WireMock webhooks configuration, POST requests from a webhook might be forwarded to an arbitrary service reachable from WireMock’s instance. For example, If someone is running the WireMock docker Container inside a private cluster, they can trigger internal POST requests against unsecured APIs or even against secure ones by passing a token, discovered using another exploit, via authentication headers. This issue has been addressed in versions 2.35.1 and 3.0.3 of wiremock. Wiremock studio has been discontinued and will not see a fix. Users unable to upgrade should use external firewall rules to define the list of permitted destinations.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.4,
        "vector": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-41327.json",
    "references": [
      "https://github.com/wiremock/wiremock/releases/tag/3.0.0-beta-15",
      "https://github.com/wiremock/wiremock/security/advisories/GHSA-hq8w-9w8w-pmx7",
      "https://wiremock.org/docs/configuration/#preventing-proxying-to-and-recording-from-specific-target-addresses"
    ],
    "title": null,
    "updated": "2023-09-12T20:43:26.803000+00:00",
    "vendors": [
      "wiremock",
      "wiremock$PRODUCT$studio",
      "wiremock$PRODUCT$wiremock"
    ],
    "weaknesses": [
      "CWE-918"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-26T16:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "0ed68f5f-122c-4f35-ae5d-1e8bce0c243f"
      }
    ],
    "cpes": {
      "data": [
        "cpe:2.3:a:wiremock:studio:*:*:*:*:*:*:*:*",
        "cpe:2.3:a:wiremock:wiremock:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-09-06T20:38:45.161000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "WireMock is a tool for mocking HTTP services. WireMock can be configured to only permit proxying (and therefore recording) to certain addresses. This is achieved via a list of allowed address rules and a list of denied address rules, where the allowed list is evaluated first. \n\nUntil WireMock Webhooks Extension 3.0.0-beta-15, the filtering of target addresses from the proxy mode DID NOT work for Webhooks, so the users were potentially vulnerable regardless of the `limitProxyTargets` settings. Via the WireMock webhooks configuration, POST requests from a webhook might be forwarded to an arbitrary service reachable from WireMock’s instance. For example, If someone is running the WireMock docker Container inside a private cluster, they can trigger internal POST requests against unsecured APIs or even against secure ones by passing a token, discovered using another exploit, via authentication headers. This issue has been addressed in versions 2.35.1 and 3.0.3 of wiremock. Wiremock studio has been discontinued and will not see a fix. Users unable to upgrade should use external firewall rules to define the list of permitted destinations.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.6,
          "vector": "CVSS:3.1/AV:A/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/wiremock/wiremock/releases/tag/3.0.0-beta-15",
        "https://github.com/wiremock/wiremock/security/advisories/GHSA-hq8w-9w8w-pmx7",
        "https://wiremock.org/docs/configuration/#preventing-proxying-to-and-recording-from-specific-target-addresses"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Controlled SSRF through URL in the WireMock",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-26T15:51:46.334000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "wiremock",
        "wiremock$PRODUCT$studio",
        "wiremock$PRODUCT$wiremock"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-918"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2023-09-06T20:38:45.161000+00:00",
    "description": "WireMock is a tool for mocking HTTP services. WireMock can be configured to only permit proxying (and therefore recording) to certain addresses. This is achieved via a list of allowed address rules and a list of denied address rules, where the allowed list is evaluated first. \n\nUntil WireMock Webhooks Extension 3.0.0-beta-15, the filtering of target addresses from the proxy mode DID NOT work for Webhooks, so the users were potentially vulnerable regardless of the `limitProxyTargets` settings. Via the WireMock webhooks configuration, POST requests from a webhook might be forwarded to an arbitrary service reachable from WireMock’s instance. For example, If someone is running the WireMock docker Container inside a private cluster, they can trigger internal POST requests against unsecured APIs or even against secure ones by passing a token, discovered using another exploit, via authentication headers. This issue has been addressed in versions 2.35.1 and 3.0.3 of wiremock. Wiremock studio has been discontinued and will not see a fix. Users unable to upgrade should use external firewall rules to define the list of permitted destinations.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "Controlled SSRF through URL in the WireMock",
    "updated": "2024-09-26T15:51:43.175000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2023/41xxx/CVE-2023-41327.json",
    "weaknesses": []
  }
}