{
  "cve": "CVE-2024-38598",
  "mitre": {
    "cpes": [],
    "created": "2024-06-19T13:45:47.309000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix resync softlockup when bitmap size is less than array size\n\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\n\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n <TASK>\n md_bitmap_start_sync+0x6b/0xf0\n raid10_sync_request+0x25c/0x1b40 [raid10]\n md_do_sync+0x64b/0x1020\n md_thread+0xa7/0x170\n kthread+0xcf/0x100\n ret_from_fork+0x30/0x50\n ret_from_fork_asm+0x1a/0x30\n\nAnd the detailed process is as follows:\n\nmd_do_sync\n j = mddev->resync_min\n while (j < max_sectors)\n  sectors = raid10_sync_request(mddev, j, &skipped)\n   if (!md_bitmap_start_sync(..., &sync_blocks))\n    // md_bitmap_start_sync set sync_blocks to 0\n    return sync_blocks + sectors_skippe;\n  // sectors = 0;\n  j += sectors;\n  // j never change\n\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\n\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\n\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/38xxx/CVE-2024-38598.json",
    "references": [
      "https://git.kernel.org/stable/c/3f5b73ef8fd6268cbc968b308d8eafe56fda97f3",
      "https://git.kernel.org/stable/c/43771597feba89a839c5f893716df88ae5c237ce",
      "https://git.kernel.org/stable/c/5817f43ae1a118855676f57ef7ab50e37eac7482",
      "https://git.kernel.org/stable/c/69296914bfd508c85935bf5f711cad9b0fe78492",
      "https://git.kernel.org/stable/c/71e8e4f288e74a896b6d9cd194f3bab12bd7a10f",
      "https://git.kernel.org/stable/c/8bbc71315e0ae4bb7e37f8d43b915e1cb01a481b",
      "https://git.kernel.org/stable/c/c9566b812c8f66160466cc1e29df6d3646add0b1",
      "https://git.kernel.org/stable/c/d4b9c764d48fa41caa24cfb4275f3aa9fb4bd798",
      "https://git.kernel.org/stable/c/f0e729af2eb6bee9eb58c4df1087f14ebaefe26b"
    ],
    "title": "md: fix resync softlockup when bitmap size is less than array size",
    "updated": "2024-08-02T04:12:26.038000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-06-19T14:15:19.813000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix resync softlockup when bitmap size is less than array size\n\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\n\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n <TASK>\n md_bitmap_start_sync+0x6b/0xf0\n raid10_sync_request+0x25c/0x1b40 [raid10]\n md_do_sync+0x64b/0x1020\n md_thread+0xa7/0x170\n kthread+0xcf/0x100\n ret_from_fork+0x30/0x50\n ret_from_fork_asm+0x1a/0x30\n\nAnd the detailed process is as follows:\n\nmd_do_sync\n j = mddev->resync_min\n while (j < max_sectors)\n  sectors = raid10_sync_request(mddev, j, &skipped)\n   if (!md_bitmap_start_sync(..., &sync_blocks))\n    // md_bitmap_start_sync set sync_blocks to 0\n    return sync_blocks + sectors_skippe;\n  // sectors = 0;\n  j += sectors;\n  // j never change\n\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\n\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\n\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-38598.json",
    "references": [
      "https://git.kernel.org/stable/c/3f5b73ef8fd6268cbc968b308d8eafe56fda97f3",
      "https://git.kernel.org/stable/c/43771597feba89a839c5f893716df88ae5c237ce",
      "https://git.kernel.org/stable/c/5817f43ae1a118855676f57ef7ab50e37eac7482",
      "https://git.kernel.org/stable/c/69296914bfd508c85935bf5f711cad9b0fe78492",
      "https://git.kernel.org/stable/c/71e8e4f288e74a896b6d9cd194f3bab12bd7a10f",
      "https://git.kernel.org/stable/c/8bbc71315e0ae4bb7e37f8d43b915e1cb01a481b",
      "https://git.kernel.org/stable/c/c9566b812c8f66160466cc1e29df6d3646add0b1",
      "https://git.kernel.org/stable/c/d4b9c764d48fa41caa24cfb4275f3aa9fb4bd798",
      "https://git.kernel.org/stable/c/f0e729af2eb6bee9eb58c4df1087f14ebaefe26b"
    ],
    "title": null,
    "updated": "2024-08-27T18:36:57.630000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-667"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-08T23:00:00+00:00",
        "data": [
          {
            "details": [
              "redhat",
              "redhat$PRODUCT$enterprise_linux"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "cpe:/o:redhat:enterprise_linux:8"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "redhat",
                "redhat$PRODUCT$enterprise_linux"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "ee21b5f7-e0bb-42d7-a960-1985606297f1"
      },
      {
        "created": "2024-08-27T19:00:00+00:00",
        "data": [
          {
            "details": [
              "linux",
              "linux$PRODUCT$linux_kernel"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "linux",
                "linux$PRODUCT$linux_kernel"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "460239cb-3320-407d-80f8-aecb84bfc560"
      }
    ],
    "cpes": {
      "data": [
        "cpe:/o:redhat:enterprise_linux:8",
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2024-06-19T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix resync softlockup when bitmap size is less than array size\n\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\n\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n <TASK>\n md_bitmap_start_sync+0x6b/0xf0\n raid10_sync_request+0x25c/0x1b40 [raid10]\n md_do_sync+0x64b/0x1020\n md_thread+0xa7/0x170\n kthread+0xcf/0x100\n ret_from_fork+0x30/0x50\n ret_from_fork_asm+0x1a/0x30\n\nAnd the detailed process is as follows:\n\nmd_do_sync\n j = mddev->resync_min\n while (j < max_sectors)\n  sectors = raid10_sync_request(mddev, j, &skipped)\n   if (!md_bitmap_start_sync(..., &sync_blocks))\n    // md_bitmap_start_sync set sync_blocks to 0\n    return sync_blocks + sectors_skippe;\n  // sectors = 0;\n  j += sectors;\n  // j never change\n\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\n\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\n\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/3f5b73ef8fd6268cbc968b308d8eafe56fda97f3",
        "https://git.kernel.org/stable/c/43771597feba89a839c5f893716df88ae5c237ce",
        "https://git.kernel.org/stable/c/5817f43ae1a118855676f57ef7ab50e37eac7482",
        "https://git.kernel.org/stable/c/69296914bfd508c85935bf5f711cad9b0fe78492",
        "https://git.kernel.org/stable/c/71e8e4f288e74a896b6d9cd194f3bab12bd7a10f",
        "https://git.kernel.org/stable/c/8bbc71315e0ae4bb7e37f8d43b915e1cb01a481b",
        "https://git.kernel.org/stable/c/c9566b812c8f66160466cc1e29df6d3646add0b1",
        "https://git.kernel.org/stable/c/d4b9c764d48fa41caa24cfb4275f3aa9fb4bd798",
        "https://git.kernel.org/stable/c/f0e729af2eb6bee9eb58c4df1087f14ebaefe26b",
        "https://lore.kernel.org/linux-cve-announce/2024061956-CVE-2024-38598-8629@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-38598",
        "https://www.cve.org/CVERecord?id=CVE-2024-38598"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "md: fix resync softlockup when bitmap size is less than array size",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-27T18:36:57.630000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel",
        "redhat",
        "redhat$PRODUCT$enterprise_linux"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-667"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/o:redhat:enterprise_linux:8"
    ],
    "created": "2024-06-19T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nmd: fix resync softlockup when bitmap size is less than array size\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n<TASK>\nmd_bitmap_start_sync+0x6b/0xf0\nraid10_sync_request+0x25c/0x1b40 [raid10]\nmd_do_sync+0x64b/0x1020\nmd_thread+0xa7/0x170\nkthread+0xcf/0x100\nret_from_fork+0x30/0x50\nret_from_fork_asm+0x1a/0x30\nAnd the detailed process is as follows:\nmd_do_sync\nj = mddev->resync_min\nwhile (j < max_sectors)\nsectors = raid10_sync_request(mddev, j, &skipped)\nif (!md_bitmap_start_sync(..., &sync_blocks))\n// md_bitmap_start_sync set sync_blocks to 0\nreturn sync_blocks + sectors_skippe;\n// sectors = 0;\nj += sectors;\n// j never change\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-38598.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024061956-CVE-2024-38598-8629@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-38598",
      "https://www.cve.org/CVERecord?id=CVE-2024-38598"
    ],
    "title": "kernel: md: fix resync softlockup when bitmap size is less than array size",
    "updated": "2024-06-19T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux"
    ],
    "weaknesses": [
      "CWE-667"
    ]
  }
}