{
  "cve": "CVE-2024-31143",
  "mitre": {
    "cpes": [],
    "created": "2024-07-18T13:31:31.244000+00:00",
    "description": "An optional feature of PCI MSI called \"Multiple Message\" allows a\ndevice to use multiple consecutive interrupt vectors.  Unlike for MSI-X,\nthe setting up of these consecutive vectors needs to happen all in one\ngo.  In this handling an error path could be taken in different\nsituations, with or without a particular lock held.  This error path\nwrongly releases the lock even when it is not currently held.\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/31xxx/CVE-2024-31143.json",
    "references": [
      "https://xenbits.xenproject.org/xsa/advisory-458.html"
    ],
    "title": "double unlock in x86 guest IRQ handling",
    "updated": "2024-09-13T17:04:37.447000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-07-18T14:15:04.673000+00:00",
    "description": "An optional feature of PCI MSI called \"Multiple Message\" allows a\ndevice to use multiple consecutive interrupt vectors.  Unlike for MSI-X,\nthe setting up of these consecutive vectors needs to happen all in one\ngo.  In this handling an error path could be taken in different\nsituations, with or without a particular lock held.  This error path\nwrongly releases the lock even when it is not currently held.\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-31143.json",
    "references": [
      "https://xenbits.xenproject.org/xsa/advisory-458.html"
    ],
    "title": null,
    "updated": "2024-08-21T14:35:09.100000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-832"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-21T15:00:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "CWE-832"
              ],
              "removed": []
            },
            "type": "weaknesses"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 7.5,
                  "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "8571b3b7-c824-4535-a865-f3d19574c6e1"
      },
      {
        "created": "2024-09-13T18:30:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "http://www.openwall.com/lists/oss-security/2024/07/16/3"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "72e869c3-33cd-407b-9747-25744e279ba5"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-07-18T13:31:31.244000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "An optional feature of PCI MSI called \"Multiple Message\" allows a\ndevice to use multiple consecutive interrupt vectors.  Unlike for MSI-X,\nthe setting up of these consecutive vectors needs to happen all in one\ngo.  In this handling an error path could be taken in different\nsituations, with or without a particular lock held.  This error path\nwrongly releases the lock even when it is not currently held.\n",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "http://www.openwall.com/lists/oss-security/2024/07/16/3",
        "https://xenbits.xenproject.org/xsa/advisory-458.html"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "double unlock in x86 guest IRQ handling",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-13T17:04:37.447000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-832"
      ],
      "providers": [
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-07-18T13:31:31.244000+00:00",
    "description": "An optional feature of PCI MSI called \"Multiple Message\" allows a\ndevice to use multiple consecutive interrupt vectors.  Unlike for MSI-X,\nthe setting up of these consecutive vectors needs to happen all in one\ngo.  In this handling an error path could be taken in different\nsituations, with or without a particular lock held.  This error path\nwrongly releases the lock even when it is not currently held.\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "http://www.openwall.com/lists/oss-security/2024/07/16/3",
      "https://xenbits.xenproject.org/xsa/advisory-458.html"
    ],
    "title": "double unlock in x86 guest IRQ handling",
    "updated": "2024-09-13T17:04:37.447000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/31xxx/CVE-2024-31143.json",
    "weaknesses": []
  }
}