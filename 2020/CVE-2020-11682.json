{
  "cve": "CVE-2020-11682",
  "mitre": {
    "cpes": [],
    "created": "2020-06-04T19:10:00+00:00",
    "description": "Castel NextGen DVR v1.0.0 is vulnerable to CSRF in all state-changing request. A __RequestVerificationToken is set by the web interface, and included in requests sent by web interface. However, this token is not verified by the application: the token can be removed from all requests and the request will succeed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2020/11xxx/CVE-2020-11682.json",
    "references": [
      "http://packetstormsecurity.com/files/157954/Castel-NextGen-DVR-1.0.0-Bypass-CSRF-Disclosure.html",
      "http://seclists.org/fulldisclosure/2020/Jun/8",
      "https://www.securitymetrics.com/blog/where-did-request-come-from-cross-site-request-forgery-csrf"
    ],
    "title": null,
    "updated": "2024-08-04T11:35:13.725000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:h:castel:nextgen_dvr:-:*:*:*:*:*:*:*",
      "cpe:2.3:o:castel:nextgen_dvr_firmware:1.0.0:*:*:*:*:*:*:*"
    ],
    "created": "2020-06-04T20:15:11.677000+00:00",
    "description": "Castel NextGen DVR v1.0.0 is vulnerable to CSRF in all state-changing request. A __RequestVerificationToken is set by the web interface, and included in requests sent by web interface. However, this token is not verified by the application: the token can be removed from all requests and the request will succeed.",
    "metrics": {
      "cvssV2_0": {
        "score": 4.3,
        "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2020/CVE-2020-11682.json",
    "references": [
      "http://packetstormsecurity.com/files/157954/Castel-NextGen-DVR-1.0.0-Bypass-CSRF-Disclosure.html",
      "http://seclists.org/fulldisclosure/2020/Jun/8",
      "https://www.securitymetrics.com/blog/where-did-request-come-from-cross-site-request-forgery-csrf"
    ],
    "title": null,
    "updated": "2020-06-10T17:51:03.590000+00:00",
    "vendors": [
      "castel",
      "castel$PRODUCT$nextgen_dvr",
      "castel$PRODUCT$nextgen_dvr_firmware"
    ],
    "weaknesses": [
      "CWE-352"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:h:castel:nextgen_dvr:-:*:*:*:*:*:*:*",
        "cpe:2.3:o:castel:nextgen_dvr_firmware:1.0.0:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2020-06-04T19:10:00+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "Castel NextGen DVR v1.0.0 is vulnerable to CSRF in all state-changing request. A __RequestVerificationToken is set by the web interface, and included in requests sent by web interface. However, this token is not verified by the application: the token can be removed from all requests and the request will succeed.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.3,
          "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "http://packetstormsecurity.com/files/157954/Castel-NextGen-DVR-1.0.0-Bypass-CSRF-Disclosure.html",
        "http://seclists.org/fulldisclosure/2020/Jun/8",
        "https://www.securitymetrics.com/blog/where-did-request-come-from-cross-site-request-forgery-csrf"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2024-08-04T11:35:13.725000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "castel",
        "castel$PRODUCT$nextgen_dvr",
        "castel$PRODUCT$nextgen_dvr_firmware"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-352"
      ],
      "providers": [
        "nvd"
      ]
    }
  }
}