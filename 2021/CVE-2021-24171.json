{
  "cve": "CVE-2021-24171",
  "mitre": {
    "cpes": [],
    "created": "2021-04-05T18:27:44+00:00",
    "description": "The WooCommerce Upload Files WordPress plugin before 59.4 ran a single sanitization pass to remove blocked extensions such as .php. It was possible to bypass this and upload a file with a PHP extension by embedding a \"blocked\" extension within another \"blocked\" extension in the \"wcuf_file_name\" parameter. It was also possible to perform a double extension attack and upload files to a different location via path traversal using the \"wcuf_current_upload_session_id\" parameter.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/24xxx/CVE-2021-24171.json",
    "references": [
      "https://wpscan.com/vulnerability/ed4288a1-f7e4-455f-b765-5ac343f87194",
      "https://www.wordfence.com/blog/2021/03/critical-vulnerability-patched-in-woocommerce-upload-files/"
    ],
    "title": "WooCommerce Upload Files < 59.4 - Unauthenticated Arbitrary File Upload",
    "updated": "2024-08-03T19:21:18.699000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-434"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:woocommerce:upload_files:*:*:*:*:*:wordpress:*:*"
    ],
    "created": "2021-04-05T19:15:15.857000+00:00",
    "description": "The WooCommerce Upload Files WordPress plugin before 59.4 ran a single sanitization pass to remove blocked extensions such as .php. It was possible to bypass this and upload a file with a PHP extension by embedding a \"blocked\" extension within another \"blocked\" extension in the \"wcuf_file_name\" parameter. It was also possible to perform a double extension attack and upload files to a different location via path traversal using the \"wcuf_current_upload_session_id\" parameter.",
    "metrics": {
      "cvssV2_0": {
        "score": 7.5,
        "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 9.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-24171.json",
    "references": [
      "https://wpscan.com/vulnerability/ed4288a1-f7e4-455f-b765-5ac343f87194",
      "https://www.wordfence.com/blog/2021/03/critical-vulnerability-patched-in-woocommerce-upload-files/"
    ],
    "title": null,
    "updated": "2022-10-24T17:15:39.613000+00:00",
    "vendors": [
      "woocommerce",
      "woocommerce$PRODUCT$upload_files"
    ],
    "weaknesses": [
      "CWE-434"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:woocommerce:upload_files:*:*:*:*:*:wordpress:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2021-04-05T18:27:44+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "The WooCommerce Upload Files WordPress plugin before 59.4 ran a single sanitization pass to remove blocked extensions such as .php. It was possible to bypass this and upload a file with a PHP extension by embedding a \"blocked\" extension within another \"blocked\" extension in the \"wcuf_file_name\" parameter. It was also possible to perform a double extension attack and upload files to a different location via path traversal using the \"wcuf_current_upload_session_id\" parameter.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 7.5,
          "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 9.8,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://wpscan.com/vulnerability/ed4288a1-f7e4-455f-b765-5ac343f87194",
        "https://www.wordfence.com/blog/2021/03/critical-vulnerability-patched-in-woocommerce-upload-files/"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "WooCommerce Upload Files < 59.4 - Unauthenticated Arbitrary File Upload",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T19:21:18.699000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "woocommerce",
        "woocommerce$PRODUCT$upload_files"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-434"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}