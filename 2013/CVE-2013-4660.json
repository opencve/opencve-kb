{
  "cve": "CVE-2013-4660",
  "mitre": {
    "cpes": [],
    "created": "2022-10-03T16:14:58+00:00",
    "description": "The JS-YAML module before 2.0.5 for Node.js parses input without properly considering the unsafe !!js/function tag, which allows remote attackers to execute arbitrary code via a crafted string that triggers an eval operation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2013/4xxx/CVE-2013-4660.json",
    "references": [
      "http://portal.nodesecurity.io/advisories/js-yaml",
      "https://nealpoole.com/blog/2013/06/code-execution-via-yaml-in-js-yaml-nodejs-module/"
    ],
    "title": null,
    "updated": "2022-10-03T16:14:58+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:js-yaml_project:js-yaml:*:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.2.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.2.1:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.2.2:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.3.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.3.1:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.3.2:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.3.3:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.3.4:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.3.5:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.3.6:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:0.3.7:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:1.0.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:1.0.1:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:1.0.2:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:1.0.3:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:2.0.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:2.0.1:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:2.0.2:*:*:*:*:*:*:*",
      "cpe:2.3:a:js-yaml_project:js-yaml:2.0.3:*:*:*:*:*:*:*"
    ],
    "created": "2013-06-28T14:55:02.803000+00:00",
    "description": "The JS-YAML module before 2.0.5 for Node.js parses input without properly considering the unsafe !!js/function tag, which allows remote attackers to execute arbitrary code via a crafted string that triggers an eval operation.",
    "metrics": {
      "cvssV2_0": {
        "score": 6.8,
        "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2013/CVE-2013-4660.json",
    "references": [
      "http://portal.nodesecurity.io/advisories/js-yaml",
      "https://nealpoole.com/blog/2013/06/code-execution-via-yaml-in-js-yaml-nodejs-module/"
    ],
    "title": null,
    "updated": "2013-07-01T14:51:17.500000+00:00",
    "vendors": [
      "js-yaml_project",
      "js-yaml_project$PRODUCT$js-yaml"
    ],
    "weaknesses": [
      "CWE-20"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:js-yaml_project:js-yaml:*:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.2.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.2.1:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.2.2:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.3.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.3.1:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.3.2:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.3.3:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.3.4:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.3.5:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.3.6:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:0.3.7:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:1.0.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:1.0.1:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:1.0.2:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:1.0.3:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:2.0.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:2.0.1:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:2.0.2:*:*:*:*:*:*:*",
        "cpe:2.3:a:js-yaml_project:js-yaml:2.0.3:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2013-06-28T14:55:02.803000+00:00",
      "provider": "nvd"
    },
    "description": {
      "data": "The JS-YAML module before 2.0.5 for Node.js parses input without properly considering the unsafe !!js/function tag, which allows remote attackers to execute arbitrary code via a crafted string that triggers an eval operation.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 6.8,
          "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "http://portal.nodesecurity.io/advisories/js-yaml",
        "https://nealpoole.com/blog/2013/06/code-execution-via-yaml-in-js-yaml-nodejs-module/"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2022-10-03T16:14:58+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "js-yaml_project",
        "js-yaml_project$PRODUCT$js-yaml"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-20"
      ],
      "providers": [
        "nvd"
      ]
    }
  }
}