{
  "cve": "CVE-2017-17917",
  "mitre": {
    "cpes": [],
    "created": "2017-12-29T16:00:00+00:00",
    "description": "SQL injection vulnerability in the 'where' method in Ruby on Rails 5.1.4 and earlier allows remote attackers to execute arbitrary SQL commands via the 'id' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2017/17xxx/CVE-2017-17917.json",
    "references": [
      "https://kay-malwarebenchmark.github.io/blog/ruby-on-rails-arbitrary-sql-injection/"
    ],
    "title": null,
    "updated": "2024-08-05T21:06:49.390000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:rubyonrails:rails:*:*:*:*:*:*:*:*"
    ],
    "created": "2017-12-29T16:29:00.263000+00:00",
    "description": "SQL injection vulnerability in the 'where' method in Ruby on Rails 5.1.4 and earlier allows remote attackers to execute arbitrary SQL commands via the 'id' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input",
    "metrics": {
      "cvssV2_0": {
        "score": 6.8,
        "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.1,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2017/CVE-2017-17917.json",
    "references": [
      "https://kay-malwarebenchmark.github.io/blog/ruby-on-rails-arbitrary-sql-injection/"
    ],
    "title": null,
    "updated": "2024-08-05T21:15:36.487000+00:00",
    "vendors": [
      "rubyonrails",
      "rubyonrails$PRODUCT$rails"
    ],
    "weaknesses": [
      "CWE-89"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:rubyonrails:rails:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2017-12-29T16:00:00+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "SQL injection vulnerability in the 'where' method in Ruby on Rails 5.1.4 and earlier allows remote attackers to execute arbitrary SQL commands via the 'id' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 6.8,
          "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 8.1,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://kay-malwarebenchmark.github.io/blog/ruby-on-rails-arbitrary-sql-injection/"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2024-08-05T21:15:36.487000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [
        "rubyonrails",
        "rubyonrails$PRODUCT$rails"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-89"
      ],
      "providers": [
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2017-12-29T16:00:00+00:00",
    "description": "SQL injection vulnerability in the 'where' method in Ruby on Rails 5.1.4 and earlier allows remote attackers to execute arbitrary SQL commands via the 'id' parameter. NOTE: The vendor disputes this issue because the documentation states that this method is not intended for use with untrusted input",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://kay-malwarebenchmark.github.io/blog/ruby-on-rails-arbitrary-sql-injection/"
    ],
    "title": null,
    "updated": "2024-08-05T21:06:49.390000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2017/17xxx/CVE-2017-17917.json",
    "weaknesses": []
  }
}