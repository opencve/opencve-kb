{
  "cve": "CVE-2013-4170",
  "mitre": {
    "cpes": [],
    "created": "2022-06-30T12:38:42+00:00",
    "description": "In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the `tagName` property of an `Ember.View` was inserted into such a string without being sanitized. This means that if an application assigns a view's `tagName` to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain (\"XSS\"). This vulnerability only affects applications that assign or bind user-provided content to `tagName`.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2013/4xxx/CVE-2013-4170.json",
    "references": [
      "https://groups.google.com/g/ember-security/c/dokLVwwxAdM",
      "https://rubysec.com/advisories/CVE-2013-4170/",
      "https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102"
    ],
    "title": null,
    "updated": "2022-06-30T12:38:42+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-79"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:emberjs:ember.js:*:*:*:*:*:*:*:*",
      "cpe:2.3:a:emberjs:ember.js:1.0.0:rc1:*:*:*:*:*:*",
      "cpe:2.3:a:emberjs:ember.js:1.0.0:rc2:*:*:*:*:*:*",
      "cpe:2.3:a:emberjs:ember.js:1.0.0:rc3:*:*:*:*:*:*",
      "cpe:2.3:a:emberjs:ember.js:1.0.0:rc4:*:*:*:*:*:*",
      "cpe:2.3:a:emberjs:ember.js:1.0.0:rc5:*:*:*:*:*:*",
      "cpe:2.3:a:emberjs:ember.js:1.0.0:rc6:*:*:*:*:*:*"
    ],
    "created": "2022-06-30T13:15:08.230000+00:00",
    "description": "In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the `tagName` property of an `Ember.View` was inserted into such a string without being sanitized. This means that if an application assigns a view's `tagName` to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain (\"XSS\"). This vulnerability only affects applications that assign or bind user-provided content to `tagName`.",
    "metrics": {
      "cvssV2_0": {
        "score": 2.6,
        "vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.1,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2013/CVE-2013-4170.json",
    "references": [
      "https://groups.google.com/g/ember-security/c/dokLVwwxAdM",
      "https://rubysec.com/advisories/CVE-2013-4170/",
      "https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102"
    ],
    "title": null,
    "updated": "2022-07-09T02:07:46.790000+00:00",
    "vendors": [
      "emberjs",
      "emberjs$PRODUCT$ember.js"
    ],
    "weaknesses": [
      "CWE-79"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:emberjs:ember.js:*:*:*:*:*:*:*:*",
        "cpe:2.3:a:emberjs:ember.js:1.0.0:rc1:*:*:*:*:*:*",
        "cpe:2.3:a:emberjs:ember.js:1.0.0:rc2:*:*:*:*:*:*",
        "cpe:2.3:a:emberjs:ember.js:1.0.0:rc3:*:*:*:*:*:*",
        "cpe:2.3:a:emberjs:ember.js:1.0.0:rc4:*:*:*:*:*:*",
        "cpe:2.3:a:emberjs:ember.js:1.0.0:rc5:*:*:*:*:*:*",
        "cpe:2.3:a:emberjs:ember.js:1.0.0:rc6:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2013-07-24T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the `tagName` property of an `Ember.View` was inserted into such a string without being sanitized. This means that if an application assigns a view's `tagName` to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain (\"XSS\"). This vulnerability only affects applications that assign or bind user-provided content to `tagName`.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 2.6,
          "vector": "AV:N/AC:H/Au:N/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.1,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://groups.google.com/g/ember-security/c/dokLVwwxAdM",
        "https://nvd.nist.gov/vuln/detail/CVE-2013-4170",
        "https://rubysec.com/advisories/CVE-2013-4170/",
        "https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102",
        "https://www.cve.org/CVERecord?id=CVE-2013-4170"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "ember.js: Cross-site scripting when binding `tagName` to User-Supplied Data",
      "provider": "nvd"
    },
    "updated": {
      "data": "2022-07-09T02:07:46.790000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [
        "emberjs",
        "emberjs$PRODUCT$ember.js"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-79"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2013-07-24T00:00:00+00:00",
    "description": "In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the `tagName` property of an `Ember.View` was inserted into such a string without being sanitized. This means that if an application assigns a view's `tagName` to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain (\"XSS\"). This vulnerability only affects applications that assign or bind user-provided content to `tagName`.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.9,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2013/CVE-2013-4170.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2013-4170",
      "https://www.cve.org/CVERecord?id=CVE-2013-4170"
    ],
    "title": "ember.js: Cross-site scripting when binding `tagName` to User-Supplied Data",
    "updated": "2013-07-24T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-79"
    ]
  }
}