{
  "cve": "CVE-2024-26653",
  "mitre": {
    "cpes": [],
    "created": "2024-04-01T08:33:04.200000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: misc: ljca: Fix double free in error handling path\n\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function ljca_auxdev_release\ncalls kfree(auxdev->dev.platform_data) to free the parameter data\nof the function ljca_new_client_device. The callers of\nljca_new_client_device shouldn't call kfree() again\nin the error handling path to free the platform data.\n\nFix this by cleaning up the redundant kfree() in all callers and\nadding kfree() the passed in platform_data on errors which happen\nbefore auxiliary_device_init() succeeds .",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/26xxx/CVE-2024-26653.json",
    "references": [
      "https://git.kernel.org/stable/c/420babea4f1881a7c4ea22a8e218b8c6895d3f21",
      "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80",
      "https://git.kernel.org/stable/c/8a9f653cc852677003c23ee8075e3ed8fb4743c9"
    ],
    "title": "usb: misc: ljca: Fix double free in error handling path",
    "updated": "2024-08-15T19:26:32.668000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-04-01T09:15:51.010000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: misc: ljca: Fix double free in error handling path\n\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function ljca_auxdev_release\ncalls kfree(auxdev->dev.platform_data) to free the parameter data\nof the function ljca_new_client_device. The callers of\nljca_new_client_device shouldn't call kfree() again\nin the error handling path to free the platform data.\n\nFix this by cleaning up the redundant kfree() in all callers and\nadding kfree() the passed in platform_data on errors which happen\nbefore auxiliary_device_init() succeeds .",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-26653.json",
    "references": [
      "https://git.kernel.org/stable/c/420babea4f1881a7c4ea22a8e218b8c6895d3f21",
      "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80",
      "https://git.kernel.org/stable/c/8a9f653cc852677003c23ee8075e3ed8fb4743c9"
    ],
    "title": null,
    "updated": "2024-04-03T14:15:16.520000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-04-01T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: misc: ljca: Fix double free in error handling path\n\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function ljca_auxdev_release\ncalls kfree(auxdev->dev.platform_data) to free the parameter data\nof the function ljca_new_client_device. The callers of\nljca_new_client_device shouldn't call kfree() again\nin the error handling path to free the platform data.\n\nFix this by cleaning up the redundant kfree() in all callers and\nadding kfree() the passed in platform_data on errors which happen\nbefore auxiliary_device_init() succeeds .",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/420babea4f1881a7c4ea22a8e218b8c6895d3f21",
        "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80",
        "https://git.kernel.org/stable/c/8a9f653cc852677003c23ee8075e3ed8fb4743c9",
        "https://lore.kernel.org/linux-cve-announce/2024040122-CVE-2024-26653-7903@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-26653",
        "https://www.cve.org/CVERecord?id=CVE-2024-26653"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "usb: misc: ljca: Fix double free in error handling path",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-15T19:26:32.668000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-415"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-04-01T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nusb: misc: ljca: Fix double free in error handling path\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function ljca_auxdev_release\ncalls kfree(auxdev->dev.platform_data) to free the parameter data\nof the function ljca_new_client_device. The callers of\nljca_new_client_device shouldn't call kfree() again\nin the error handling path to free the platform data.\nFix this by cleaning up the redundant kfree() in all callers and\nadding kfree() the passed in platform_data on errors which happen\nbefore auxiliary_device_init() succeeds .",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-26653.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024040122-CVE-2024-26653-7903@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-26653",
      "https://www.cve.org/CVERecord?id=CVE-2024-26653"
    ],
    "title": "kernel: usb: misc: ljca: Fix double free in error handling path",
    "updated": "2024-04-01T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-415"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-04-01T08:33:04.200000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: misc: ljca: Fix double free in error handling path\n\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function ljca_auxdev_release\ncalls kfree(auxdev->dev.platform_data) to free the parameter data\nof the function ljca_new_client_device. The callers of\nljca_new_client_device shouldn't call kfree() again\nin the error handling path to free the platform data.\n\nFix this by cleaning up the redundant kfree() in all callers and\nadding kfree() the passed in platform_data on errors which happen\nbefore auxiliary_device_init() succeeds .",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/420babea4f1881a7c4ea22a8e218b8c6895d3f21",
      "https://git.kernel.org/stable/c/7c9631969287a5366bc8e39cd5abff154b35fb80",
      "https://git.kernel.org/stable/c/8a9f653cc852677003c23ee8075e3ed8fb4743c9"
    ],
    "title": "usb: misc: ljca: Fix double free in error handling path",
    "updated": "2024-08-02T00:07:19.799000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/26xxx/CVE-2024-26653.json",
    "weaknesses": []
  }
}