{
  "cve": "CVE-2024-47666",
  "mitre": {
    "cpes": [],
    "created": "2024-10-09T14:13:58.849000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm80xx: Set phy->enable_completion only when we wait for it\n\npm8001_phy_control() populates the enable_completion pointer with a stack\naddress, sends a PHY_LINK_RESET / PHY_HARD_RESET, waits 300 ms, and\nreturns. The problem arises when a phy control response comes late.  After\n300 ms the pm8001_phy_control() function returns and the passed\nenable_completion stack address is no longer valid. Late phy control\nresponse invokes complete() on a dangling enable_completion pointer which\nleads to a kernel crash.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/47xxx/CVE-2024-47666.json",
    "references": [
      "https://git.kernel.org/stable/c/7b1d779647afaea9185fa2f150b1721e7c1aae89",
      "https://git.kernel.org/stable/c/e4f949ef1516c0d74745ee54a0f4882c1f6c7aea",
      "https://git.kernel.org/stable/c/f14d3e1aa613311c744af32d75125e95fc8ffb84"
    ],
    "title": "scsi: pm80xx: Set phy->enable_completion only when we wait for it",
    "updated": "2024-10-10T13:21:56.821000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-10-09T15:15:15.353000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm80xx: Set phy->enable_completion only when we wait for it\n\npm8001_phy_control() populates the enable_completion pointer with a stack\naddress, sends a PHY_LINK_RESET / PHY_HARD_RESET, waits 300 ms, and\nreturns. The problem arises when a phy control response comes late.  After\n300 ms the pm8001_phy_control() function returns and the passed\nenable_completion stack address is no longer valid. Late phy control\nresponse invokes complete() on a dangling enable_completion pointer which\nleads to a kernel crash.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-47666.json",
    "references": [
      "https://git.kernel.org/stable/c/7b1d779647afaea9185fa2f150b1721e7c1aae89",
      "https://git.kernel.org/stable/c/e4f949ef1516c0d74745ee54a0f4882c1f6c7aea",
      "https://git.kernel.org/stable/c/f14d3e1aa613311c744af32d75125e95fc8ffb84"
    ],
    "title": null,
    "updated": "2024-10-10T12:51:56.987000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-10-09T14:30:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm80xx: Set phy->enable_completion only when we wait for it\n\npm8001_phy_control() populates the enable_completion pointer with a stack\naddress, sends a PHY_LINK_RESET / PHY_HARD_RESET, waits 300 ms, and\nreturns. The problem arises when a phy control response comes late.  After\n300 ms the pm8001_phy_control() function returns and the passed\nenable_completion stack address is no longer valid. Late phy control\nresponse invokes complete() on a dangling enable_completion pointer which\nleads to a kernel crash.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "scsi: pm80xx: Set phy->enable_completion only when we wait for it",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/7b1d779647afaea9185fa2f150b1721e7c1aae89",
                "https://git.kernel.org/stable/c/e4f949ef1516c0d74745ee54a0f4882c1f6c7aea",
                "https://git.kernel.org/stable/c/f14d3e1aa613311c744af32d75125e95fc8ffb84"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "11091b0c-fe00-4e57-a6b5-6a41cb7fc245"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-10-09T14:13:58.849000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm80xx: Set phy->enable_completion only when we wait for it\n\npm8001_phy_control() populates the enable_completion pointer with a stack\naddress, sends a PHY_LINK_RESET / PHY_HARD_RESET, waits 300 ms, and\nreturns. The problem arises when a phy control response comes late.  After\n300 ms the pm8001_phy_control() function returns and the passed\nenable_completion stack address is no longer valid. Late phy control\nresponse invokes complete() on a dangling enable_completion pointer which\nleads to a kernel crash.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/7b1d779647afaea9185fa2f150b1721e7c1aae89",
        "https://git.kernel.org/stable/c/e4f949ef1516c0d74745ee54a0f4882c1f6c7aea",
        "https://git.kernel.org/stable/c/f14d3e1aa613311c744af32d75125e95fc8ffb84"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "scsi: pm80xx: Set phy->enable_completion only when we wait for it",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-10-10T13:21:56.821000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  }
}