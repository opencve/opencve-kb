{
  "cve": "CVE-2020-26241",
  "mitre": {
    "cpes": [],
    "created": "2020-11-25T01:25:20+00:00",
    "description": "Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. This is a Consensus vulnerability in Geth before version 1.9.17 which can be used to cause a chain-split where vulnerable nodes reject the canonical chain. Geth's pre-compiled dataCopy (at 0x00...04) contract did a shallow copy on invocation. An attacker could deploy a contract that writes X to an EVM memory region R, then calls 0x00..04 with R as an argument, then overwrites R to Y, and finally invokes the RETURNDATACOPY opcode. When this contract is invoked, a consensus-compliant node would push X on the EVM stack, whereas Geth would push Y. This is fixed in version 1.9.17.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2020/26xxx/CVE-2020-26241.json",
    "references": [
      "https://blog.ethereum.org/2020/11/12/geth_security_release/",
      "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-69v6-xc2j-r2jf"
    ],
    "title": "Shallow copy bug in geth",
    "updated": "2024-08-04T15:56:03.871000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-682"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:ethereum:go_ethereum:*:*:*:*:*:*:*:*"
    ],
    "created": "2020-11-25T02:15:11.047000+00:00",
    "description": "Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. This is a Consensus vulnerability in Geth before version 1.9.17 which can be used to cause a chain-split where vulnerable nodes reject the canonical chain. Geth's pre-compiled dataCopy (at 0x00...04) contract did a shallow copy on invocation. An attacker could deploy a contract that writes X to an EVM memory region R, then calls 0x00..04 with R as an argument, then overwrites R to Y, and finally invokes the RETURNDATACOPY opcode. When this contract is invoked, a consensus-compliant node would push X on the EVM stack, whereas Geth would push Y. This is fixed in version 1.9.17.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.5,
        "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.1,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2020/CVE-2020-26241.json",
    "references": [
      "https://blog.ethereum.org/2020/11/12/geth_security_release/",
      "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-69v6-xc2j-r2jf"
    ],
    "title": null,
    "updated": "2020-12-03T15:48:38.977000+00:00",
    "vendors": [
      "ethereum",
      "ethereum$PRODUCT$go_ethereum"
    ],
    "weaknesses": [
      "CWE-682"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:ethereum:go_ethereum:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2020-11-25T01:25:20+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. This is a Consensus vulnerability in Geth before version 1.9.17 which can be used to cause a chain-split where vulnerable nodes reject the canonical chain. Geth's pre-compiled dataCopy (at 0x00...04) contract did a shallow copy on invocation. An attacker could deploy a contract that writes X to an EVM memory region R, then calls 0x00..04 with R as an argument, then overwrites R to Y, and finally invokes the RETURNDATACOPY opcode. When this contract is invoked, a consensus-compliant node would push X on the EVM stack, whereas Geth would push Y. This is fixed in version 1.9.17.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.5,
          "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://blog.ethereum.org/2020/11/12/geth_security_release/",
        "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-69v6-xc2j-r2jf"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Shallow copy bug in geth",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T15:56:03.871000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "ethereum",
        "ethereum$PRODUCT$go_ethereum"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-682"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}