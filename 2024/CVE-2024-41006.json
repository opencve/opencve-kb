{
  "cve": "CVE-2024-41006",
  "mitre": {
    "cpes": [],
    "created": "2024-07-12T12:44:41.176000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Fix a memory leak in nr_heartbeat_expiry()\n\nsyzbot reported a memory leak in nr_create() [0].\n\nCommit 409db27e3a2e (\"netrom: Fix use-after-free of a listening socket.\")\nadded sock_hold() to the nr_heartbeat_expiry() function, where\na) a socket has a SOCK_DESTROY flag or\nb) a listening socket has a SOCK_DEAD flag.\n\nBut in the case \"a,\" when the SOCK_DESTROY flag is set, the file descriptor\nhas already been closed and the nr_release() function has been called.\nSo it makes no sense to hold the reference count because no one will\ncall another nr_destroy_socket() and put it as in the case \"b.\"\n\nnr_connect\n  nr_establish_data_link\n    nr_start_heartbeat\n\nnr_release\n  switch (nr->state)\n  case NR_STATE_3\n    nr->state = NR_STATE_2\n    sock_set_flag(sk, SOCK_DESTROY);\n\n                        nr_rx_frame\n                          nr_process_rx_frame\n                            switch (nr->state)\n                            case NR_STATE_2\n                              nr_state2_machine()\n                                nr_disconnect()\n                                  nr_sk(sk)->state = NR_STATE_0\n                                  sock_set_flag(sk, SOCK_DEAD)\n\n                        nr_heartbeat_expiry\n                          switch (nr->state)\n                          case NR_STATE_0\n                            if (sock_flag(sk, SOCK_DESTROY) ||\n                               (sk->sk_state == TCP_LISTEN\n                                 && sock_flag(sk, SOCK_DEAD)))\n                               sock_hold()  // ( !!! )\n                               nr_destroy_socket()\n\nTo fix the memory leak, let's call sock_hold() only for a listening socket.\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller.\n\n[0]: https://syzkaller.appspot.com/bug?extid=d327a1f3b12e1e206c16",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/41xxx/CVE-2024-41006.json",
    "references": [
      "https://git.kernel.org/stable/c/0b9130247f3b6a1122478471ff0e014ea96bb735",
      "https://git.kernel.org/stable/c/280cf1173726a7059b628c610c71050d5c0b6937",
      "https://git.kernel.org/stable/c/5391f9db2cab5ef1cb411be1ab7dbec728078fba",
      "https://git.kernel.org/stable/c/a02fd5d775cf9787ee7698c797e20f2fa13d2e2b",
      "https://git.kernel.org/stable/c/b6ebe4fed73eedeb73f4540f8edc4871945474c8",
      "https://git.kernel.org/stable/c/d377f5a28332954b19e373d36823e59830ab1712",
      "https://git.kernel.org/stable/c/d616876256b38ecf9a1a1c7d674192c5346bc69c",
      "https://git.kernel.org/stable/c/e07a9c2a850cdebf625e7a1b8171bd23a8554313"
    ],
    "title": "netrom: Fix a memory leak in nr_heartbeat_expiry()",
    "updated": "2024-08-02T04:39:56.157000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-07-12T13:15:21.370000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Fix a memory leak in nr_heartbeat_expiry()\n\nsyzbot reported a memory leak in nr_create() [0].\n\nCommit 409db27e3a2e (\"netrom: Fix use-after-free of a listening socket.\")\nadded sock_hold() to the nr_heartbeat_expiry() function, where\na) a socket has a SOCK_DESTROY flag or\nb) a listening socket has a SOCK_DEAD flag.\n\nBut in the case \"a,\" when the SOCK_DESTROY flag is set, the file descriptor\nhas already been closed and the nr_release() function has been called.\nSo it makes no sense to hold the reference count because no one will\ncall another nr_destroy_socket() and put it as in the case \"b.\"\n\nnr_connect\n  nr_establish_data_link\n    nr_start_heartbeat\n\nnr_release\n  switch (nr->state)\n  case NR_STATE_3\n    nr->state = NR_STATE_2\n    sock_set_flag(sk, SOCK_DESTROY);\n\n                        nr_rx_frame\n                          nr_process_rx_frame\n                            switch (nr->state)\n                            case NR_STATE_2\n                              nr_state2_machine()\n                                nr_disconnect()\n                                  nr_sk(sk)->state = NR_STATE_0\n                                  sock_set_flag(sk, SOCK_DEAD)\n\n                        nr_heartbeat_expiry\n                          switch (nr->state)\n                          case NR_STATE_0\n                            if (sock_flag(sk, SOCK_DESTROY) ||\n                               (sk->sk_state == TCP_LISTEN\n                                 && sock_flag(sk, SOCK_DEAD)))\n                               sock_hold()  // ( !!! )\n                               nr_destroy_socket()\n\nTo fix the memory leak, let's call sock_hold() only for a listening socket.\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller.\n\n[0]: https://syzkaller.appspot.com/bug?extid=d327a1f3b12e1e206c16",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-41006.json",
    "references": [
      "https://git.kernel.org/stable/c/0b9130247f3b6a1122478471ff0e014ea96bb735",
      "https://git.kernel.org/stable/c/280cf1173726a7059b628c610c71050d5c0b6937",
      "https://git.kernel.org/stable/c/5391f9db2cab5ef1cb411be1ab7dbec728078fba",
      "https://git.kernel.org/stable/c/a02fd5d775cf9787ee7698c797e20f2fa13d2e2b",
      "https://git.kernel.org/stable/c/b6ebe4fed73eedeb73f4540f8edc4871945474c8",
      "https://git.kernel.org/stable/c/d377f5a28332954b19e373d36823e59830ab1712",
      "https://git.kernel.org/stable/c/d616876256b38ecf9a1a1c7d674192c5346bc69c",
      "https://git.kernel.org/stable/c/e07a9c2a850cdebf625e7a1b8171bd23a8554313"
    ],
    "title": null,
    "updated": "2024-07-12T16:34:58.687000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-07-12T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Fix a memory leak in nr_heartbeat_expiry()\n\nsyzbot reported a memory leak in nr_create() [0].\n\nCommit 409db27e3a2e (\"netrom: Fix use-after-free of a listening socket.\")\nadded sock_hold() to the nr_heartbeat_expiry() function, where\na) a socket has a SOCK_DESTROY flag or\nb) a listening socket has a SOCK_DEAD flag.\n\nBut in the case \"a,\" when the SOCK_DESTROY flag is set, the file descriptor\nhas already been closed and the nr_release() function has been called.\nSo it makes no sense to hold the reference count because no one will\ncall another nr_destroy_socket() and put it as in the case \"b.\"\n\nnr_connect\n  nr_establish_data_link\n    nr_start_heartbeat\n\nnr_release\n  switch (nr->state)\n  case NR_STATE_3\n    nr->state = NR_STATE_2\n    sock_set_flag(sk, SOCK_DESTROY);\n\n                        nr_rx_frame\n                          nr_process_rx_frame\n                            switch (nr->state)\n                            case NR_STATE_2\n                              nr_state2_machine()\n                                nr_disconnect()\n                                  nr_sk(sk)->state = NR_STATE_0\n                                  sock_set_flag(sk, SOCK_DEAD)\n\n                        nr_heartbeat_expiry\n                          switch (nr->state)\n                          case NR_STATE_0\n                            if (sock_flag(sk, SOCK_DESTROY) ||\n                               (sk->sk_state == TCP_LISTEN\n                                 && sock_flag(sk, SOCK_DEAD)))\n                               sock_hold()  // ( !!! )\n                               nr_destroy_socket()\n\nTo fix the memory leak, let's call sock_hold() only for a listening socket.\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller.\n\n[0]: https://syzkaller.appspot.com/bug?extid=d327a1f3b12e1e206c16",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/0b9130247f3b6a1122478471ff0e014ea96bb735",
        "https://git.kernel.org/stable/c/280cf1173726a7059b628c610c71050d5c0b6937",
        "https://git.kernel.org/stable/c/5391f9db2cab5ef1cb411be1ab7dbec728078fba",
        "https://git.kernel.org/stable/c/a02fd5d775cf9787ee7698c797e20f2fa13d2e2b",
        "https://git.kernel.org/stable/c/b6ebe4fed73eedeb73f4540f8edc4871945474c8",
        "https://git.kernel.org/stable/c/d377f5a28332954b19e373d36823e59830ab1712",
        "https://git.kernel.org/stable/c/d616876256b38ecf9a1a1c7d674192c5346bc69c",
        "https://git.kernel.org/stable/c/e07a9c2a850cdebf625e7a1b8171bd23a8554313",
        "https://lore.kernel.org/linux-cve-announce/2024071244-CVE-2024-41006-d24b@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-41006",
        "https://www.cve.org/CVERecord?id=CVE-2024-41006"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "netrom: Fix a memory leak in nr_heartbeat_expiry()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T04:39:56.157000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-07-12T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nnetrom: Fix a memory leak in nr_heartbeat_expiry()\nsyzbot reported a memory leak in nr_create() [0].\nCommit 409db27e3a2e (\"netrom: Fix use-after-free of a listening socket.\")\nadded sock_hold() to the nr_heartbeat_expiry() function, where\na) a socket has a SOCK_DESTROY flag or\nb) a listening socket has a SOCK_DEAD flag.\nBut in the case \"a,\" when the SOCK_DESTROY flag is set, the file descriptor\nhas already been closed and the nr_release() function has been called.\nSo it makes no sense to hold the reference count because no one will\ncall another nr_destroy_socket() and put it as in the case \"b.\"\nnr_connect\nnr_establish_data_link\nnr_start_heartbeat\nnr_release\nswitch (nr->state)\ncase NR_STATE_3\nnr->state = NR_STATE_2\nsock_set_flag(sk, SOCK_DESTROY);\nnr_rx_frame\nnr_process_rx_frame\nswitch (nr->state)\ncase NR_STATE_2\nnr_state2_machine()\nnr_disconnect()\nnr_sk(sk)->state = NR_STATE_0\nsock_set_flag(sk, SOCK_DEAD)\nnr_heartbeat_expiry\nswitch (nr->state)\ncase NR_STATE_0\nif (sock_flag(sk, SOCK_DESTROY) ||\n(sk->sk_state == TCP_LISTEN\n&& sock_flag(sk, SOCK_DEAD)))\nsock_hold()  // ( !!! )\nnr_destroy_socket()\nTo fix the memory leak, let's call sock_hold() only for a listening socket.\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller.\n[0]: https://syzkaller.appspot.com/bug?extid=d327a1f3b12e1e206c16",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-41006.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024071244-CVE-2024-41006-d24b@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-41006",
      "https://www.cve.org/CVERecord?id=CVE-2024-41006"
    ],
    "title": "kernel: netrom: Fix a memory leak in nr_heartbeat_expiry()",
    "updated": "2024-07-12T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}