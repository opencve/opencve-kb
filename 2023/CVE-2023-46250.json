{
  "cve": "CVE-2023-46250",
  "mitre": {
    "cpes": [],
    "created": "2023-10-31T15:23:32.852000+00:00",
    "description": "pypdf is a free and open-source pure-python PDF library. An attacker who uses a vulnerability present in versions 3.7.0 through 3.16.4 can craft a PDF which leads to an infinite loop. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations. The issue was fixed in version 3.17.0. As a workaround, apply the patch manually by modifying `pypdf/generic/_data_structures.py`.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.1,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/46xxx/CVE-2023-46250.json",
    "references": [
      "https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d",
      "https://github.com/py-pdf/pypdf/pull/2264",
      "https://github.com/py-pdf/pypdf/security/advisories/GHSA-wjcc-cq79-p63f"
    ],
    "title": "pypdf possible Infinite Loop when PdfWriter(clone_from) is used with a PDF",
    "updated": "2024-09-05T18:54:52.306000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-835"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:pypdf_project:pypdf:*:*:*:*:*:*:*:*"
    ],
    "created": "2023-10-31T16:15:09.930000+00:00",
    "description": "pypdf is a free and open-source pure-python PDF library. An attacker who uses a vulnerability present in versions 3.7.0 through 3.16.4 can craft a PDF which leads to an infinite loop. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations. The issue was fixed in version 3.17.0. As a workaround, apply the patch manually by modifying `pypdf/generic/_data_structures.py`.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-46250.json",
    "references": [
      "https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d",
      "https://github.com/py-pdf/pypdf/pull/2264",
      "https://github.com/py-pdf/pypdf/security/advisories/GHSA-wjcc-cq79-p63f"
    ],
    "title": null,
    "updated": "2023-11-08T17:51:08.457000+00:00",
    "vendors": [
      "pypdf_project",
      "pypdf_project$PRODUCT$pypdf"
    ],
    "weaknesses": [
      "CWE-835"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:pypdf_project:pypdf:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-10-31T15:23:32.852000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "pypdf is a free and open-source pure-python PDF library. An attacker who uses a vulnerability present in versions 3.7.0 through 3.16.4 can craft a PDF which leads to an infinite loop. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations. The issue was fixed in version 3.17.0. As a workaround, apply the patch manually by modifying `pypdf/generic/_data_structures.py`.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.1,
          "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d",
        "https://github.com/py-pdf/pypdf/pull/2264",
        "https://github.com/py-pdf/pypdf/security/advisories/GHSA-wjcc-cq79-p63f"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "pypdf possible Infinite Loop when PdfWriter(clone_from) is used with a PDF",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-05T18:54:52.306000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "pypdf_project",
        "pypdf_project$PRODUCT$pypdf"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-835"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2023-10-31T15:23:32.852000+00:00",
    "description": "pypdf is a free and open-source pure-python PDF library. An attacker who uses a vulnerability present in versions 3.7.0 through 3.16.4 can craft a PDF which leads to an infinite loop. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations. The issue was fixed in version 3.17.0. As a workaround, apply the patch manually by modifying `pypdf/generic/_data_structures.py`.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d",
      "https://github.com/py-pdf/pypdf/pull/2264",
      "https://github.com/py-pdf/pypdf/security/advisories/GHSA-wjcc-cq79-p63f"
    ],
    "title": "pypdf possible Infinite Loop when PdfWriter(clone_from) is used with a PDF",
    "updated": "2024-08-02T20:37:40.140000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2023/46xxx/CVE-2023-46250.json",
    "weaknesses": []
  }
}