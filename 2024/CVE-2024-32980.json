{
  "cve": "CVE-2024-32980",
  "mitre": {
    "cpes": [],
    "created": "2024-05-08T14:32:09.059000+00:00",
    "description": "Spin is the developer tool for building and running serverless applications powered by WebAssembly. Prior to 2.4.3, some specifically configured Spin applications that use `self` requests without a specified URL authority can be induced to make requests to arbitrary hosts via the `Host` HTTP header. The following conditions need to be met for an application to be vulnerable: 1. The environment Spin is deployed in routes requests to the Spin runtime based on the request URL instead of the `Host` header, and leaves the `Host` header set to its original value; 2. The Spin application's component handling the incoming request is configured with an `allow_outbound_hosts` list containing `\"self\"`; and 3. In reaction to an incoming request, the component makes an outbound request whose URL doesn't include the hostname/port. Spin 2.4.3 has been released to fix this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 9.1,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/32xxx/CVE-2024-32980.json",
    "references": [
      "https://github.com/fermyon/spin/commit/b3db535c9edb72278d4db3a201f0ed214e561354",
      "https://github.com/fermyon/spin/security/advisories/GHSA-f3h7-gpjj-wcvh"
    ],
    "title": "Spin contains a potential network sandbox escape for specifically configured Spin applications",
    "updated": "2024-08-02T02:27:53.504000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-610"
    ]
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-08T15:15:10.530000+00:00",
    "description": "Spin is the developer tool for building and running serverless applications powered by WebAssembly. Prior to 2.4.3, some specifically configured Spin applications that use `self` requests without a specified URL authority can be induced to make requests to arbitrary hosts via the `Host` HTTP header. The following conditions need to be met for an application to be vulnerable: 1. The environment Spin is deployed in routes requests to the Spin runtime based on the request URL instead of the `Host` header, and leaves the `Host` header set to its original value; 2. The Spin application's component handling the incoming request is configured with an `allow_outbound_hosts` list containing `\"self\"`; and 3. In reaction to an incoming request, the component makes an outbound request whose URL doesn't include the hostname/port. Spin 2.4.3 has been released to fix this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 9.1,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-32980.json",
    "references": [
      "https://github.com/fermyon/spin/commit/b3db535c9edb72278d4db3a201f0ed214e561354",
      "https://github.com/fermyon/spin/security/advisories/GHSA-f3h7-gpjj-wcvh"
    ],
    "title": null,
    "updated": "2024-05-08T17:05:24.083000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-610"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-08T14:32:09.059000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "Spin is the developer tool for building and running serverless applications powered by WebAssembly. Prior to 2.4.3, some specifically configured Spin applications that use `self` requests without a specified URL authority can be induced to make requests to arbitrary hosts via the `Host` HTTP header. The following conditions need to be met for an application to be vulnerable: 1. The environment Spin is deployed in routes requests to the Spin runtime based on the request URL instead of the `Host` header, and leaves the `Host` header set to its original value; 2. The Spin application's component handling the incoming request is configured with an `allow_outbound_hosts` list containing `\"self\"`; and 3. In reaction to an incoming request, the component makes an outbound request whose URL doesn't include the hostname/port. Spin 2.4.3 has been released to fix this issue.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 9.1,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/fermyon/spin/commit/b3db535c9edb72278d4db3a201f0ed214e561354",
        "https://github.com/fermyon/spin/security/advisories/GHSA-f3h7-gpjj-wcvh"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "Spin contains a potential network sandbox escape for specifically configured Spin applications",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T02:27:53.504000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-610"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-08T14:32:09.059000+00:00",
    "description": "Spin is the developer tool for building and running serverless applications powered by WebAssembly. Prior to 2.4.3, some specifically configured Spin applications that use `self` requests without a specified URL authority can be induced to make requests to arbitrary hosts via the `Host` HTTP header. The following conditions need to be met for an application to be vulnerable: 1. The environment Spin is deployed in routes requests to the Spin runtime based on the request URL instead of the `Host` header, and leaves the `Host` header set to its original value; 2. The Spin application's component handling the incoming request is configured with an `allow_outbound_hosts` list containing `\"self\"`; and 3. In reaction to an incoming request, the component makes an outbound request whose URL doesn't include the hostname/port. Spin 2.4.3 has been released to fix this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://github.com/fermyon/spin/commit/b3db535c9edb72278d4db3a201f0ed214e561354",
      "https://github.com/fermyon/spin/security/advisories/GHSA-f3h7-gpjj-wcvh"
    ],
    "title": "Spin contains a potential network sandbox escape for specifically configured Spin applications",
    "updated": "2024-08-02T02:27:53.504000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/32xxx/CVE-2024-32980.json",
    "weaknesses": []
  }
}