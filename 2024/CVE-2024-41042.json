{
  "cve": "CVE-2024-41042",
  "mitre": {
    "cpes": [],
    "created": "2024-07-29T14:31:55.530000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: prefer nft_chain_validate\n\nnft_chain_validate already performs loop detection because a cycle will\nresult in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).\n\nIt also follows maps via ->validate callback in nft_lookup, so there\nappears no reason to iterate the maps again.\n\nnf_tables_check_loops() and all its helper functions can be removed.\nThis improves ruleset load time significantly, from 23s down to 12s.\n\nThis also fixes a crash bug. Old loop detection code can result in\nunbounded recursion:\n\nBUG: TASK stack guard page was hit at ....\nOops: stack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1\n[..]\n\nwith a suitable ruleset during validation of register stores.\n\nI can't see any actual reason to attempt to check for this from\nnft_validate_register_store(), at this point the transaction is still in\nprogress, so we don't have a full picture of the rule graph.\n\nFor nf-next it might make sense to either remove it or make this depend\non table->validate_state in case we could catch an error earlier\n(for improved error reporting to userspace).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/41xxx/CVE-2024-41042.json",
    "references": [
      "https://git.kernel.org/stable/c/1947e4c3346faa8ac7e343652c0fd3b3e394202f",
      "https://git.kernel.org/stable/c/31c35f9f89ef585f1edb53e17ac73a0ca4a9712b",
      "https://git.kernel.org/stable/c/717c91c6ed73e248de6a15bc53adefb81446c9d0",
      "https://git.kernel.org/stable/c/8246b7466c8da49d0d9e85e26cbd69dd6d3e3d1e",
      "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae",
      "https://git.kernel.org/stable/c/b6b6e430470e1c3c5513311cb35a15a205595abe",
      "https://git.kernel.org/stable/c/cd4348e0a50286282c314ad6d2b0740e7c812c24",
      "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c"
    ],
    "title": "netfilter: nf_tables: prefer nft_chain_validate",
    "updated": "2024-08-19T04:29:13.180000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-07-29T15:15:12.647000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: prefer nft_chain_validate\n\nnft_chain_validate already performs loop detection because a cycle will\nresult in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).\n\nIt also follows maps via ->validate callback in nft_lookup, so there\nappears no reason to iterate the maps again.\n\nnf_tables_check_loops() and all its helper functions can be removed.\nThis improves ruleset load time significantly, from 23s down to 12s.\n\nThis also fixes a crash bug. Old loop detection code can result in\nunbounded recursion:\n\nBUG: TASK stack guard page was hit at ....\nOops: stack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1\n[..]\n\nwith a suitable ruleset during validation of register stores.\n\nI can't see any actual reason to attempt to check for this from\nnft_validate_register_store(), at this point the transaction is still in\nprogress, so we don't have a full picture of the rule graph.\n\nFor nf-next it might make sense to either remove it or make this depend\non table->validate_state in case we could catch an error earlier\n(for improved error reporting to userspace).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-41042.json",
    "references": [
      "https://git.kernel.org/stable/c/1947e4c3346faa8ac7e343652c0fd3b3e394202f",
      "https://git.kernel.org/stable/c/31c35f9f89ef585f1edb53e17ac73a0ca4a9712b",
      "https://git.kernel.org/stable/c/717c91c6ed73e248de6a15bc53adefb81446c9d0",
      "https://git.kernel.org/stable/c/8246b7466c8da49d0d9e85e26cbd69dd6d3e3d1e",
      "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae",
      "https://git.kernel.org/stable/c/b6b6e430470e1c3c5513311cb35a15a205595abe",
      "https://git.kernel.org/stable/c/cd4348e0a50286282c314ad6d2b0740e7c812c24",
      "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c"
    ],
    "title": null,
    "updated": "2024-08-19T05:15:06.733000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-14T14:15:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/717c91c6ed73e248de6a15bc53adefb81446c9d0",
                "https://git.kernel.org/stable/c/b6b6e430470e1c3c5513311cb35a15a205595abe"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "13bab4e2-b0c4-426d-a331-8ab50fdf716a"
      },
      {
        "created": "2024-08-19T04:45:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/1947e4c3346faa8ac7e343652c0fd3b3e394202f",
                "https://git.kernel.org/stable/c/31c35f9f89ef585f1edb53e17ac73a0ca4a9712b",
                "https://git.kernel.org/stable/c/8246b7466c8da49d0d9e85e26cbd69dd6d3e3d1e",
                "https://git.kernel.org/stable/c/cd4348e0a50286282c314ad6d2b0740e7c812c24"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "f058a1f8-8d7c-4b80-9277-6f08a46d25c4"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-07-29T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: prefer nft_chain_validate\n\nnft_chain_validate already performs loop detection because a cycle will\nresult in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).\n\nIt also follows maps via ->validate callback in nft_lookup, so there\nappears no reason to iterate the maps again.\n\nnf_tables_check_loops() and all its helper functions can be removed.\nThis improves ruleset load time significantly, from 23s down to 12s.\n\nThis also fixes a crash bug. Old loop detection code can result in\nunbounded recursion:\n\nBUG: TASK stack guard page was hit at ....\nOops: stack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1\n[..]\n\nwith a suitable ruleset during validation of register stores.\n\nI can't see any actual reason to attempt to check for this from\nnft_validate_register_store(), at this point the transaction is still in\nprogress, so we don't have a full picture of the rule graph.\n\nFor nf-next it might make sense to either remove it or make this depend\non table->validate_state in case we could catch an error earlier\n(for improved error reporting to userspace).",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/1947e4c3346faa8ac7e343652c0fd3b3e394202f",
        "https://git.kernel.org/stable/c/31c35f9f89ef585f1edb53e17ac73a0ca4a9712b",
        "https://git.kernel.org/stable/c/717c91c6ed73e248de6a15bc53adefb81446c9d0",
        "https://git.kernel.org/stable/c/8246b7466c8da49d0d9e85e26cbd69dd6d3e3d1e",
        "https://git.kernel.org/stable/c/9df785aeb7dcc8efd1d4110bb27d26005298ebae",
        "https://git.kernel.org/stable/c/b6b6e430470e1c3c5513311cb35a15a205595abe",
        "https://git.kernel.org/stable/c/cd4348e0a50286282c314ad6d2b0740e7c812c24",
        "https://git.kernel.org/stable/c/cff3bd012a9512ac5ed858d38e6ed65f6391008c",
        "https://lore.kernel.org/linux-cve-announce/2024072924-CVE-2024-41042-c338@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-41042",
        "https://www.cve.org/CVERecord?id=CVE-2024-41042"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "netfilter: nf_tables: prefer nft_chain_validate",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-19T05:15:06.733000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-07-29T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nnetfilter: nf_tables: prefer nft_chain_validate\nnft_chain_validate already performs loop detection because a cycle will\nresult in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).\nIt also follows maps via ->validate callback in nft_lookup, so there\nappears no reason to iterate the maps again.\nnf_tables_check_loops() and all its helper functions can be removed.\nThis improves ruleset load time significantly, from 23s down to 12s.\nThis also fixes a crash bug. Old loop detection code can result in\nunbounded recursion:\nBUG: TASK stack guard page was hit at ....\nOops: stack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1\n[..]\nwith a suitable ruleset during validation of register stores.\nI can't see any actual reason to attempt to check for this from\nnft_validate_register_store(), at this point the transaction is still in\nprogress, so we don't have a full picture of the rule graph.\nFor nf-next it might make sense to either remove it or make this depend\non table->validate_state in case we could catch an error earlier\n(for improved error reporting to userspace).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-41042.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024072924-CVE-2024-41042-c338@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-41042",
      "https://www.cve.org/CVERecord?id=CVE-2024-41042"
    ],
    "title": "kernel: netfilter: nf_tables: prefer nft_chain_validate",
    "updated": "2024-07-29T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}