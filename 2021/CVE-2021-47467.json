{
  "cve": "CVE-2021-47467",
  "mitre": {
    "cpes": [],
    "created": "2024-05-22T06:23:26.324000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkunit: fix reference count leak in kfree_at_end\n\nThe reference counting issue happens in the normal path of\nkfree_at_end(). When kunit_alloc_and_get_resource() is invoked, the\nfunction forgets to handle the returned resource object, whose refcount\nincreased inside, causing a refcount leak.\n\nFix this issue by calling kunit_alloc_resource() instead of\nkunit_alloc_and_get_resource().\n\nFixed the following when applying:\nShuah Khan <skhan@linuxfoundation.org>\n\nCHECK: Alignment should match open parenthesis\n+\tkunit_alloc_resource(test, NULL, kfree_res_free, GFP_KERNEL,\n \t\t\t\t     (void *)to_free);",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/47xxx/CVE-2021-47467.json",
    "references": [
      "https://git.kernel.org/stable/c/bbdd158b40b66a9403391a517f24ef6613573446",
      "https://git.kernel.org/stable/c/f62314b1ced25c58b86e044fc951cd6a1ea234cf"
    ],
    "title": "kunit: fix reference count leak in kfree_at_end",
    "updated": "2024-08-04T05:39:59.605000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-22T07:15:11.533000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkunit: fix reference count leak in kfree_at_end\n\nThe reference counting issue happens in the normal path of\nkfree_at_end(). When kunit_alloc_and_get_resource() is invoked, the\nfunction forgets to handle the returned resource object, whose refcount\nincreased inside, causing a refcount leak.\n\nFix this issue by calling kunit_alloc_resource() instead of\nkunit_alloc_and_get_resource().\n\nFixed the following when applying:\nShuah Khan <skhan@linuxfoundation.org>\n\nCHECK: Alignment should match open parenthesis\n+\tkunit_alloc_resource(test, NULL, kfree_res_free, GFP_KERNEL,\n \t\t\t\t     (void *)to_free);",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-47467.json",
    "references": [
      "https://git.kernel.org/stable/c/bbdd158b40b66a9403391a517f24ef6613573446",
      "https://git.kernel.org/stable/c/f62314b1ced25c58b86e044fc951cd6a1ea234cf"
    ],
    "title": null,
    "updated": "2024-05-22T12:46:53.887000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-22T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nkunit: fix reference count leak in kfree_at_end\n\nThe reference counting issue happens in the normal path of\nkfree_at_end(). When kunit_alloc_and_get_resource() is invoked, the\nfunction forgets to handle the returned resource object, whose refcount\nincreased inside, causing a refcount leak.\n\nFix this issue by calling kunit_alloc_resource() instead of\nkunit_alloc_and_get_resource().\n\nFixed the following when applying:\nShuah Khan <skhan@linuxfoundation.org>\n\nCHECK: Alignment should match open parenthesis\n+\tkunit_alloc_resource(test, NULL, kfree_res_free, GFP_KERNEL,\n \t\t\t\t     (void *)to_free);",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.1,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/bbdd158b40b66a9403391a517f24ef6613573446",
        "https://git.kernel.org/stable/c/f62314b1ced25c58b86e044fc951cd6a1ea234cf",
        "https://lore.kernel.org/linux-cve-announce/2024052227-CVE-2021-47467-29a2@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-47467",
        "https://www.cve.org/CVERecord?id=CVE-2021-47467"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "kunit: fix reference count leak in kfree_at_end",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T05:39:59.605000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-402"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-22T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nkunit: fix reference count leak in kfree_at_end\nThe reference counting issue happens in the normal path of\nkfree_at_end(). When kunit_alloc_and_get_resource() is invoked, the\nfunction forgets to handle the returned resource object, whose refcount\nincreased inside, causing a refcount leak.\nFix this issue by calling kunit_alloc_resource() instead of\nkunit_alloc_and_get_resource().\nFixed the following when applying:\nShuah Khan <skhan@linuxfoundation.org>\nCHECK: Alignment should match open parenthesis\n+kunit_alloc_resource(test, NULL, kfree_res_free, GFP_KERNEL,\n(void *)to_free);",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.1,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2021/CVE-2021-47467.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024052227-CVE-2021-47467-29a2@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-47467",
      "https://www.cve.org/CVERecord?id=CVE-2021-47467"
    ],
    "title": "kernel: kunit: fix reference count leak in kfree_at_end",
    "updated": "2024-05-22T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-402"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-22T06:23:26.324000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkunit: fix reference count leak in kfree_at_end\n\nThe reference counting issue happens in the normal path of\nkfree_at_end(). When kunit_alloc_and_get_resource() is invoked, the\nfunction forgets to handle the returned resource object, whose refcount\nincreased inside, causing a refcount leak.\n\nFix this issue by calling kunit_alloc_resource() instead of\nkunit_alloc_and_get_resource().\n\nFixed the following when applying:\nShuah Khan <skhan@linuxfoundation.org>\n\nCHECK: Alignment should match open parenthesis\n+\tkunit_alloc_resource(test, NULL, kfree_res_free, GFP_KERNEL,\n \t\t\t\t     (void *)to_free);",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/bbdd158b40b66a9403391a517f24ef6613573446",
      "https://git.kernel.org/stable/c/f62314b1ced25c58b86e044fc951cd6a1ea234cf"
    ],
    "title": "kunit: fix reference count leak in kfree_at_end",
    "updated": "2024-08-04T05:39:59.605000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2021/47xxx/CVE-2021-47467.json",
    "weaknesses": []
  }
}