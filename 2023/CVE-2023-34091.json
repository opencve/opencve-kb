{
  "cve": "CVE-2023-34091",
  "mitre": {
    "cpes": [],
    "created": "2023-06-01T16:24:53.920000+00:00",
    "description": "Kyverno is a policy engine designed for Kubernetes. In versions of Kyverno prior to 1.10.0, resources which have the `deletionTimestamp` field defined can bypass validate, generate, or mutate-existing policies, even in cases where the `validationFailureAction` field is set to `Enforce`. This situation occurs as resources pending deletion were being consciously exempted by Kyverno, as a way to reduce processing load as policies are typically not applied to objects which are being deleted. However, this could potentially result in allowing a malicious user to leverage the Kubernetes finalizers feature by setting a finalizer which causes the Kubernetes API server to set the `deletionTimestamp` and then not completing the delete operation as a way to explicitly to bypass a Kyverno policy. Note that this is not applicable to Kubernetes Pods but, as an example, a Kubernetes Service resource can be manipulated using an indefinite finalizer to bypass policies. This is resolved in Kyverno 1.10.0. There is no known workaround.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/34xxx/CVE-2023-34091.json",
    "references": [
      "https://github.com/kyverno/kyverno/releases/tag/v1.10.0",
      "https://github.com/kyverno/kyverno/security/advisories/GHSA-hq4m-4948-64cc"
    ],
    "title": "Kyverno resource with a deletionTimestamp may allow policy circumvention",
    "updated": "2024-08-02T16:01:53.601000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-285"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:nirmata:kyverno:*:*:*:*:*:go:*:*"
    ],
    "created": "2023-06-01T17:15:10.873000+00:00",
    "description": "Kyverno is a policy engine designed for Kubernetes. In versions of Kyverno prior to 1.10.0, resources which have the `deletionTimestamp` field defined can bypass validate, generate, or mutate-existing policies, even in cases where the `validationFailureAction` field is set to `Enforce`. This situation occurs as resources pending deletion were being consciously exempted by Kyverno, as a way to reduce processing load as policies are typically not applied to objects which are being deleted. However, this could potentially result in allowing a malicious user to leverage the Kubernetes finalizers feature by setting a finalizer which causes the Kubernetes API server to set the `deletionTimestamp` and then not completing the delete operation as a way to explicitly to bypass a Kyverno policy. Note that this is not applicable to Kubernetes Pods but, as an example, a Kubernetes Service resource can be manipulated using an indefinite finalizer to bypass policies. This is resolved in Kyverno 1.10.0. There is no known workaround.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-34091.json",
    "references": [
      "https://github.com/kyverno/kyverno/releases/tag/v1.10.0",
      "https://github.com/kyverno/kyverno/security/advisories/GHSA-hq4m-4948-64cc"
    ],
    "title": null,
    "updated": "2023-06-09T15:18:11.957000+00:00",
    "vendors": [
      "nirmata",
      "nirmata$PRODUCT$kyverno"
    ],
    "weaknesses": [
      "CWE-285",
      "NVD-CWE-noinfo"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:nirmata:kyverno:*:*:*:*:*:go:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-06-01T16:24:53.920000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "Kyverno is a policy engine designed for Kubernetes. In versions of Kyverno prior to 1.10.0, resources which have the `deletionTimestamp` field defined can bypass validate, generate, or mutate-existing policies, even in cases where the `validationFailureAction` field is set to `Enforce`. This situation occurs as resources pending deletion were being consciously exempted by Kyverno, as a way to reduce processing load as policies are typically not applied to objects which are being deleted. However, this could potentially result in allowing a malicious user to leverage the Kubernetes finalizers feature by setting a finalizer which causes the Kubernetes API server to set the `deletionTimestamp` and then not completing the delete operation as a way to explicitly to bypass a Kyverno policy. Note that this is not applicable to Kubernetes Pods but, as an example, a Kubernetes Service resource can be manipulated using an indefinite finalizer to bypass policies. This is resolved in Kyverno 1.10.0. There is no known workaround.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/kyverno/kyverno/releases/tag/v1.10.0",
        "https://github.com/kyverno/kyverno/security/advisories/GHSA-hq4m-4948-64cc"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Kyverno resource with a deletionTimestamp may allow policy circumvention",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T16:01:53.601000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "nirmata",
        "nirmata$PRODUCT$kyverno"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-285",
        "NVD-CWE-noinfo"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}