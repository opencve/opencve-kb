{
  "cve": "CVE-2019-15226",
  "mitre": {
    "cpes": [],
    "created": "2019-10-09T15:25:02+00:00",
    "description": "Upon receiving each incoming request header data, Envoy will iterate over existing request headers to verify that the total size of the headers stays below a maximum limit. The implementation in versions 1.10.0 through 1.11.1 for HTTP/1.x traffic and all versions of Envoy for HTTP/2 traffic had O(n^2) performance characteristics. A remote attacker may craft a request that stays below the maximum request header size but consists of many thousands of small headers to consume CPU and result in a denial-of-service attack.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2019/15xxx/CVE-2019-15226.json",
    "references": [
      "https://github.com/envoyproxy/envoy/commit/afc39bea36fd436e54262f150c009e8d72db5014",
      "https://github.com/envoyproxy/envoy/commits/master",
      "https://github.com/envoyproxy/envoy/issues/8520"
    ],
    "title": null,
    "updated": "2024-08-05T00:42:01.230000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:envoyproxy:envoy:1.0.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.1.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.10.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.11.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.11.1:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.11.2:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.2.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.3.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.4.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.5.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.6.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.7.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.7.1:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.8.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.9.0:*:*:*:*:*:*:*",
      "cpe:2.3:a:envoyproxy:envoy:1.9.1:*:*:*:*:*:*:*"
    ],
    "created": "2019-10-09T16:15:14.687000+00:00",
    "description": "Upon receiving each incoming request header data, Envoy will iterate over existing request headers to verify that the total size of the headers stays below a maximum limit. The implementation in versions 1.10.0 through 1.11.1 for HTTP/1.x traffic and all versions of Envoy for HTTP/2 traffic had O(n^2) performance characteristics. A remote attacker may craft a request that stays below the maximum request header size but consists of many thousands of small headers to consume CPU and result in a denial-of-service attack.",
    "metrics": {
      "cvssV2_0": {
        "score": 7.8,
        "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2019/CVE-2019-15226.json",
    "references": [
      "https://github.com/envoyproxy/envoy/commit/afc39bea36fd436e54262f150c009e8d72db5014",
      "https://github.com/envoyproxy/envoy/commits/master",
      "https://github.com/envoyproxy/envoy/issues/8520"
    ],
    "title": null,
    "updated": "2019-10-17T17:03:07.697000+00:00",
    "vendors": [
      "envoyproxy",
      "envoyproxy$PRODUCT$envoy"
    ],
    "weaknesses": [
      "CWE-400"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:envoyproxy:envoy:1.0.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.1.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.10.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.11.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.11.1:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.11.2:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.2.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.3.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.4.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.5.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.6.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.7.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.7.1:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.8.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.9.0:*:*:*:*:*:*:*",
        "cpe:2.3:a:envoyproxy:envoy:1.9.1:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2019-10-08T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "Upon receiving each incoming request header data, Envoy will iterate over existing request headers to verify that the total size of the headers stays below a maximum limit. The implementation in versions 1.10.0 through 1.11.1 for HTTP/1.x traffic and all versions of Envoy for HTTP/2 traffic had O(n^2) performance characteristics. A remote attacker may craft a request that stays below the maximum request header size but consists of many thousands of small headers to consume CPU and result in a denial-of-service attack.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 7.8,
          "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV3_1": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/envoyproxy/envoy/commit/afc39bea36fd436e54262f150c009e8d72db5014",
        "https://github.com/envoyproxy/envoy/commits/master",
        "https://github.com/envoyproxy/envoy/issues/8520",
        "https://nvd.nist.gov/vuln/detail/CVE-2019-15226",
        "https://www.cve.org/CVERecord?id=CVE-2019-15226"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "envoy: crafted request allows remote attacker to cause denial of service",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-05T00:42:01.230000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "envoyproxy",
        "envoyproxy$PRODUCT$envoy"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-400"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2019-10-08T00:00:00+00:00",
    "description": "Upon receiving each incoming request header data, Envoy will iterate over existing request headers to verify that the total size of the headers stays below a maximum limit. The implementation in versions 1.10.0 through 1.11.1 for HTTP/1.x traffic and all versions of Envoy for HTTP/2 traffic had O(n^2) performance characteristics. A remote attacker may craft a request that stays below the maximum request header size but consists of many thousands of small headers to consume CPU and result in a denial-of-service attack.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 7.5,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV3_1": {},
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2019/CVE-2019-15226.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2019-15226",
      "https://www.cve.org/CVERecord?id=CVE-2019-15226"
    ],
    "title": "envoy: crafted request allows remote attacker to cause denial of service",
    "updated": "2019-10-08T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-400"
    ]
  }
}