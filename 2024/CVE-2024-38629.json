{
  "cve": "CVE-2024-38629",
  "mitre": {
    "cpes": [],
    "created": "2024-06-21T10:18:20.239000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Avoid unnecessary destruction of file_ida\n\nfile_ida is allocated during cdev open and is freed accordingly\nduring cdev release. This sequence is guaranteed by driver file\noperations. Therefore, there is no need to destroy an already empty\nfile_ida when the WQ cdev is removed.\n\nWorse, ida_free() in cdev release may happen after destruction of\nfile_ida per WQ cdev. This can lead to accessing an id in file_ida\nafter it has been destroyed, resulting in a kernel panic.\n\nRemove ida_destroy(&file_ida) to address these issues.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/38xxx/CVE-2024-38629.json",
    "references": [
      "https://git.kernel.org/stable/c/15edb906211bf53e7b5574f7326ab734d6bff4f9",
      "https://git.kernel.org/stable/c/76e43fa6a456787bad31b8d0daeabda27351a480",
      "https://git.kernel.org/stable/c/9eb15f24a0b9b017b39cde8b8c07243676b63687"
    ],
    "title": "dmaengine: idxd: Avoid unnecessary destruction of file_ida",
    "updated": "2024-08-02T04:12:25.953000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-06-21T11:15:11.733000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Avoid unnecessary destruction of file_ida\n\nfile_ida is allocated during cdev open and is freed accordingly\nduring cdev release. This sequence is guaranteed by driver file\noperations. Therefore, there is no need to destroy an already empty\nfile_ida when the WQ cdev is removed.\n\nWorse, ida_free() in cdev release may happen after destruction of\nfile_ida per WQ cdev. This can lead to accessing an id in file_ida\nafter it has been destroyed, resulting in a kernel panic.\n\nRemove ida_destroy(&file_ida) to address these issues.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-38629.json",
    "references": [
      "https://git.kernel.org/stable/c/15edb906211bf53e7b5574f7326ab734d6bff4f9",
      "https://git.kernel.org/stable/c/76e43fa6a456787bad31b8d0daeabda27351a480",
      "https://git.kernel.org/stable/c/9eb15f24a0b9b017b39cde8b8c07243676b63687"
    ],
    "title": null,
    "updated": "2024-06-21T11:22:01.687000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-06-21T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Avoid unnecessary destruction of file_ida\n\nfile_ida is allocated during cdev open and is freed accordingly\nduring cdev release. This sequence is guaranteed by driver file\noperations. Therefore, there is no need to destroy an already empty\nfile_ida when the WQ cdev is removed.\n\nWorse, ida_free() in cdev release may happen after destruction of\nfile_ida per WQ cdev. This can lead to accessing an id in file_ida\nafter it has been destroyed, resulting in a kernel panic.\n\nRemove ida_destroy(&file_ida) to address these issues.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/15edb906211bf53e7b5574f7326ab734d6bff4f9",
        "https://git.kernel.org/stable/c/76e43fa6a456787bad31b8d0daeabda27351a480",
        "https://git.kernel.org/stable/c/9eb15f24a0b9b017b39cde8b8c07243676b63687",
        "https://lore.kernel.org/linux-cve-announce/2024062141-CVE-2024-38629-47c6@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-38629",
        "https://www.cve.org/CVERecord?id=CVE-2024-38629"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "dmaengine: idxd: Avoid unnecessary destruction of file_ida",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T04:12:25.953000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-416"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-06-21T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ndmaengine: idxd: Avoid unnecessary destruction of file_ida\nfile_ida is allocated during cdev open and is freed accordingly\nduring cdev release. This sequence is guaranteed by driver file\noperations. Therefore, there is no need to destroy an already empty\nfile_ida when the WQ cdev is removed.\nWorse, ida_free() in cdev release may happen after destruction of\nfile_ida per WQ cdev. This can lead to accessing an id in file_ida\nafter it has been destroyed, resulting in a kernel panic.\nRemove ida_destroy(&file_ida) to address these issues.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-38629.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024062141-CVE-2024-38629-47c6@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-38629",
      "https://www.cve.org/CVERecord?id=CVE-2024-38629"
    ],
    "title": "kernel: dmaengine: idxd: Avoid unnecessary destruction of file_ida",
    "updated": "2024-06-21T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-416"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-06-21T10:18:20.239000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Avoid unnecessary destruction of file_ida\n\nfile_ida is allocated during cdev open and is freed accordingly\nduring cdev release. This sequence is guaranteed by driver file\noperations. Therefore, there is no need to destroy an already empty\nfile_ida when the WQ cdev is removed.\n\nWorse, ida_free() in cdev release may happen after destruction of\nfile_ida per WQ cdev. This can lead to accessing an id in file_ida\nafter it has been destroyed, resulting in a kernel panic.\n\nRemove ida_destroy(&file_ida) to address these issues.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "dmaengine: idxd: Avoid unnecessary destruction of file_ida",
    "updated": "2024-06-21T13:46:19.639000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/38xxx/CVE-2024-38629.json",
    "weaknesses": []
  }
}