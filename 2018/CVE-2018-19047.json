{
  "cve": "CVE-2018-19047",
  "mitre": {
    "cpes": [],
    "created": "2018-11-07T05:00:00+00:00",
    "description": "mPDF through 7.1.6, if deployed as a web application that accepts arbitrary HTML, allows SSRF, as demonstrated by a '<img src=\"http://192.168' substring that triggers a call to getImage in Image/ImageProcessor.php. NOTE: the software maintainer disputes this, stating \"If you allow users to pass HTML without sanitising it, you're asking for trouble.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2018/19xxx/CVE-2018-19047.json",
    "references": [
      "https://github.com/mpdf/mpdf/issues/867"
    ],
    "title": null,
    "updated": "2024-08-05T11:30:04.075000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:mpdf_project:mpdf:*:*:*:*:*:*:*:*"
    ],
    "created": "2018-11-07T05:29:00.297000+00:00",
    "description": "mPDF through 7.1.6, if deployed as a web application that accepts arbitrary HTML, allows SSRF, as demonstrated by a '<img src=\"http://192.168' substring that triggers a call to getImage in Image/ImageProcessor.php. NOTE: the software maintainer disputes this, stating \"If you allow users to pass HTML without sanitising it, you're asking for trouble.",
    "metrics": {
      "cvssV2_0": {
        "score": 7.5,
        "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      },
      "cvssV3_0": {
        "score": 10.0,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2018/CVE-2018-19047.json",
    "references": [
      "https://github.com/mpdf/mpdf/issues/867"
    ],
    "title": null,
    "updated": "2024-08-05T12:15:21.510000+00:00",
    "vendors": [
      "mpdf_project",
      "mpdf_project$PRODUCT$mpdf"
    ],
    "weaknesses": [
      "CWE-918"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:mpdf_project:mpdf:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2018-11-07T05:00:00+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "mPDF through 7.1.6, if deployed as a web application that accepts arbitrary HTML, allows SSRF, as demonstrated by a '<img src=\"http://192.168' substring that triggers a call to getImage in Image/ImageProcessor.php. NOTE: the software maintainer disputes this, stating \"If you allow users to pass HTML without sanitising it, you're asking for trouble.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 7.5,
          "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 10.0,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/mpdf/mpdf/issues/867"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2024-08-05T12:15:21.510000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [
        "mpdf_project",
        "mpdf_project$PRODUCT$mpdf"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-918"
      ],
      "providers": [
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2018-11-07T05:00:00+00:00",
    "description": "mPDF through 7.1.6, if deployed as a web application that accepts arbitrary HTML, allows SSRF, as demonstrated by a '<img src=\"http://192.168' substring that triggers a call to getImage in Image/ImageProcessor.php. NOTE: the software maintainer disputes this, stating \"If you allow users to pass HTML without sanitising it, you're asking for trouble.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://github.com/mpdf/mpdf/issues/867"
    ],
    "title": null,
    "updated": "2024-08-05T11:30:04.075000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2018/19xxx/CVE-2018-19047.json",
    "weaknesses": []
  }
}