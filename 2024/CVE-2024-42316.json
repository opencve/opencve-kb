{
  "cve": "CVE-2024-42316",
  "mitre": {
    "cpes": [],
    "created": "2024-08-17T09:09:24.694000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/mglru: fix div-by-zero in vmpressure_calc_level()\n\nevict_folios() uses a second pass to reclaim folios that have gone through\npage writeback and become clean before it finishes the first pass, since\nfolio_rotate_reclaimable() cannot handle those folios due to the\nisolation.\n\nThe second pass tries to avoid potential double counting by deducting\nscan_control->nr_scanned.  However, this can result in underflow of\nnr_scanned, under a condition where shrink_folio_list() does not increment\nnr_scanned, i.e., when folio_trylock() fails.\n\nThe underflow can cause the divisor, i.e., scale=scanned+reclaimed in\nvmpressure_calc_level(), to become zero, resulting in the following crash:\n\n  [exception RIP: vmpressure_work_fn+101]\n  process_one_work at ffffffffa3313f2b\n\nSince scan_control->nr_scanned has no established semantics, the potential\ndouble counting has minimal risks.  Therefore, fix the problem by not\ndeducting scan_control->nr_scanned in evict_folios().",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/42xxx/CVE-2024-42316.json",
    "references": [
      "https://git.kernel.org/stable/c/8b671fe1a879923ecfb72dda6caf01460dd885ef",
      "https://git.kernel.org/stable/c/8de7bf77f21068a5f602bb1e59adbc5ab533509d",
      "https://git.kernel.org/stable/c/a39e38be632f0e1c908d70d1c9cd071c03faf895",
      "https://git.kernel.org/stable/c/d6510f234c7d117790397f9bb150816b0a954a04"
    ],
    "title": "mm/mglru: fix div-by-zero in vmpressure_calc_level()",
    "updated": "2024-08-17T09:09:24.694000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-08-17T09:15:11.547000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/mglru: fix div-by-zero in vmpressure_calc_level()\n\nevict_folios() uses a second pass to reclaim folios that have gone through\npage writeback and become clean before it finishes the first pass, since\nfolio_rotate_reclaimable() cannot handle those folios due to the\nisolation.\n\nThe second pass tries to avoid potential double counting by deducting\nscan_control->nr_scanned.  However, this can result in underflow of\nnr_scanned, under a condition where shrink_folio_list() does not increment\nnr_scanned, i.e., when folio_trylock() fails.\n\nThe underflow can cause the divisor, i.e., scale=scanned+reclaimed in\nvmpressure_calc_level(), to become zero, resulting in the following crash:\n\n  [exception RIP: vmpressure_work_fn+101]\n  process_one_work at ffffffffa3313f2b\n\nSince scan_control->nr_scanned has no established semantics, the potential\ndouble counting has minimal risks.  Therefore, fix the problem by not\ndeducting scan_control->nr_scanned in evict_folios().",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-42316.json",
    "references": [
      "https://git.kernel.org/stable/c/8b671fe1a879923ecfb72dda6caf01460dd885ef",
      "https://git.kernel.org/stable/c/8de7bf77f21068a5f602bb1e59adbc5ab533509d",
      "https://git.kernel.org/stable/c/a39e38be632f0e1c908d70d1c9cd071c03faf895",
      "https://git.kernel.org/stable/c/d6510f234c7d117790397f9bb150816b0a954a04"
    ],
    "title": null,
    "updated": "2024-08-17T09:15:11.547000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-17T09:15:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/mglru: fix div-by-zero in vmpressure_calc_level()\n\nevict_folios() uses a second pass to reclaim folios that have gone through\npage writeback and become clean before it finishes the first pass, since\nfolio_rotate_reclaimable() cannot handle those folios due to the\nisolation.\n\nThe second pass tries to avoid potential double counting by deducting\nscan_control->nr_scanned.  However, this can result in underflow of\nnr_scanned, under a condition where shrink_folio_list() does not increment\nnr_scanned, i.e., when folio_trylock() fails.\n\nThe underflow can cause the divisor, i.e., scale=scanned+reclaimed in\nvmpressure_calc_level(), to become zero, resulting in the following crash:\n\n  [exception RIP: vmpressure_work_fn+101]\n  process_one_work at ffffffffa3313f2b\n\nSince scan_control->nr_scanned has no established semantics, the potential\ndouble counting has minimal risks.  Therefore, fix the problem by not\ndeducting scan_control->nr_scanned in evict_folios().",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "mm/mglru: fix div-by-zero in vmpressure_calc_level()",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/8b671fe1a879923ecfb72dda6caf01460dd885ef",
                "https://git.kernel.org/stable/c/8de7bf77f21068a5f602bb1e59adbc5ab533509d",
                "https://git.kernel.org/stable/c/a39e38be632f0e1c908d70d1c9cd071c03faf895",
                "https://git.kernel.org/stable/c/d6510f234c7d117790397f9bb150816b0a954a04"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "c5b39810-4954-4eda-a504-9c4bfe26ad5b"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-08-17T09:09:24.694000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/mglru: fix div-by-zero in vmpressure_calc_level()\n\nevict_folios() uses a second pass to reclaim folios that have gone through\npage writeback and become clean before it finishes the first pass, since\nfolio_rotate_reclaimable() cannot handle those folios due to the\nisolation.\n\nThe second pass tries to avoid potential double counting by deducting\nscan_control->nr_scanned.  However, this can result in underflow of\nnr_scanned, under a condition where shrink_folio_list() does not increment\nnr_scanned, i.e., when folio_trylock() fails.\n\nThe underflow can cause the divisor, i.e., scale=scanned+reclaimed in\nvmpressure_calc_level(), to become zero, resulting in the following crash:\n\n  [exception RIP: vmpressure_work_fn+101]\n  process_one_work at ffffffffa3313f2b\n\nSince scan_control->nr_scanned has no established semantics, the potential\ndouble counting has minimal risks.  Therefore, fix the problem by not\ndeducting scan_control->nr_scanned in evict_folios().",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/8b671fe1a879923ecfb72dda6caf01460dd885ef",
        "https://git.kernel.org/stable/c/8de7bf77f21068a5f602bb1e59adbc5ab533509d",
        "https://git.kernel.org/stable/c/a39e38be632f0e1c908d70d1c9cd071c03faf895",
        "https://git.kernel.org/stable/c/d6510f234c7d117790397f9bb150816b0a954a04"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "mm/mglru: fix div-by-zero in vmpressure_calc_level()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-17T09:15:11.547000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  }
}