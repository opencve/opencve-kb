{
  "cve": "CVE-2024-41032",
  "mitre": {
    "cpes": [],
    "created": "2024-07-29T14:31:47.600000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmalloc: check if a hash-index is in cpu_possible_mask\n\nThe problem is that there are systems where cpu_possible_mask has gaps\nbetween set CPUs, for example SPARC.  In this scenario addr_to_vb_xa()\nhash function can return an index which accesses to not-possible and not\nsetup CPU area using per_cpu() macro.  This results in an oops on SPARC.\n\nA per-cpu vmap_block_queue is also used as hash table, incorrectly\nassuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index\nto a next possible CPU.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/41xxx/CVE-2024-41032.json",
    "references": [
      "https://git.kernel.org/stable/c/28acd531c9a365dac01b32e6bc54aed8c1429bcb",
      "https://git.kernel.org/stable/c/47f9b6e49b422392fb0e348a65eb925103ba1882",
      "https://git.kernel.org/stable/c/a34acf30b19bc4ee3ba2f1082756ea2604c19138"
    ],
    "title": "mm: vmalloc: check if a hash-index is in cpu_possible_mask",
    "updated": "2024-08-02T04:39:56.073000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-07-29T15:15:11.850000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmalloc: check if a hash-index is in cpu_possible_mask\n\nThe problem is that there are systems where cpu_possible_mask has gaps\nbetween set CPUs, for example SPARC.  In this scenario addr_to_vb_xa()\nhash function can return an index which accesses to not-possible and not\nsetup CPU area using per_cpu() macro.  This results in an oops on SPARC.\n\nA per-cpu vmap_block_queue is also used as hash table, incorrectly\nassuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index\nto a next possible CPU.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-41032.json",
    "references": [
      "https://git.kernel.org/stable/c/28acd531c9a365dac01b32e6bc54aed8c1429bcb",
      "https://git.kernel.org/stable/c/47f9b6e49b422392fb0e348a65eb925103ba1882",
      "https://git.kernel.org/stable/c/a34acf30b19bc4ee3ba2f1082756ea2604c19138"
    ],
    "title": null,
    "updated": "2024-07-29T16:21:52.517000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-30T10:45:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "CWE-99"
              ],
              "removed": []
            },
            "type": "weaknesses"
          }
        ],
        "id": "d315cb3d-848a-4a8f-98c4-b14f7472331c"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-07-29T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmalloc: check if a hash-index is in cpu_possible_mask\n\nThe problem is that there are systems where cpu_possible_mask has gaps\nbetween set CPUs, for example SPARC.  In this scenario addr_to_vb_xa()\nhash function can return an index which accesses to not-possible and not\nsetup CPU area using per_cpu() macro.  This results in an oops on SPARC.\n\nA per-cpu vmap_block_queue is also used as hash table, incorrectly\nassuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index\nto a next possible CPU.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/28acd531c9a365dac01b32e6bc54aed8c1429bcb",
        "https://git.kernel.org/stable/c/47f9b6e49b422392fb0e348a65eb925103ba1882",
        "https://git.kernel.org/stable/c/a34acf30b19bc4ee3ba2f1082756ea2604c19138",
        "https://lore.kernel.org/linux-cve-announce/2024072922-CVE-2024-41032-6284@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-41032",
        "https://www.cve.org/CVERecord?id=CVE-2024-41032"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "mm: vmalloc: check if a hash-index is in cpu_possible_mask",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T04:39:56.073000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-99"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-07-29T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nmm: vmalloc: check if a hash-index is in cpu_possible_mask\nThe problem is that there are systems where cpu_possible_mask has gaps\nbetween set CPUs, for example SPARC.  In this scenario addr_to_vb_xa()\nhash function can return an index which accesses to not-possible and not\nsetup CPU area using per_cpu() macro.  This results in an oops on SPARC.\nA per-cpu vmap_block_queue is also used as hash table, incorrectly\nassuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index\nto a next possible CPU.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-41032.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024072922-CVE-2024-41032-6284@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-41032",
      "https://www.cve.org/CVERecord?id=CVE-2024-41032"
    ],
    "title": "kernel: mm: vmalloc: check if a hash-index is in cpu_possible_mask",
    "updated": "2024-07-29T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-99"
    ]
  }
}