{
  "cve": "CVE-2021-47013",
  "mitre": {
    "cpes": [],
    "created": "2024-02-28T08:13:30.905000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send\n\nIn emac_mac_tx_buf_send, it calls emac_tx_fill_tpd(..,skb,..).\nIf some error happens in emac_tx_fill_tpd(), the skb will be freed via\ndev_kfree_skb(skb) in error branch of emac_tx_fill_tpd().\nBut the freed skb is still used via skb->len by netdev_sent_queue(,skb->len).\n\nAs i observed that emac_tx_fill_tpd() haven't modified the value of skb->len,\nthus my patch assigns skb->len to 'len' before the possible free and\nuse 'len' instead of skb->len later.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/47xxx/CVE-2021-47013.json",
    "references": [
      "https://git.kernel.org/stable/c/16d8c44be52e3650917736d45f5904384a9da834",
      "https://git.kernel.org/stable/c/55fcdd1258faaecca74b91b88cc0921f9edd775d",
      "https://git.kernel.org/stable/c/6d72e7c767acbbdd44ebc7d89c6690b405b32b57",
      "https://git.kernel.org/stable/c/8c06f34785068b87e2b560534c77c163d6c6dca7",
      "https://git.kernel.org/stable/c/9dc373f74097edd0e35f3393d6248eda8d1ba99d",
      "https://git.kernel.org/stable/c/c7f75d11fe72913d2619f97b2334b083cd7bb955",
      "https://git.kernel.org/stable/c/dc1b438a35773d030be0ee80d9c635c3e558a322",
      "https://git.kernel.org/stable/c/e407495ba6788a67d1bd41714158c079e340879b"
    ],
    "title": "net:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send",
    "updated": "2024-08-04T05:24:39.713000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-02-28T09:15:38.800000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send\n\nIn emac_mac_tx_buf_send, it calls emac_tx_fill_tpd(..,skb,..).\nIf some error happens in emac_tx_fill_tpd(), the skb will be freed via\ndev_kfree_skb(skb) in error branch of emac_tx_fill_tpd().\nBut the freed skb is still used via skb->len by netdev_sent_queue(,skb->len).\n\nAs i observed that emac_tx_fill_tpd() haven't modified the value of skb->len,\nthus my patch assigns skb->len to 'len' before the possible free and\nuse 'len' instead of skb->len later.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-47013.json",
    "references": [
      "https://git.kernel.org/stable/c/16d8c44be52e3650917736d45f5904384a9da834",
      "https://git.kernel.org/stable/c/55fcdd1258faaecca74b91b88cc0921f9edd775d",
      "https://git.kernel.org/stable/c/6d72e7c767acbbdd44ebc7d89c6690b405b32b57",
      "https://git.kernel.org/stable/c/8c06f34785068b87e2b560534c77c163d6c6dca7",
      "https://git.kernel.org/stable/c/9dc373f74097edd0e35f3393d6248eda8d1ba99d",
      "https://git.kernel.org/stable/c/c7f75d11fe72913d2619f97b2334b083cd7bb955",
      "https://git.kernel.org/stable/c/dc1b438a35773d030be0ee80d9c635c3e558a322",
      "https://git.kernel.org/stable/c/e407495ba6788a67d1bd41714158c079e340879b"
    ],
    "title": null,
    "updated": "2024-02-28T14:06:45.783000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_linux:8::nfv",
        "cpe:/o:redhat:enterprise_linux:8",
        "cpe:/o:redhat:rhel_eus:8.6",
        "cpe:/o:redhat:rhel_eus:8.8",
        "cpe:/o:redhat:rhev_hypervisor:4.4::el8"
      ],
      "providers": [
        "redhat"
      ]
    },
    "created": {
      "data": "2024-02-28T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send\n\nIn emac_mac_tx_buf_send, it calls emac_tx_fill_tpd(..,skb,..).\nIf some error happens in emac_tx_fill_tpd(), the skb will be freed via\ndev_kfree_skb(skb) in error branch of emac_tx_fill_tpd().\nBut the freed skb is still used via skb->len by netdev_sent_queue(,skb->len).\n\nAs i observed that emac_tx_fill_tpd() haven't modified the value of skb->len,\nthus my patch assigns skb->len to 'len' before the possible free and\nuse 'len' instead of skb->len later.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.0,
          "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/16d8c44be52e3650917736d45f5904384a9da834",
        "https://git.kernel.org/stable/c/55fcdd1258faaecca74b91b88cc0921f9edd775d",
        "https://git.kernel.org/stable/c/6d72e7c767acbbdd44ebc7d89c6690b405b32b57",
        "https://git.kernel.org/stable/c/8c06f34785068b87e2b560534c77c163d6c6dca7",
        "https://git.kernel.org/stable/c/9dc373f74097edd0e35f3393d6248eda8d1ba99d",
        "https://git.kernel.org/stable/c/c7f75d11fe72913d2619f97b2334b083cd7bb955",
        "https://git.kernel.org/stable/c/dc1b438a35773d030be0ee80d9c635c3e558a322",
        "https://git.kernel.org/stable/c/e407495ba6788a67d1bd41714158c079e340879b",
        "https://lore.kernel.org/linux-cve-announce/2024022831-CVE-2021-47013-034a@gregkh/T/#u",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-47013",
        "https://www.cve.org/CVERecord?id=CVE-2021-47013"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "net:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T05:24:39.713000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$enterprise_linux",
        "redhat$PRODUCT$rhel_eus",
        "redhat$PRODUCT$rhev_hypervisor"
      ],
      "providers": [
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-416"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_linux:8::nfv",
      "cpe:/o:redhat:enterprise_linux:8",
      "cpe:/o:redhat:rhel_eus:8.6",
      "cpe:/o:redhat:rhel_eus:8.8",
      "cpe:/o:redhat:rhev_hypervisor:4.4::el8"
    ],
    "created": "2024-02-28T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send\nIn emac_mac_tx_buf_send, it calls emac_tx_fill_tpd(..,skb,..).\nIf some error happens in emac_tx_fill_tpd(), the skb will be freed via\ndev_kfree_skb(skb) in error branch of emac_tx_fill_tpd().\nBut the freed skb is still used via skb->len by netdev_sent_queue(,skb->len).\nAs i observed that emac_tx_fill_tpd() haven't modified the value of skb->len,\nthus my patch assigns skb->len to 'len' before the possible free and\nuse 'len' instead of skb->len later.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.0,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2021/CVE-2021-47013.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024022831-CVE-2021-47013-034a@gregkh/T/#u",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-47013",
      "https://www.cve.org/CVERecord?id=CVE-2021-47013"
    ],
    "title": "kernel: net:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send",
    "updated": "2024-02-28T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux",
      "redhat$PRODUCT$rhel_eus",
      "redhat$PRODUCT$rhev_hypervisor"
    ],
    "weaknesses": [
      "CWE-416"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-02-28T08:13:30.905000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send\n\nIn emac_mac_tx_buf_send, it calls emac_tx_fill_tpd(..,skb,..).\nIf some error happens in emac_tx_fill_tpd(), the skb will be freed via\ndev_kfree_skb(skb) in error branch of emac_tx_fill_tpd().\nBut the freed skb is still used via skb->len by netdev_sent_queue(,skb->len).\n\nAs i observed that emac_tx_fill_tpd() haven't modified the value of skb->len,\nthus my patch assigns skb->len to 'len' before the possible free and\nuse 'len' instead of skb->len later.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/16d8c44be52e3650917736d45f5904384a9da834",
      "https://git.kernel.org/stable/c/55fcdd1258faaecca74b91b88cc0921f9edd775d",
      "https://git.kernel.org/stable/c/6d72e7c767acbbdd44ebc7d89c6690b405b32b57",
      "https://git.kernel.org/stable/c/8c06f34785068b87e2b560534c77c163d6c6dca7",
      "https://git.kernel.org/stable/c/9dc373f74097edd0e35f3393d6248eda8d1ba99d",
      "https://git.kernel.org/stable/c/c7f75d11fe72913d2619f97b2334b083cd7bb955",
      "https://git.kernel.org/stable/c/dc1b438a35773d030be0ee80d9c635c3e558a322",
      "https://git.kernel.org/stable/c/e407495ba6788a67d1bd41714158c079e340879b"
    ],
    "title": "net:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send",
    "updated": "2024-08-04T05:24:39.713000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2021/47xxx/CVE-2021-47013.json",
    "weaknesses": []
  }
}