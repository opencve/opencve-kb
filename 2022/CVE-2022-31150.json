{
  "cve": "CVE-2022-31150",
  "mitre": {
    "cpes": [],
    "created": "2022-07-19T20:40:10+00:00",
    "description": "undici is an HTTP/1.1 client, written from scratch for Node.js. It is possible to inject CRLF sequences into request headers in undici in versions less than 5.7.1. A fix was released in version 5.8.0. Sanitizing all HTTP headers from untrusted sources to eliminate `\\r\\n` is a workaround for this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/31xxx/CVE-2022-31150.json",
    "references": [
      "https://github.com/nodejs/undici/releases/tag/v5.8.0",
      "https://github.com/nodejs/undici/security/advisories/GHSA-3cvr-822r-rqcc",
      "https://hackerone.com/reports/409943",
      "https://security.netapp.com/advisory/ntap-20220915-0002/"
    ],
    "title": "CRLF injection in request headers",
    "updated": "2024-08-03T07:11:39.394000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-93"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:nodejs:undici:*:*:*:*:*:node.js:*:*"
    ],
    "created": "2022-07-19T21:15:15.160000+00:00",
    "description": "undici is an HTTP/1.1 client, written from scratch for Node.js. It is possible to inject CRLF sequences into request headers in undici in versions less than 5.7.1. A fix was released in version 5.8.0. Sanitizing all HTTP headers from untrusted sources to eliminate `\\r\\n` is a workaround for this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-31150.json",
    "references": [
      "https://github.com/nodejs/undici/releases/tag/v5.8.0",
      "https://github.com/nodejs/undici/security/advisories/GHSA-3cvr-822r-rqcc",
      "https://hackerone.com/reports/409943",
      "https://security.netapp.com/advisory/ntap-20220915-0002/"
    ],
    "title": null,
    "updated": "2022-10-28T18:31:31.273000+00:00",
    "vendors": [
      "nodejs",
      "nodejs$PRODUCT$undici"
    ],
    "weaknesses": [
      "CWE-93",
      "NVD-CWE-Other"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-19T22:15:00+00:00",
        "data": [
          {
            "details": {
              "added": [],
              "removed": [
                "cpe:/a:redhat:acm:2.4::el8"
              ]
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [],
              "removed": [
                "redhat",
                "redhat$PRODUCT$acm"
              ]
            },
            "type": "vendors"
          }
        ],
        "id": "e225efca-202f-4cbd-b992-81263e6bb09d"
      }
    ],
    "cpes": {
      "data": [
        "cpe:2.3:a:nodejs:undici:*:*:*:*:*:node.js:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2022-07-19T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "undici is an HTTP/1.1 client, written from scratch for Node.js. It is possible to inject CRLF sequences into request headers in undici in versions less than 5.7.1. A fix was released in version 5.8.0. Sanitizing all HTTP headers from untrusted sources to eliminate `\\r\\n` is a workaround for this issue.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.3,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/nodejs/undici/releases/tag/v5.8.0",
        "https://github.com/nodejs/undici/security/advisories/GHSA-3cvr-822r-rqcc",
        "https://hackerone.com/reports/409943",
        "https://nvd.nist.gov/vuln/detail/CVE-2022-31150",
        "https://security.netapp.com/advisory/ntap-20220915-0002/",
        "https://www.cve.org/CVERecord?id=CVE-2022-31150"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "CRLF injection in request headers",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T07:11:39.394000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "nodejs",
        "nodejs$PRODUCT$undici"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-93",
        "NVD-CWE-Other"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2022-07-19T00:00:00+00:00",
    "description": "undici is an HTTP/1.1 client, written from scratch for Node.js. It is possible to inject CRLF sequences into request headers in undici in versions less than 5.7.1. A fix was released in version 5.8.0. Sanitizing all HTTP headers from untrusted sources to eliminate `\\r\\n` is a workaround for this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2022/CVE-2022-31150.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2022-31150",
      "https://www.cve.org/CVERecord?id=CVE-2022-31150"
    ],
    "title": "nodejs16: CRLF injection in node-undici",
    "updated": "2022-07-19T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-93"
    ]
  }
}