{
  "cve": "CVE-2019-3701",
  "mitre": {
    "cpes": [],
    "created": "2019-01-03T16:00:00+00:00",
    "description": "An issue was discovered in can_can_gw_rcv in net/can/gw.c in the Linux kernel through 4.19.13. The CAN frame modification rules allow bitwise logical operations that can be also applied to the can_dlc field. The privileged user \"root\" with CAP_NET_ADMIN can create a CAN frame modification rule that makes the data length code a higher value than the available CAN frame data size. In combination with a configured checksum calculation where the result is stored relatively to the end of the data (e.g. cgw_csum_xor_rel) the tail of the skb (e.g. frag_list pointer in skb_shared_info) can be rewritten which finally can cause a system crash. Because of a missing check, the CAN drivers may write arbitrary content beyond the data registers in the CAN controller's I/O memory when processing can-gw manipulated outgoing frames.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2019/3xxx/CVE-2019-3701.json",
    "references": [
      "http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00035.html",
      "http://www.securityfocus.com/bid/106443",
      "https://bugzilla.suse.com/show_bug.cgi?id=1120386",
      "https://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git/commit/?id=0aaa81377c5a01f686bcdb8c7a6929a7bf330c68",
      "https://lists.debian.org/debian-lts-announce/2019/03/msg00034.html",
      "https://lists.debian.org/debian-lts-announce/2019/04/msg00004.html",
      "https://lists.debian.org/debian-lts-announce/2019/05/msg00002.html",
      "https://marc.info/?l=linux-netdev&m=154651842302479&w=2",
      "https://marc.info/?l=linux-netdev&m=154661373531512&w=2",
      "https://support.f5.com/csp/article/K17957133",
      "https://usn.ubuntu.com/3932-1/",
      "https://usn.ubuntu.com/3932-2/",
      "https://usn.ubuntu.com/4115-1/",
      "https://usn.ubuntu.com/4118-1/"
    ],
    "title": null,
    "updated": "2024-08-04T19:19:16.818000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*",
      "cpe:2.3:o:canonical:ubuntu_linux:16.04:*:*:*:lts:*:*:*",
      "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*",
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2019-01-03T16:29:00.553000+00:00",
    "description": "An issue was discovered in can_can_gw_rcv in net/can/gw.c in the Linux kernel through 4.19.13. The CAN frame modification rules allow bitwise logical operations that can be also applied to the can_dlc field. The privileged user \"root\" with CAP_NET_ADMIN can create a CAN frame modification rule that makes the data length code a higher value than the available CAN frame data size. In combination with a configured checksum calculation where the result is stored relatively to the end of the data (e.g. cgw_csum_xor_rel) the tail of the skb (e.g. frag_list pointer in skb_shared_info) can be rewritten which finally can cause a system crash. Because of a missing check, the CAN drivers may write arbitrary content beyond the data registers in the CAN controller's I/O memory when processing can-gw manipulated outgoing frames.",
    "metrics": {
      "cvssV2_0": {
        "score": 4.9,
        "vector": "AV:L/AC:L/Au:N/C:N/I:N/A:C"
      },
      "cvssV3_0": {
        "score": 4.4,
        "vector": "CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2019/CVE-2019-3701.json",
    "references": [
      "http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00035.html",
      "http://www.securityfocus.com/bid/106443",
      "https://bugzilla.suse.com/show_bug.cgi?id=1120386",
      "https://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git/commit/?id=0aaa81377c5a01f686bcdb8c7a6929a7bf330c68",
      "https://lists.debian.org/debian-lts-announce/2019/03/msg00034.html",
      "https://lists.debian.org/debian-lts-announce/2019/04/msg00004.html",
      "https://lists.debian.org/debian-lts-announce/2019/05/msg00002.html",
      "https://marc.info/?l=linux-netdev&m=154651842302479&w=2",
      "https://marc.info/?l=linux-netdev&m=154661373531512&w=2",
      "https://support.f5.com/csp/article/K17957133",
      "https://usn.ubuntu.com/3932-1/",
      "https://usn.ubuntu.com/3932-2/",
      "https://usn.ubuntu.com/4115-1/",
      "https://usn.ubuntu.com/4118-1/"
    ],
    "title": null,
    "updated": "2019-09-03T00:15:18.033000+00:00",
    "vendors": [
      "canonical",
      "canonical$PRODUCT$ubuntu_linux",
      "debian",
      "debian$PRODUCT$debian_linux",
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-787"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*",
        "cpe:2.3:o:canonical:ubuntu_linux:16.04:*:*:*:lts:*:*:*",
        "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*",
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2018-12-28T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "An issue was discovered in can_can_gw_rcv in net/can/gw.c in the Linux kernel through 4.19.13. The CAN frame modification rules allow bitwise logical operations that can be also applied to the can_dlc field. The privileged user \"root\" with CAP_NET_ADMIN can create a CAN frame modification rule that makes the data length code a higher value than the available CAN frame data size. In combination with a configured checksum calculation where the result is stored relatively to the end of the data (e.g. cgw_csum_xor_rel) the tail of the skb (e.g. frag_list pointer in skb_shared_info) can be rewritten which finally can cause a system crash. Because of a missing check, the CAN drivers may write arbitrary content beyond the data registers in the CAN controller's I/O memory when processing can-gw manipulated outgoing frames.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.9,
          "vector": "AV:L/AC:L/Au:N/C:N/I:N/A:C"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 4.4,
          "vector": "CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00035.html",
        "http://www.securityfocus.com/bid/106443",
        "https://bugzilla.suse.com/show_bug.cgi?id=1120386",
        "https://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git/commit/?id=0aaa81377c5a01f686bcdb8c7a6929a7bf330c68",
        "https://lists.debian.org/debian-lts-announce/2019/03/msg00034.html",
        "https://lists.debian.org/debian-lts-announce/2019/04/msg00004.html",
        "https://lists.debian.org/debian-lts-announce/2019/05/msg00002.html",
        "https://marc.info/?l=linux-netdev&m=154651842302479&w=2",
        "https://marc.info/?l=linux-netdev&m=154661373531512&w=2",
        "https://nvd.nist.gov/vuln/detail/CVE-2019-3701",
        "https://support.f5.com/csp/article/K17957133",
        "https://usn.ubuntu.com/3932-1/",
        "https://usn.ubuntu.com/3932-2/",
        "https://usn.ubuntu.com/4115-1/",
        "https://usn.ubuntu.com/4118-1/",
        "https://www.cve.org/CVERecord?id=CVE-2019-3701"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "kernel: Missing check in net/can/gw.c:can_can_gw_rcv() allows for crash by users with CAP_NET_ADMIN",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-04T19:19:16.818000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "canonical",
        "canonical$PRODUCT$ubuntu_linux",
        "debian",
        "debian$PRODUCT$debian_linux",
        "linux",
        "linux$PRODUCT$linux_kernel"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-787"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2018-12-28T00:00:00+00:00",
    "description": "An issue was discovered in can_can_gw_rcv in net/can/gw.c in the Linux kernel through 4.19.13. The CAN frame modification rules allow bitwise logical operations that can be also applied to the can_dlc field. The privileged user \"root\" with CAP_NET_ADMIN can create a CAN frame modification rule that makes the data length code a higher value than the available CAN frame data size. In combination with a configured checksum calculation where the result is stored relatively to the end of the data (e.g. cgw_csum_xor_rel) the tail of the skb (e.g. frag_list pointer in skb_shared_info) can be rewritten which finally can cause a system crash. Because of a missing check, the CAN drivers may write arbitrary content beyond the data registers in the CAN controller's I/O memory when processing can-gw manipulated outgoing frames.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 4.4,
        "vector": "CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV3_1": {},
      "threat_severity": null
    },
    "redhat_repo_path": "2019/CVE-2019-3701.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2019-3701",
      "https://www.cve.org/CVERecord?id=CVE-2019-3701"
    ],
    "title": "kernel: Missing check in net/can/gw.c:can_can_gw_rcv() allows for crash by users with CAP_NET_ADMIN",
    "updated": "2018-12-28T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-787"
    ]
  }
}