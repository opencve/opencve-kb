{
  "cve": "CVE-2024-27414",
  "mitre": {
    "cpes": [],
    "created": "2024-05-17T11:50:57.207000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back\n\nIn the commit d73ef2d69c0d (\"rtnetlink: let rtnl_bridge_setlink checks\nIFLA_BRIDGE_MODE length\"), an adjustment was made to the old loop logic\nin the function `rtnl_bridge_setlink` to enable the loop to also check\nthe length of the IFLA_BRIDGE_MODE attribute. However, this adjustment\nremoved the `break` statement and led to an error logic of the flags\nwriting back at the end of this function.\n\nif (have_flags)\n    memcpy(nla_data(attr), &flags, sizeof(flags));\n    // attr should point to IFLA_BRIDGE_FLAGS NLA !!!\n\nBefore the mentioned commit, the `attr` is granted to be IFLA_BRIDGE_FLAGS.\nHowever, this is not necessarily true fow now as the updated loop will let\nthe attr point to the last NLA, even an invalid NLA which could cause\noverflow writes.\n\nThis patch introduces a new variable `br_flag` to save the NLA pointer\nthat points to IFLA_BRIDGE_FLAGS and uses it to resolve the mentioned\nerror logic.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/27xxx/CVE-2024-27414.json",
    "references": [
      "https://git.kernel.org/stable/c/167d8642daa6a44b51de17f8ff0f584e1e762db7",
      "https://git.kernel.org/stable/c/743ad091fb46e622f1b690385bb15e3cd3daf874",
      "https://git.kernel.org/stable/c/831bc2728fb48a8957a824cba8c264b30dca1425",
      "https://git.kernel.org/stable/c/882a51a10ecf24ce135d573afa0872aef02c5125",
      "https://git.kernel.org/stable/c/a1227b27fcccc99dc44f912b479e01a17e2d7d31",
      "https://git.kernel.org/stable/c/b9fbc44159dfc3e9a7073032752d9e03f5194a6f",
      "https://git.kernel.org/stable/c/f2261eb994aa5757c1da046b78e3229a3ece0ad9",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
    ],
    "title": "rtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back",
    "updated": "2024-08-02T00:34:52.359000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-17T12:15:12.673000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back\n\nIn the commit d73ef2d69c0d (\"rtnetlink: let rtnl_bridge_setlink checks\nIFLA_BRIDGE_MODE length\"), an adjustment was made to the old loop logic\nin the function `rtnl_bridge_setlink` to enable the loop to also check\nthe length of the IFLA_BRIDGE_MODE attribute. However, this adjustment\nremoved the `break` statement and led to an error logic of the flags\nwriting back at the end of this function.\n\nif (have_flags)\n    memcpy(nla_data(attr), &flags, sizeof(flags));\n    // attr should point to IFLA_BRIDGE_FLAGS NLA !!!\n\nBefore the mentioned commit, the `attr` is granted to be IFLA_BRIDGE_FLAGS.\nHowever, this is not necessarily true fow now as the updated loop will let\nthe attr point to the last NLA, even an invalid NLA which could cause\noverflow writes.\n\nThis patch introduces a new variable `br_flag` to save the NLA pointer\nthat points to IFLA_BRIDGE_FLAGS and uses it to resolve the mentioned\nerror logic.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-27414.json",
    "references": [
      "https://git.kernel.org/stable/c/167d8642daa6a44b51de17f8ff0f584e1e762db7",
      "https://git.kernel.org/stable/c/743ad091fb46e622f1b690385bb15e3cd3daf874",
      "https://git.kernel.org/stable/c/831bc2728fb48a8957a824cba8c264b30dca1425",
      "https://git.kernel.org/stable/c/882a51a10ecf24ce135d573afa0872aef02c5125",
      "https://git.kernel.org/stable/c/a1227b27fcccc99dc44f912b479e01a17e2d7d31",
      "https://git.kernel.org/stable/c/b9fbc44159dfc3e9a7073032752d9e03f5194a6f",
      "https://git.kernel.org/stable/c/f2261eb994aa5757c1da046b78e3229a3ece0ad9",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
    ],
    "title": null,
    "updated": "2024-06-25T22:15:29.803000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-17T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back\n\nIn the commit d73ef2d69c0d (\"rtnetlink: let rtnl_bridge_setlink checks\nIFLA_BRIDGE_MODE length\"), an adjustment was made to the old loop logic\nin the function `rtnl_bridge_setlink` to enable the loop to also check\nthe length of the IFLA_BRIDGE_MODE attribute. However, this adjustment\nremoved the `break` statement and led to an error logic of the flags\nwriting back at the end of this function.\n\nif (have_flags)\n    memcpy(nla_data(attr), &flags, sizeof(flags));\n    // attr should point to IFLA_BRIDGE_FLAGS NLA !!!\n\nBefore the mentioned commit, the `attr` is granted to be IFLA_BRIDGE_FLAGS.\nHowever, this is not necessarily true fow now as the updated loop will let\nthe attr point to the last NLA, even an invalid NLA which could cause\noverflow writes.\n\nThis patch introduces a new variable `br_flag` to save the NLA pointer\nthat points to IFLA_BRIDGE_FLAGS and uses it to resolve the mentioned\nerror logic.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/167d8642daa6a44b51de17f8ff0f584e1e762db7",
        "https://git.kernel.org/stable/c/743ad091fb46e622f1b690385bb15e3cd3daf874",
        "https://git.kernel.org/stable/c/831bc2728fb48a8957a824cba8c264b30dca1425",
        "https://git.kernel.org/stable/c/882a51a10ecf24ce135d573afa0872aef02c5125",
        "https://git.kernel.org/stable/c/a1227b27fcccc99dc44f912b479e01a17e2d7d31",
        "https://git.kernel.org/stable/c/b9fbc44159dfc3e9a7073032752d9e03f5194a6f",
        "https://git.kernel.org/stable/c/f2261eb994aa5757c1da046b78e3229a3ece0ad9",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
        "https://lore.kernel.org/linux-cve-announce/2024051702-CVE-2024-27414-5c5d@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-27414",
        "https://www.cve.org/CVERecord?id=CVE-2024-27414"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "rtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T00:34:52.359000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-17T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nrtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back\nIn the commit d73ef2d69c0d (\"rtnetlink: let rtnl_bridge_setlink checks\nIFLA_BRIDGE_MODE length\"), an adjustment was made to the old loop logic\nin the function `rtnl_bridge_setlink` to enable the loop to also check\nthe length of the IFLA_BRIDGE_MODE attribute. However, this adjustment\nremoved the `break` statement and led to an error logic of the flags\nwriting back at the end of this function.\nif (have_flags)\nmemcpy(nla_data(attr), &flags, sizeof(flags));\n// attr should point to IFLA_BRIDGE_FLAGS NLA !!!\nBefore the mentioned commit, the `attr` is granted to be IFLA_BRIDGE_FLAGS.\nHowever, this is not necessarily true fow now as the updated loop will let\nthe attr point to the last NLA, even an invalid NLA which could cause\noverflow writes.\nThis patch introduces a new variable `br_flag` to save the NLA pointer\nthat points to IFLA_BRIDGE_FLAGS and uses it to resolve the mentioned\nerror logic.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-27414.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024051702-CVE-2024-27414-5c5d@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-27414",
      "https://www.cve.org/CVERecord?id=CVE-2024-27414"
    ],
    "title": "kernel: rtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back",
    "updated": "2024-05-17T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-17T11:50:57.207000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back\n\nIn the commit d73ef2d69c0d (\"rtnetlink: let rtnl_bridge_setlink checks\nIFLA_BRIDGE_MODE length\"), an adjustment was made to the old loop logic\nin the function `rtnl_bridge_setlink` to enable the loop to also check\nthe length of the IFLA_BRIDGE_MODE attribute. However, this adjustment\nremoved the `break` statement and led to an error logic of the flags\nwriting back at the end of this function.\n\nif (have_flags)\n    memcpy(nla_data(attr), &flags, sizeof(flags));\n    // attr should point to IFLA_BRIDGE_FLAGS NLA !!!\n\nBefore the mentioned commit, the `attr` is granted to be IFLA_BRIDGE_FLAGS.\nHowever, this is not necessarily true fow now as the updated loop will let\nthe attr point to the last NLA, even an invalid NLA which could cause\noverflow writes.\n\nThis patch introduces a new variable `br_flag` to save the NLA pointer\nthat points to IFLA_BRIDGE_FLAGS and uses it to resolve the mentioned\nerror logic.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/167d8642daa6a44b51de17f8ff0f584e1e762db7",
      "https://git.kernel.org/stable/c/743ad091fb46e622f1b690385bb15e3cd3daf874",
      "https://git.kernel.org/stable/c/831bc2728fb48a8957a824cba8c264b30dca1425",
      "https://git.kernel.org/stable/c/882a51a10ecf24ce135d573afa0872aef02c5125",
      "https://git.kernel.org/stable/c/a1227b27fcccc99dc44f912b479e01a17e2d7d31",
      "https://git.kernel.org/stable/c/b9fbc44159dfc3e9a7073032752d9e03f5194a6f",
      "https://git.kernel.org/stable/c/f2261eb994aa5757c1da046b78e3229a3ece0ad9",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
    ],
    "title": "rtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back",
    "updated": "2024-08-02T00:34:52.359000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/27xxx/CVE-2024-27414.json",
    "weaknesses": []
  }
}