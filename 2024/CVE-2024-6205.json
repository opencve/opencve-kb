{
  "cve": "CVE-2024-6205",
  "mitre": {
    "cpes": [],
    "created": "2024-07-19T06:00:06.257000+00:00",
    "description": "The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/6xxx/CVE-2024-6205.json",
    "references": [
      "https://wpscan.com/vulnerability/7e2c5032-2917-418c-aee3-092bdb78a087/"
    ],
    "title": "PayPlus Payment Gateway < 6.6.9 - Unauthenticated SQLi",
    "updated": "2024-08-01T21:33:05.100000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:payplus:payplus_payment_gateway:*:*:*:*:*:wordpress:*:*"
    ],
    "created": "2024-07-19T06:15:03.817000+00:00",
    "description": "The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 9.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-6205.json",
    "references": [
      "https://wpscan.com/vulnerability/7e2c5032-2917-418c-aee3-092bdb78a087/"
    ],
    "title": null,
    "updated": "2024-08-01T14:00:15.120000+00:00",
    "vendors": [
      "payplus",
      "payplus$PRODUCT$payplus_payment_gateway"
    ],
    "weaknesses": [
      "CWE-89"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:payplus:payplus_payment_gateway:*:*:*:*:*:wordpress:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2024-07-19T06:00:06.257000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 9.8,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://wpscan.com/vulnerability/7e2c5032-2917-418c-aee3-092bdb78a087/"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "PayPlus Payment Gateway < 6.6.9 - Unauthenticated SQLi",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-01T21:33:05.100000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "payplus",
        "payplus$PRODUCT$payplus_payment_gateway"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-89"
      ],
      "providers": [
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-07-19T06:00:06.257000+00:00",
    "description": "The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://wpscan.com/vulnerability/7e2c5032-2917-418c-aee3-092bdb78a087/"
    ],
    "title": "PayPlus Payment Gateway < 6.6.9 - Unauthenticated SQLi",
    "updated": "2024-08-01T21:33:05.100000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/6xxx/CVE-2024-6205.json",
    "weaknesses": []
  }
}