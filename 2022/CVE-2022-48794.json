{
  "cve": "CVE-2022-48794",
  "mitre": {
    "cpes": [],
    "created": "2024-07-16T11:43:49.434000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: at86rf230: Stop leaking skb's\n\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. In the Tx case we then leak\nthe skb structure.\n\nFree the skb structure upon error before returning when appropriate.\n\nAs the 'is_tx = 0' cannot be moved in the complete handler because of a\npossible race between the delay in switching to STATE_RX_AACK_ON and a\nnew interrupt, we introduce an intermediate 'was_tx' boolean just for\nthis purpose.\n\nThere is no Fixes tag applying here, many changes have been made on this\narea and the issue kind of always existed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/48xxx/CVE-2022-48794.json",
    "references": [
      "https://git.kernel.org/stable/c/0fd484644c68897c490a3307bfcc8bf767df5a43",
      "https://git.kernel.org/stable/c/1c72f04d52b7200bb83426a9bed378668271ea4a",
      "https://git.kernel.org/stable/c/23b2a25382400168427ea278f3d8bf4ecfd333bf",
      "https://git.kernel.org/stable/c/455ef08d6e5473526fa6763f75a93f7198206966",
      "https://git.kernel.org/stable/c/6312f6a53fd3ea38125dcaca5e3c9aa7d8a60cf7",
      "https://git.kernel.org/stable/c/af649e5c95f56df64363bc46f6746b87819f9c0d",
      "https://git.kernel.org/stable/c/d2a1eaf51b7d4412319adb6acef114ba472d1692",
      "https://git.kernel.org/stable/c/e5ce576d45bf72fd0e3dc37eff897bfcc488f6a9"
    ],
    "title": "net: ieee802154: at86rf230: Stop leaking skb's",
    "updated": "2024-09-11T17:34:15.221000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-07-16T12:15:04.147000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: at86rf230: Stop leaking skb's\n\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. In the Tx case we then leak\nthe skb structure.\n\nFree the skb structure upon error before returning when appropriate.\n\nAs the 'is_tx = 0' cannot be moved in the complete handler because of a\npossible race between the delay in switching to STATE_RX_AACK_ON and a\nnew interrupt, we introduce an intermediate 'was_tx' boolean just for\nthis purpose.\n\nThere is no Fixes tag applying here, many changes have been made on this\narea and the issue kind of always existed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-48794.json",
    "references": [
      "https://git.kernel.org/stable/c/0fd484644c68897c490a3307bfcc8bf767df5a43",
      "https://git.kernel.org/stable/c/1c72f04d52b7200bb83426a9bed378668271ea4a",
      "https://git.kernel.org/stable/c/23b2a25382400168427ea278f3d8bf4ecfd333bf",
      "https://git.kernel.org/stable/c/455ef08d6e5473526fa6763f75a93f7198206966",
      "https://git.kernel.org/stable/c/6312f6a53fd3ea38125dcaca5e3c9aa7d8a60cf7",
      "https://git.kernel.org/stable/c/af649e5c95f56df64363bc46f6746b87819f9c0d",
      "https://git.kernel.org/stable/c/d2a1eaf51b7d4412319adb6acef114ba472d1692",
      "https://git.kernel.org/stable/c/e5ce576d45bf72fd0e3dc37eff897bfcc488f6a9"
    ],
    "title": null,
    "updated": "2024-07-16T13:43:58.773000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-26T10:45:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "CWE-371",
                "CWE-401"
              ],
              "removed": []
            },
            "type": "weaknesses"
          },
          {
            "details": {
              "added": {},
              "removed": {},
              "updated": {
                "cvssV3_1": {
                  "new": {
                    "score": 6.1,
                    "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H"
                  },
                  "old": {
                    "score": 5.5,
                    "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "5af846b1-870b-472d-8e95-6fd4331e2759"
      },
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "4901180a-406d-4c87-8809-a911de120148"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-07-16T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: at86rf230: Stop leaking skb's\n\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. In the Tx case we then leak\nthe skb structure.\n\nFree the skb structure upon error before returning when appropriate.\n\nAs the 'is_tx = 0' cannot be moved in the complete handler because of a\npossible race between the delay in switching to STATE_RX_AACK_ON and a\nnew interrupt, we introduce an intermediate 'was_tx' boolean just for\nthis purpose.\n\nThere is no Fixes tag applying here, many changes have been made on this\narea and the issue kind of always existed.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.1,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/0fd484644c68897c490a3307bfcc8bf767df5a43",
        "https://git.kernel.org/stable/c/1c72f04d52b7200bb83426a9bed378668271ea4a",
        "https://git.kernel.org/stable/c/23b2a25382400168427ea278f3d8bf4ecfd333bf",
        "https://git.kernel.org/stable/c/455ef08d6e5473526fa6763f75a93f7198206966",
        "https://git.kernel.org/stable/c/6312f6a53fd3ea38125dcaca5e3c9aa7d8a60cf7",
        "https://git.kernel.org/stable/c/af649e5c95f56df64363bc46f6746b87819f9c0d",
        "https://git.kernel.org/stable/c/d2a1eaf51b7d4412319adb6acef114ba472d1692",
        "https://git.kernel.org/stable/c/e5ce576d45bf72fd0e3dc37eff897bfcc488f6a9",
        "https://lore.kernel.org/linux-cve-announce/2024071642-CVE-2022-48794-15e8@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2022-48794",
        "https://www.cve.org/CVERecord?id=CVE-2022-48794"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "net: ieee802154: at86rf230: Stop leaking skb's",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-11T17:34:15.221000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-371",
        "CWE-401"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-07-16T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: ieee802154: at86rf230: Stop leaking skb's\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. In the Tx case we then leak\nthe skb structure.\nFree the skb structure upon error before returning when appropriate.\nAs the 'is_tx = 0' cannot be moved in the complete handler because of a\npossible race between the delay in switching to STATE_RX_AACK_ON and a\nnew interrupt, we introduce an intermediate 'was_tx' boolean just for\nthis purpose.\nThere is no Fixes tag applying here, many changes have been made on this\narea and the issue kind of always existed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.1,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2022/CVE-2022-48794.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024071642-CVE-2022-48794-15e8@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2022-48794",
      "https://www.cve.org/CVERecord?id=CVE-2022-48794"
    ],
    "title": "kernel: net: ieee802154: at86rf230: Stop leaking skb&#39;s",
    "updated": "2024-07-16T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-371",
      "CWE-401"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-07-16T11:43:49.434000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: at86rf230: Stop leaking skb's\n\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. In the Tx case we then leak\nthe skb structure.\n\nFree the skb structure upon error before returning when appropriate.\n\nAs the 'is_tx = 0' cannot be moved in the complete handler because of a\npossible race between the delay in switching to STATE_RX_AACK_ON and a\nnew interrupt, we introduce an intermediate 'was_tx' boolean just for\nthis purpose.\n\nThere is no Fixes tag applying here, many changes have been made on this\narea and the issue kind of always existed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "net: ieee802154: at86rf230: Stop leaking skb's",
    "updated": "2024-09-11T12:42:21.614000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2022/48xxx/CVE-2022-48794.json",
    "weaknesses": []
  }
}