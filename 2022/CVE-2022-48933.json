{
  "cve": "CVE-2022-48933",
  "mitre": {
    "cpes": [],
    "created": "2024-08-22T03:31:27.165000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memory leak during stateful obj update\n\nstateful objects can be updated from the control plane.\nThe transaction logic allocates a temporary object for this purpose.\n\nThe ->init function was called for this object, so plain kfree() leaks\nresources. We must call ->destroy function of the object.\n\nnft_obj_destroy does this, but it also decrements the module refcount,\nbut the update path doesn't increment it.\n\nTo avoid special-casing the update object release, do module_get for\nthe update case too and release it via nft_obj_destroy().",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/48xxx/CVE-2022-48933.json",
    "references": [
      "https://git.kernel.org/stable/c/34bb90e407e3288f610558beaae54ecaa32b11c4",
      "https://git.kernel.org/stable/c/53026346a94c43f35c32b18804041bc483271d87",
      "https://git.kernel.org/stable/c/7e9880e81d3fd6a43c202f205717485290432826",
      "https://git.kernel.org/stable/c/dad3bdeef45f81a6e90204bcc85360bb76eccec7",
      "https://git.kernel.org/stable/c/e96e204ee6fa46702f6c94c3c69a09e69e0eac52"
    ],
    "title": "netfilter: nf_tables: fix memory leak during stateful obj update",
    "updated": "2024-08-22T03:31:27.165000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-08-22T04:15:16.143000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memory leak during stateful obj update\n\nstateful objects can be updated from the control plane.\nThe transaction logic allocates a temporary object for this purpose.\n\nThe ->init function was called for this object, so plain kfree() leaks\nresources. We must call ->destroy function of the object.\n\nnft_obj_destroy does this, but it also decrements the module refcount,\nbut the update path doesn't increment it.\n\nTo avoid special-casing the update object release, do module_get for\nthe update case too and release it via nft_obj_destroy().",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-48933.json",
    "references": [
      "https://git.kernel.org/stable/c/34bb90e407e3288f610558beaae54ecaa32b11c4",
      "https://git.kernel.org/stable/c/53026346a94c43f35c32b18804041bc483271d87",
      "https://git.kernel.org/stable/c/7e9880e81d3fd6a43c202f205717485290432826",
      "https://git.kernel.org/stable/c/dad3bdeef45f81a6e90204bcc85360bb76eccec7",
      "https://git.kernel.org/stable/c/e96e204ee6fa46702f6c94c3c69a09e69e0eac52"
    ],
    "title": null,
    "updated": "2024-08-23T01:50:09.313000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-401"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-22T03:45:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memory leak during stateful obj update\n\nstateful objects can be updated from the control plane.\nThe transaction logic allocates a temporary object for this purpose.\n\nThe ->init function was called for this object, so plain kfree() leaks\nresources. We must call ->destroy function of the object.\n\nnft_obj_destroy does this, but it also decrements the module refcount,\nbut the update path doesn't increment it.\n\nTo avoid special-casing the update object release, do module_get for\nthe update case too and release it via nft_obj_destroy().",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "netfilter: nf_tables: fix memory leak during stateful obj update",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/34bb90e407e3288f610558beaae54ecaa32b11c4",
                "https://git.kernel.org/stable/c/53026346a94c43f35c32b18804041bc483271d87",
                "https://git.kernel.org/stable/c/7e9880e81d3fd6a43c202f205717485290432826",
                "https://git.kernel.org/stable/c/dad3bdeef45f81a6e90204bcc85360bb76eccec7",
                "https://git.kernel.org/stable/c/e96e204ee6fa46702f6c94c3c69a09e69e0eac52"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "c07d541f-6764-46dd-9190-28a47f85b653"
      },
      {
        "created": "2024-08-22T17:00:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024082223-CVE-2022-48933-6ebb@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2022-48933",
                "https://www.cve.org/CVERecord?id=CVE-2022-48933"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Moderate",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "e42a90b2-0aa5-4d7c-8399-44660d9097d1"
      },
      {
        "created": "2024-08-23T02:15:00+00:00",
        "data": [
          {
            "details": [
              "linux",
              "linux$PRODUCT$linux_kernel"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "CWE-401"
              ],
              "removed": []
            },
            "type": "weaknesses"
          },
          {
            "details": {
              "added": [
                "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "linux",
                "linux$PRODUCT$linux_kernel"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "1aa0cb20-1b0d-4829-a064-91b2530533ee"
      }
    ],
    "cpes": {
      "data": [
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2024-08-22T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memory leak during stateful obj update\n\nstateful objects can be updated from the control plane.\nThe transaction logic allocates a temporary object for this purpose.\n\nThe ->init function was called for this object, so plain kfree() leaks\nresources. We must call ->destroy function of the object.\n\nnft_obj_destroy does this, but it also decrements the module refcount,\nbut the update path doesn't increment it.\n\nTo avoid special-casing the update object release, do module_get for\nthe update case too and release it via nft_obj_destroy().",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/34bb90e407e3288f610558beaae54ecaa32b11c4",
        "https://git.kernel.org/stable/c/53026346a94c43f35c32b18804041bc483271d87",
        "https://git.kernel.org/stable/c/7e9880e81d3fd6a43c202f205717485290432826",
        "https://git.kernel.org/stable/c/dad3bdeef45f81a6e90204bcc85360bb76eccec7",
        "https://git.kernel.org/stable/c/e96e204ee6fa46702f6c94c3c69a09e69e0eac52",
        "https://lore.kernel.org/linux-cve-announce/2024082223-CVE-2022-48933-6ebb@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2022-48933",
        "https://www.cve.org/CVERecord?id=CVE-2022-48933"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "netfilter: nf_tables: fix memory leak during stateful obj update",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-23T01:50:09.313000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-401"
      ],
      "providers": [
        "nvd"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-08-22T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nnetfilter: nf_tables: fix memory leak during stateful obj update\nstateful objects can be updated from the control plane.\nThe transaction logic allocates a temporary object for this purpose.\nThe ->init function was called for this object, so plain kfree() leaks\nresources. We must call ->destroy function of the object.\nnft_obj_destroy does this, but it also decrements the module refcount,\nbut the update path doesn't increment it.\nTo avoid special-casing the update object release, do module_get for\nthe update case too and release it via nft_obj_destroy().",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2022/CVE-2022-48933.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024082223-CVE-2022-48933-6ebb@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2022-48933",
      "https://www.cve.org/CVERecord?id=CVE-2022-48933"
    ],
    "title": "kernel: netfilter: nf_tables: fix memory leak during stateful obj update",
    "updated": "2024-08-22T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}