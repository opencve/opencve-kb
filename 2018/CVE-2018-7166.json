{
  "cve": "CVE-2018-7166",
  "mitre": {
    "cpes": [],
    "created": "2018-08-21T13:00:00+00:00",
    "description": "In all versions of Node.js 10 prior to 10.9.0, an argument processing flaw can cause `Buffer.alloc()` to return uninitialized memory. This method is intended to be safe and only return initialized, or cleared, memory. The third argument specifying `encoding` can be passed as a number, this is misinterpreted by `Buffer's` internal \"fill\" method as the `start` to a fill operation. This flaw may be abused where `Buffer.alloc()` arguments are derived from user input to return uncleared memory blocks that may contain sensitive information.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2018/7xxx/CVE-2018-7166.json",
    "references": [
      "https://access.redhat.com/errata/RHSA-2018:2553",
      "https://nodejs.org/en/blog/vulnerability/august-2018-security-releases/"
    ],
    "title": null,
    "updated": "2024-09-17T00:26:00.258000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-226"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:nodejs:node.js:*:*:*:*:*:*:*:*"
    ],
    "created": "2018-08-21T12:29:00.320000+00:00",
    "description": "In all versions of Node.js 10 prior to 10.9.0, an argument processing flaw can cause `Buffer.alloc()` to return uninitialized memory. This method is intended to be safe and only return initialized, or cleared, memory. The third argument specifying `encoding` can be passed as a number, this is misinterpreted by `Buffer's` internal \"fill\" method as the `start` to a fill operation. This flaw may be abused where `Buffer.alloc()` arguments are derived from user input to return uncleared memory blocks that may contain sensitive information.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2018/CVE-2018-7166.json",
    "references": [
      "https://access.redhat.com/errata/RHSA-2018:2553",
      "https://nodejs.org/en/blog/vulnerability/august-2018-security-releases/"
    ],
    "title": null,
    "updated": "2020-09-22T13:59:22.750000+00:00",
    "vendors": [
      "nodejs",
      "nodejs$PRODUCT$node.js"
    ],
    "weaknesses": [
      "CWE-226",
      "CWE-908"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:openshift_application_runtimes:1.0::el7",
        "cpe:/a:redhat:rhel_software_collections:3::el7",
        "cpe:2.3:a:nodejs:node.js:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2018-08-11T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In all versions of Node.js 10 prior to 10.9.0, an argument processing flaw can cause `Buffer.alloc()` to return uninitialized memory. This method is intended to be safe and only return initialized, or cleared, memory. The third argument specifying `encoding` can be passed as a number, this is misinterpreted by `Buffer's` internal \"fill\" method as the `start` to a fill operation. This flaw may be abused where `Buffer.alloc()` arguments are derived from user input to return uncleared memory blocks that may contain sensitive information.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.0,
          "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 5.3,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
        },
        "provider": "redhat"
      },
      "cvssV3_1": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://access.redhat.com/errata/RHSA-2018:2553",
        "https://nodejs.org/en/blog/vulnerability/august-2018-security-releases/",
        "https://nvd.nist.gov/vuln/detail/CVE-2018-7166",
        "https://www.cve.org/CVERecord?id=CVE-2018-7166"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "nodejs: Unintentional exposure of uninitialized memory",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-09-17T00:26:00.258000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "nodejs",
        "nodejs$PRODUCT$node.js",
        "redhat",
        "redhat$PRODUCT$openshift_application_runtimes",
        "redhat$PRODUCT$rhel_software_collections"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-200",
        "CWE-226",
        "CWE-908"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:openshift_application_runtimes:1.0::el7",
      "cpe:/a:redhat:rhel_software_collections:3::el7"
    ],
    "created": "2018-08-11T00:00:00+00:00",
    "description": "In all versions of Node.js 10 prior to 10.9.0, an argument processing flaw can cause `Buffer.alloc()` to return uninitialized memory. This method is intended to be safe and only return initialized, or cleared, memory. The third argument specifying `encoding` can be passed as a number, this is misinterpreted by `Buffer's` internal \"fill\" method as the `start` to a fill operation. This flaw may be abused where `Buffer.alloc()` arguments are derived from user input to return uncleared memory blocks that may contain sensitive information.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 5.3,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
      },
      "cvssV3_1": {},
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2018/CVE-2018-7166.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2018-7166",
      "https://www.cve.org/CVERecord?id=CVE-2018-7166"
    ],
    "title": "nodejs: Unintentional exposure of uninitialized memory",
    "updated": "2018-08-11T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$openshift_application_runtimes",
      "redhat$PRODUCT$rhel_software_collections"
    ],
    "weaknesses": [
      "CWE-200"
    ]
  }
}