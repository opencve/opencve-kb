{
  "cve": "CVE-2024-46840",
  "mitre": {
    "cpes": [],
    "created": "2024-09-27T12:39:34.998000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: clean up our handling of refs == 0 in snapshot delete\n\nIn reada we BUG_ON(refs == 0), which could be unkind since we aren't\nholding a lock on the extent leaf and thus could get a transient\nincorrect answer.  In walk_down_proc we also BUG_ON(refs == 0), which\ncould happen if we have extent tree corruption.  Change that to return\n-EUCLEAN.  In do_walk_down() we catch this case and handle it correctly,\nhowever we return -EIO, which -EUCLEAN is a more appropriate error code.\nFinally in walk_up_proc we have the same BUG_ON(refs == 0), so convert\nthat to proper error handling.  Also adjust the error message so we can\nactually do something with the information.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/46xxx/CVE-2024-46840.json",
    "references": [
      "https://git.kernel.org/stable/c/03804641ec2d0da4fa088ad21c88e703d151ce16",
      "https://git.kernel.org/stable/c/71291aa7246645ef622621934d2067400380645e",
      "https://git.kernel.org/stable/c/728d4d045b628e006b48a448f3326a7194c88d32",
      "https://git.kernel.org/stable/c/7d1df13bf078ffebfedd361d714ff6cee1ff01b9",
      "https://git.kernel.org/stable/c/9cc887ac24b7a0598f4042ae9af6b9a33072f75b",
      "https://git.kernel.org/stable/c/b8ccef048354074a548f108e51d0557d6adfd3a3",
      "https://git.kernel.org/stable/c/c60676b81fab456b672796830f6d8057058f029c",
      "https://git.kernel.org/stable/c/c847b28a799733b04574060ab9d00f215970627d"
    ],
    "title": "btrfs: clean up our handling of refs == 0 in snapshot delete",
    "updated": "2024-09-29T13:59:41.445000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-09-27T13:15:16.057000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: clean up our handling of refs == 0 in snapshot delete\n\nIn reada we BUG_ON(refs == 0), which could be unkind since we aren't\nholding a lock on the extent leaf and thus could get a transient\nincorrect answer.  In walk_down_proc we also BUG_ON(refs == 0), which\ncould happen if we have extent tree corruption.  Change that to return\n-EUCLEAN.  In do_walk_down() we catch this case and handle it correctly,\nhowever we return -EIO, which -EUCLEAN is a more appropriate error code.\nFinally in walk_up_proc we have the same BUG_ON(refs == 0), so convert\nthat to proper error handling.  Also adjust the error message so we can\nactually do something with the information.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-46840.json",
    "references": [
      "https://git.kernel.org/stable/c/03804641ec2d0da4fa088ad21c88e703d151ce16",
      "https://git.kernel.org/stable/c/71291aa7246645ef622621934d2067400380645e",
      "https://git.kernel.org/stable/c/728d4d045b628e006b48a448f3326a7194c88d32",
      "https://git.kernel.org/stable/c/7d1df13bf078ffebfedd361d714ff6cee1ff01b9",
      "https://git.kernel.org/stable/c/9cc887ac24b7a0598f4042ae9af6b9a33072f75b",
      "https://git.kernel.org/stable/c/b8ccef048354074a548f108e51d0557d6adfd3a3",
      "https://git.kernel.org/stable/c/c60676b81fab456b672796830f6d8057058f029c",
      "https://git.kernel.org/stable/c/c847b28a799733b04574060ab9d00f215970627d"
    ],
    "title": null,
    "updated": "2024-09-27T13:15:16.057000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-27T12:45:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: clean up our handling of refs == 0 in snapshot delete\n\nIn reada we BUG_ON(refs == 0), which could be unkind since we aren't\nholding a lock on the extent leaf and thus could get a transient\nincorrect answer.  In walk_down_proc we also BUG_ON(refs == 0), which\ncould happen if we have extent tree corruption.  Change that to return\n-EUCLEAN.  In do_walk_down() we catch this case and handle it correctly,\nhowever we return -EIO, which -EUCLEAN is a more appropriate error code.\nFinally in walk_up_proc we have the same BUG_ON(refs == 0), so convert\nthat to proper error handling.  Also adjust the error message so we can\nactually do something with the information.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "btrfs: clean up our handling of refs == 0 in snapshot delete",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/03804641ec2d0da4fa088ad21c88e703d151ce16",
                "https://git.kernel.org/stable/c/71291aa7246645ef622621934d2067400380645e",
                "https://git.kernel.org/stable/c/728d4d045b628e006b48a448f3326a7194c88d32",
                "https://git.kernel.org/stable/c/7d1df13bf078ffebfedd361d714ff6cee1ff01b9",
                "https://git.kernel.org/stable/c/9cc887ac24b7a0598f4042ae9af6b9a33072f75b",
                "https://git.kernel.org/stable/c/b8ccef048354074a548f108e51d0557d6adfd3a3",
                "https://git.kernel.org/stable/c/c60676b81fab456b672796830f6d8057058f029c",
                "https://git.kernel.org/stable/c/c847b28a799733b04574060ab9d00f215970627d"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "f410b66a-b513-4659-ae5a-2c03ee91f5fd"
      },
      {
        "created": "2024-09-28T01:15:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024092754-CVE-2024-46840-fc44@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2024-46840",
                "https://www.cve.org/CVERecord?id=CVE-2024-46840"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Moderate",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "18b602be-f18c-47d8-8a79-b9b09be549e2"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-09-27T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: clean up our handling of refs == 0 in snapshot delete\n\nIn reada we BUG_ON(refs == 0), which could be unkind since we aren't\nholding a lock on the extent leaf and thus could get a transient\nincorrect answer.  In walk_down_proc we also BUG_ON(refs == 0), which\ncould happen if we have extent tree corruption.  Change that to return\n-EUCLEAN.  In do_walk_down() we catch this case and handle it correctly,\nhowever we return -EIO, which -EUCLEAN is a more appropriate error code.\nFinally in walk_up_proc we have the same BUG_ON(refs == 0), so convert\nthat to proper error handling.  Also adjust the error message so we can\nactually do something with the information.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/03804641ec2d0da4fa088ad21c88e703d151ce16",
        "https://git.kernel.org/stable/c/71291aa7246645ef622621934d2067400380645e",
        "https://git.kernel.org/stable/c/728d4d045b628e006b48a448f3326a7194c88d32",
        "https://git.kernel.org/stable/c/7d1df13bf078ffebfedd361d714ff6cee1ff01b9",
        "https://git.kernel.org/stable/c/9cc887ac24b7a0598f4042ae9af6b9a33072f75b",
        "https://git.kernel.org/stable/c/b8ccef048354074a548f108e51d0557d6adfd3a3",
        "https://git.kernel.org/stable/c/c60676b81fab456b672796830f6d8057058f029c",
        "https://git.kernel.org/stable/c/c847b28a799733b04574060ab9d00f215970627d",
        "https://lore.kernel.org/linux-cve-announce/2024092754-CVE-2024-46840-fc44@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-46840",
        "https://www.cve.org/CVERecord?id=CVE-2024-46840"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "btrfs: clean up our handling of refs == 0 in snapshot delete",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-29T13:59:41.445000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-09-27T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: clean up our handling of refs == 0 in snapshot delete\nIn reada we BUG_ON(refs == 0), which could be unkind since we aren't\nholding a lock on the extent leaf and thus could get a transient\nincorrect answer.  In walk_down_proc we also BUG_ON(refs == 0), which\ncould happen if we have extent tree corruption.  Change that to return\n-EUCLEAN.  In do_walk_down() we catch this case and handle it correctly,\nhowever we return -EIO, which -EUCLEAN is a more appropriate error code.\nFinally in walk_up_proc we have the same BUG_ON(refs == 0), so convert\nthat to proper error handling.  Also adjust the error message so we can\nactually do something with the information.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-46840.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024092754-CVE-2024-46840-fc44@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-46840",
      "https://www.cve.org/CVERecord?id=CVE-2024-46840"
    ],
    "title": "kernel: btrfs: clean up our handling of refs == 0 in snapshot delete",
    "updated": "2024-09-27T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}