{
  "cve": "CVE-2021-47416",
  "mitre": {
    "cpes": [],
    "created": "2024-05-21T15:04:06.042000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/47xxx/CVE-2021-47416.json",
    "references": [
      "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d",
      "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a",
      "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7",
      "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f",
      "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639",
      "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988",
      "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905",
      "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6"
    ],
    "title": "phy: mdio: fix memory leak",
    "updated": "2024-08-04T05:39:59.091000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-21T15:15:27.083000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-47416.json",
    "references": [
      "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d",
      "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a",
      "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7",
      "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f",
      "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639",
      "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988",
      "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905",
      "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6"
    ],
    "title": null,
    "updated": "2024-05-21T16:53:56.550000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-21T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d",
        "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a",
        "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7",
        "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f",
        "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639",
        "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988",
        "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905",
        "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6",
        "https://lore.kernel.org/linux-cve-announce/2024052154-CVE-2021-47416-7584@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-47416",
        "https://www.cve.org/CVERecord?id=CVE-2021-47416"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "phy: mdio: fix memory leak",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T05:39:59.091000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-401"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-21T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nphy: mdio: fix memory leak\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\nMDIOBUS_ALLOCATED indicates 2 states:\n1. Bus is only allocated\n2. Bus allocated and __mdiobus_register() fails, but\ndevice_register() was called\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2021/CVE-2021-47416.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024052154-CVE-2021-47416-7584@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-47416",
      "https://www.cve.org/CVERecord?id=CVE-2021-47416"
    ],
    "title": "kernel: phy: mdio: fix memory leak",
    "updated": "2024-05-21T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-401"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-21T15:04:06.042000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/064c2616234a7394867c924b5c1303974f3a4f4d",
      "https://git.kernel.org/stable/c/0d2dd40a7be61b89a7c99dae8ee96389d27b413a",
      "https://git.kernel.org/stable/c/2250392d930bd0d989f24d355d6355b0150256e7",
      "https://git.kernel.org/stable/c/2397b9e118721292429fea8807a698e71b94795f",
      "https://git.kernel.org/stable/c/25e9f88c7e3cc35f5e3d3db199660d28a15df639",
      "https://git.kernel.org/stable/c/414bb4ead1362ef2c8592db723c017258f213988",
      "https://git.kernel.org/stable/c/ca6e11c337daf7925ff8a2aac8e84490a8691905",
      "https://git.kernel.org/stable/c/f4f502a04ee1e543825af78f47eb7785015cd9f6"
    ],
    "title": "phy: mdio: fix memory leak",
    "updated": "2024-08-04T05:39:59.091000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2021/47xxx/CVE-2021-47416.json",
    "weaknesses": []
  }
}