{
  "cve": "CVE-2021-41087",
  "mitre": {
    "cpes": [],
    "created": "2021-09-21T21:05:15+00:00",
    "description": "in-toto-golang is a go implementation of the in-toto framework to protect software supply chain integrity. In affected versions authenticated attackers posing as functionaries (i.e., within a trusted set of users for a layout) are able to create attestations that may bypass DISALLOW rules in the same layout. An attacker with access to trusted private keys, may issue an attestation that contains a disallowed artifact by including path traversal semantics (e.g., foo vs dir/../foo). Exploiting this vulnerability is dependent on the specific policy applied. The problem has been fixed in version 0.3.0.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.6,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/41xxx/CVE-2021-41087.json",
    "references": [
      "https://github.com/in-toto/in-toto-golang/commit/f2c57d1e0f15e3ffbeac531829c696b72ecc4290",
      "https://github.com/in-toto/in-toto-golang/security/advisories/GHSA-vrxp-mg9f-hwf3"
    ],
    "title": "Improperly Implemented path matching for in-toto-golang",
    "updated": "2024-08-04T02:59:31.359000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-345"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:in-toto:in-toto-golang:*:*:*:*:*:*:*:*"
    ],
    "created": "2021-09-21T21:15:07.203000+00:00",
    "description": "in-toto-golang is a go implementation of the in-toto framework to protect software supply chain integrity. In affected versions authenticated attackers posing as functionaries (i.e., within a trusted set of users for a layout) are able to create attestations that may bypass DISALLOW rules in the same layout. An attacker with access to trusted private keys, may issue an attestation that contains a disallowed artifact by including path traversal semantics (e.g., foo vs dir/../foo). Exploiting this vulnerability is dependent on the specific policy applied. The problem has been fixed in version 0.3.0.",
    "metrics": {
      "cvssV2_0": {
        "score": 4.0,
        "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-41087.json",
    "references": [
      "https://github.com/in-toto/in-toto-golang/commit/f2c57d1e0f15e3ffbeac531829c696b72ecc4290",
      "https://github.com/in-toto/in-toto-golang/security/advisories/GHSA-vrxp-mg9f-hwf3"
    ],
    "title": null,
    "updated": "2021-10-05T16:30:01.280000+00:00",
    "vendors": [
      "in-toto",
      "in-toto$PRODUCT$in-toto-golang"
    ],
    "weaknesses": [
      "CWE-22",
      "CWE-345"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:in-toto:in-toto-golang:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2021-09-21T21:05:15+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "in-toto-golang is a go implementation of the in-toto framework to protect software supply chain integrity. In affected versions authenticated attackers posing as functionaries (i.e., within a trusted set of users for a layout) are able to create attestations that may bypass DISALLOW rules in the same layout. An attacker with access to trusted private keys, may issue an attestation that contains a disallowed artifact by including path traversal semantics (e.g., foo vs dir/../foo). Exploiting this vulnerability is dependent on the specific policy applied. The problem has been fixed in version 0.3.0.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.0,
          "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.6,
          "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:N/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/in-toto/in-toto-golang/commit/f2c57d1e0f15e3ffbeac531829c696b72ecc4290",
        "https://github.com/in-toto/in-toto-golang/security/advisories/GHSA-vrxp-mg9f-hwf3"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Improperly Implemented path matching for in-toto-golang",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T02:59:31.359000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "in-toto",
        "in-toto$PRODUCT$in-toto-golang"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-22",
        "CWE-345"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}