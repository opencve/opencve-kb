{
  "cve": "CVE-2024-38388",
  "mitre": {
    "cpes": [],
    "created": "2024-06-21T10:18:12.995000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda/cs_dsp_ctl: Use private_free for control cleanup\n\nUse the control private_free callback to free the associated data\nblock. This ensures that the memory won't leak, whatever way the\ncontrol gets destroyed.\n\nThe original implementation didn't actually remove the ALSA\ncontrols in hda_cs_dsp_control_remove(). It only freed the internal\ntracking structure. This meant it was possible to remove/unload the\namp driver while leaving its ALSA controls still present in the\nsoundcard. Obviously attempting to access them could cause segfaults\nor at least dereferencing stale pointers.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/38xxx/CVE-2024-38388.json",
    "references": [
      "https://git.kernel.org/stable/c/172811e3a557d8681a5e2d0f871dc04a2d17eb13",
      "https://git.kernel.org/stable/c/191dc1b2ff0fb35e7aff15a53224837637df8bff",
      "https://git.kernel.org/stable/c/3291486af5636540980ea55bae985f3eaa5b0740",
      "https://git.kernel.org/stable/c/6e359be4975006ff72818e79dad8fe48293f2eb2"
    ],
    "title": "ALSA: hda/cs_dsp_ctl: Use private_free for control cleanup",
    "updated": "2024-08-02T04:04:25.255000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-06-21T11:15:10.837000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda/cs_dsp_ctl: Use private_free for control cleanup\n\nUse the control private_free callback to free the associated data\nblock. This ensures that the memory won't leak, whatever way the\ncontrol gets destroyed.\n\nThe original implementation didn't actually remove the ALSA\ncontrols in hda_cs_dsp_control_remove(). It only freed the internal\ntracking structure. This meant it was possible to remove/unload the\namp driver while leaving its ALSA controls still present in the\nsoundcard. Obviously attempting to access them could cause segfaults\nor at least dereferencing stale pointers.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-38388.json",
    "references": [
      "https://git.kernel.org/stable/c/172811e3a557d8681a5e2d0f871dc04a2d17eb13",
      "https://git.kernel.org/stable/c/191dc1b2ff0fb35e7aff15a53224837637df8bff",
      "https://git.kernel.org/stable/c/3291486af5636540980ea55bae985f3eaa5b0740",
      "https://git.kernel.org/stable/c/6e359be4975006ff72818e79dad8fe48293f2eb2"
    ],
    "title": null,
    "updated": "2024-06-21T11:22:01.687000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-06-21T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda/cs_dsp_ctl: Use private_free for control cleanup\n\nUse the control private_free callback to free the associated data\nblock. This ensures that the memory won't leak, whatever way the\ncontrol gets destroyed.\n\nThe original implementation didn't actually remove the ALSA\ncontrols in hda_cs_dsp_control_remove(). It only freed the internal\ntracking structure. This meant it was possible to remove/unload the\namp driver while leaving its ALSA controls still present in the\nsoundcard. Obviously attempting to access them could cause segfaults\nor at least dereferencing stale pointers.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.4,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/172811e3a557d8681a5e2d0f871dc04a2d17eb13",
        "https://git.kernel.org/stable/c/191dc1b2ff0fb35e7aff15a53224837637df8bff",
        "https://git.kernel.org/stable/c/3291486af5636540980ea55bae985f3eaa5b0740",
        "https://git.kernel.org/stable/c/6e359be4975006ff72818e79dad8fe48293f2eb2",
        "https://lore.kernel.org/linux-cve-announce/2024062137-CVE-2024-38388-fb75@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-38388",
        "https://www.cve.org/CVERecord?id=CVE-2024-38388"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "ALSA: hda/cs_dsp_ctl: Use private_free for control cleanup",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T04:04:25.255000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-99"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-06-21T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nALSA: hda/cs_dsp_ctl: Use private_free for control cleanup\nUse the control private_free callback to free the associated data\nblock. This ensures that the memory won't leak, whatever way the\ncontrol gets destroyed.\nThe original implementation didn't actually remove the ALSA\ncontrols in hda_cs_dsp_control_remove(). It only freed the internal\ntracking structure. This meant it was possible to remove/unload the\namp driver while leaving its ALSA controls still present in the\nsoundcard. Obviously attempting to access them could cause segfaults\nor at least dereferencing stale pointers.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.4,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-38388.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024062137-CVE-2024-38388-fb75@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-38388",
      "https://www.cve.org/CVERecord?id=CVE-2024-38388"
    ],
    "title": "kernel: ALSA: hda/cs_dsp_ctl: Use private_free for control cleanup",
    "updated": "2024-06-21T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-99"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-06-21T10:18:12.995000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda/cs_dsp_ctl: Use private_free for control cleanup\n\nUse the control private_free callback to free the associated data\nblock. This ensures that the memory won't leak, whatever way the\ncontrol gets destroyed.\n\nThe original implementation didn't actually remove the ALSA\ncontrols in hda_cs_dsp_control_remove(). It only freed the internal\ntracking structure. This meant it was possible to remove/unload the\namp driver while leaving its ALSA controls still present in the\nsoundcard. Obviously attempting to access them could cause segfaults\nor at least dereferencing stale pointers.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "ALSA: hda/cs_dsp_ctl: Use private_free for control cleanup",
    "updated": "2024-06-24T15:21:04.867000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/38xxx/CVE-2024-38388.json",
    "weaknesses": []
  }
}