{
  "cve": "CVE-2024-23340",
  "mitre": {
    "cpes": [],
    "created": "2024-01-22T23:00:34.510000+00:00",
    "description": "@hono/node-server is an adapter that allows users to run Hono applications on Node.js. Since v1.3.0, @hono/node-server has used its own Request object with `url` behavior that is unexpected. In the standard API, if the URL contains `..`, here called \"double dots\", the URL string returned by Request will be in the resolved path. However, the `url` in @hono/node-server's Request as does not resolve double dots, so `http://localhost/static/.. /foo.txt` is returned. This causes vulnerabilities when using `serveStatic`. Modern web browsers and a latest `curl` command resolve double dots on the client side, so this issue doesn't affect those using either of those tools. However, problems may occur if accessed by a client that does not resolve them. Version 1.4.1 includes the change to fix this issue. As a workaround, don't use `serveStatic`.\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/23xxx/CVE-2024-23340.json",
    "references": [
      "https://github.com/honojs/node-server/blob/8cea466fd05e6d2e99c28011fc0e2c2d3f3397c9/src/request.ts#L43-L45",
      "https://github.com/honojs/node-server/commit/dd9b9a9b23e3896403c90a740e7f1f0892feb402",
      "https://github.com/honojs/node-server/security/advisories/GHSA-rjq5-w47x-x359"
    ],
    "title": "@hono/node-server can't handle \"double dots\" in URL",
    "updated": "2024-08-01T22:59:32.309000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-22"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:hono:node-server:*:*:*:*:*:node.js:*:*"
    ],
    "created": "2024-01-22T23:15:08.637000+00:00",
    "description": "@hono/node-server is an adapter that allows users to run Hono applications on Node.js. Since v1.3.0, @hono/node-server has used its own Request object with `url` behavior that is unexpected. In the standard API, if the URL contains `..`, here called \"double dots\", the URL string returned by Request will be in the resolved path. However, the `url` in @hono/node-server's Request as does not resolve double dots, so `http://localhost/static/.. /foo.txt` is returned. This causes vulnerabilities when using `serveStatic`. Modern web browsers and a latest `curl` command resolve double dots on the client side, so this issue doesn't affect those using either of those tools. However, problems may occur if accessed by a client that does not resolve them. Version 1.4.1 includes the change to fix this issue. As a workaround, don't use `serveStatic`.\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-23340.json",
    "references": [
      "https://github.com/honojs/node-server/blob/8cea466fd05e6d2e99c28011fc0e2c2d3f3397c9/src/request.ts#L43-L45",
      "https://github.com/honojs/node-server/commit/dd9b9a9b23e3896403c90a740e7f1f0892feb402",
      "https://github.com/honojs/node-server/security/advisories/GHSA-rjq5-w47x-x359"
    ],
    "title": null,
    "updated": "2024-01-30T14:30:38.267000+00:00",
    "vendors": [
      "hono",
      "hono$PRODUCT$node-server"
    ],
    "weaknesses": [
      "CWE-22"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:hono:node-server:*:*:*:*:*:node.js:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2024-01-22T23:00:34.510000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "@hono/node-server is an adapter that allows users to run Hono applications on Node.js. Since v1.3.0, @hono/node-server has used its own Request object with `url` behavior that is unexpected. In the standard API, if the URL contains `..`, here called \"double dots\", the URL string returned by Request will be in the resolved path. However, the `url` in @hono/node-server's Request as does not resolve double dots, so `http://localhost/static/.. /foo.txt` is returned. This causes vulnerabilities when using `serveStatic`. Modern web browsers and a latest `curl` command resolve double dots on the client side, so this issue doesn't affect those using either of those tools. However, problems may occur if accessed by a client that does not resolve them. Version 1.4.1 includes the change to fix this issue. As a workaround, don't use `serveStatic`.\n\n",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.3,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/honojs/node-server/blob/8cea466fd05e6d2e99c28011fc0e2c2d3f3397c9/src/request.ts#L43-L45",
        "https://github.com/honojs/node-server/commit/dd9b9a9b23e3896403c90a740e7f1f0892feb402",
        "https://github.com/honojs/node-server/security/advisories/GHSA-rjq5-w47x-x359"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "@hono/node-server can't handle \"double dots\" in URL",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-01T22:59:32.309000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "hono",
        "hono$PRODUCT$node-server"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-22"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}