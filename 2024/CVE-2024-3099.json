{
  "cve": "CVE-2024-3099",
  "mitre": {
    "cpes": [],
    "created": "2024-06-06T18:08:16.402000+00:00",
    "description": "A vulnerability in mlflow/mlflow version 2.11.1 allows attackers to create multiple models with the same name by exploiting URL encoding. This flaw can lead to Denial of Service (DoS) as an authenticated user might not be able to use the intended model, as it will open a different model each time. Additionally, an attacker can exploit this vulnerability to perform data model poisoning by creating a model with the same name, potentially causing an authenticated user to become a victim by using the poisoned model. The issue stems from inadequate validation of model names, allowing for the creation of models with URL-encoded names that are treated as distinct from their URL-decoded counterparts.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 5.4,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:L"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/3xxx/CVE-2024-3099.json",
    "references": [
      "https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a"
    ],
    "title": "Denial of Service and Data Model Poisoning via URL Encoding in mlflow/mlflow",
    "updated": "2024-08-01T19:32:42.675000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-475"
    ]
  },
  "nvd": {
    "cpes": [],
    "created": "2024-06-06T19:15:59.393000+00:00",
    "description": "A vulnerability in mlflow/mlflow version 2.11.1 allows attackers to create multiple models with the same name by exploiting URL encoding. This flaw can lead to Denial of Service (DoS) as an authenticated user might not be able to use the intended model, as it will open a different model each time. Additionally, an attacker can exploit this vulnerability to perform data model poisoning by creating a model with the same name, potentially causing an authenticated user to become a victim by using the poisoned model. The issue stems from inadequate validation of model names, allowing for the creation of models with URL-encoded names that are treated as distinct from their URL-decoded counterparts.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 5.4,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:L"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-3099.json",
    "references": [
      "https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a"
    ],
    "title": null,
    "updated": "2024-06-07T14:56:05.647000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-475"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-06-06T18:08:16.402000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "A vulnerability in mlflow/mlflow version 2.11.1 allows attackers to create multiple models with the same name by exploiting URL encoding. This flaw can lead to Denial of Service (DoS) as an authenticated user might not be able to use the intended model, as it will open a different model each time. Additionally, an attacker can exploit this vulnerability to perform data model poisoning by creating a model with the same name, potentially causing an authenticated user to become a victim by using the poisoned model. The issue stems from inadequate validation of model names, allowing for the creation of models with URL-encoded names that are treated as distinct from their URL-decoded counterparts.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {
          "score": 5.4,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:L"
        },
        "provider": "mitre"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "Denial of Service and Data Model Poisoning via URL Encoding in mlflow/mlflow",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-01T19:32:42.675000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-475"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-06-06T18:08:16.402000+00:00",
    "description": "A vulnerability in mlflow/mlflow version 2.11.1 allows attackers to create multiple models with the same name by exploiting URL encoding. This flaw can lead to Denial of Service (DoS) as an authenticated user might not be able to use the intended model, as it will open a different model each time. Additionally, an attacker can exploit this vulnerability to perform data model poisoning by creating a model with the same name, potentially causing an authenticated user to become a victim by using the poisoned model. The issue stems from inadequate validation of model names, allowing for the creation of models with URL-encoded names that are treated as distinct from their URL-decoded counterparts.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a"
    ],
    "title": "Denial of Service and Data Model Poisoning via URL Encoding in mlflow/mlflow",
    "updated": "2024-08-01T19:32:42.675000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/3xxx/CVE-2024-3099.json",
    "weaknesses": []
  }
}