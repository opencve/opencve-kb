{
  "cve": "CVE-2024-27933",
  "mitre": {
    "cpes": [],
    "created": "2024-03-06T20:52:17.599000+00:00",
    "description": "Deno is a JavaScript, TypeScript, and WebAssembly runtime. In version 1.39.0, use of raw file descriptors in `op_node_ipc_pipe()` leads to premature close of arbitrary file descriptors, allowing standard input to be re-opened as a different resource resulting in permission prompt bypass. Node child_process IPC relies on the JS side to pass the raw IPC file descriptor to `op_node_ipc_pipe()`, which returns a `IpcJsonStreamResource` ID associated with the file descriptor. On closing the resource, the raw file descriptor is closed together.\n\nUse of raw file descriptors in `op_node_ipc_pipe()` leads to premature close of arbitrary file descriptors. This allow standard input (fd 0) to be closed and re-opened for a different resource, which allows a silent permission prompt bypass. This is exploitable by an attacker controlling the code executed inside a Deno runtime to obtain arbitrary code execution on the host machine regardless of permissions.\n\nThis bug is known to be exploitable. There is a working exploit that achieves arbitrary code execution by bypassing prompts from zero permissions, additionally abusing the fact that Cache API lacks filesystem permission checks. The attack can be conducted silently as stderr can also be closed, suppressing all prompt outputs.\n\nVersion 1.39.1 fixes the bug.\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.3,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/27xxx/CVE-2024-27933.json",
    "references": [
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L214",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L220",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L225",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L241",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L256",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L265",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L99",
      "https://github.com/denoland/deno/commit/55fac9f5ead6d30996400e8597c969b675c5a22b",
      "https://github.com/denoland/deno/commit/5a91a065b882215dde209baf626247e54c21a392",
      "https://github.com/denoland/deno/security/advisories/GHSA-6q4w-9x56-rmwq"
    ],
    "title": "Deno arbitrary file descriptor close via `op_node_ipc_pipe()` leading to permission prompt bypass",
    "updated": "2024-08-02T19:55:09.948000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-863"
    ]
  },
  "nvd": {
    "cpes": [],
    "created": "2024-03-21T02:52:22.197000+00:00",
    "description": "Deno is a JavaScript, TypeScript, and WebAssembly runtime. In version 1.39.0, use of raw file descriptors in `op_node_ipc_pipe()` leads to premature close of arbitrary file descriptors, allowing standard input to be re-opened as a different resource resulting in permission prompt bypass. Node child_process IPC relies on the JS side to pass the raw IPC file descriptor to `op_node_ipc_pipe()`, which returns a `IpcJsonStreamResource` ID associated with the file descriptor. On closing the resource, the raw file descriptor is closed together.\n\nUse of raw file descriptors in `op_node_ipc_pipe()` leads to premature close of arbitrary file descriptors. This allow standard input (fd 0) to be closed and re-opened for a different resource, which allows a silent permission prompt bypass. This is exploitable by an attacker controlling the code executed inside a Deno runtime to obtain arbitrary code execution on the host machine regardless of permissions.\n\nThis bug is known to be exploitable. There is a working exploit that achieves arbitrary code execution by bypassing prompts from zero permissions, additionally abusing the fact that Cache API lacks filesystem permission checks. The attack can be conducted silently as stderr can also be closed, suppressing all prompt outputs.\n\nVersion 1.39.1 fixes the bug.\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.2,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-27933.json",
    "references": [
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L214",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L220",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L225",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L241",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L256",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L265",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L99",
      "https://github.com/denoland/deno/commit/55fac9f5ead6d30996400e8597c969b675c5a22b",
      "https://github.com/denoland/deno/commit/5a91a065b882215dde209baf626247e54c21a392",
      "https://github.com/denoland/deno/security/advisories/GHSA-6q4w-9x56-rmwq"
    ],
    "title": null,
    "updated": "2024-03-21T12:58:51.093000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-863"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-03-06T20:52:17.599000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "Deno is a JavaScript, TypeScript, and WebAssembly runtime. In version 1.39.0, use of raw file descriptors in `op_node_ipc_pipe()` leads to premature close of arbitrary file descriptors, allowing standard input to be re-opened as a different resource resulting in permission prompt bypass. Node child_process IPC relies on the JS side to pass the raw IPC file descriptor to `op_node_ipc_pipe()`, which returns a `IpcJsonStreamResource` ID associated with the file descriptor. On closing the resource, the raw file descriptor is closed together.\n\nUse of raw file descriptors in `op_node_ipc_pipe()` leads to premature close of arbitrary file descriptors. This allow standard input (fd 0) to be closed and re-opened for a different resource, which allows a silent permission prompt bypass. This is exploitable by an attacker controlling the code executed inside a Deno runtime to obtain arbitrary code execution on the host machine regardless of permissions.\n\nThis bug is known to be exploitable. There is a working exploit that achieves arbitrary code execution by bypassing prompts from zero permissions, additionally abusing the fact that Cache API lacks filesystem permission checks. The attack can be conducted silently as stderr can also be closed, suppressing all prompt outputs.\n\nVersion 1.39.1 fixes the bug.\n",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 8.3,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L214",
        "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L220",
        "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L225",
        "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L241",
        "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L256",
        "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L265",
        "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L99",
        "https://github.com/denoland/deno/commit/55fac9f5ead6d30996400e8597c969b675c5a22b",
        "https://github.com/denoland/deno/commit/5a91a065b882215dde209baf626247e54c21a392",
        "https://github.com/denoland/deno/security/advisories/GHSA-6q4w-9x56-rmwq"
      ],
      "providers": [
        "mitre",
        "nvd",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "Deno arbitrary file descriptor close via `op_node_ipc_pipe()` leading to permission prompt bypass",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T19:55:09.948000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-863"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-03-06T20:52:17.599000+00:00",
    "description": "Deno is a JavaScript, TypeScript, and WebAssembly runtime. In version 1.39.0, use of raw file descriptors in `op_node_ipc_pipe()` leads to premature close of arbitrary file descriptors, allowing standard input to be re-opened as a different resource resulting in permission prompt bypass. Node child_process IPC relies on the JS side to pass the raw IPC file descriptor to `op_node_ipc_pipe()`, which returns a `IpcJsonStreamResource` ID associated with the file descriptor. On closing the resource, the raw file descriptor is closed together.\n\nUse of raw file descriptors in `op_node_ipc_pipe()` leads to premature close of arbitrary file descriptors. This allow standard input (fd 0) to be closed and re-opened for a different resource, which allows a silent permission prompt bypass. This is exploitable by an attacker controlling the code executed inside a Deno runtime to obtain arbitrary code execution on the host machine regardless of permissions.\n\nThis bug is known to be exploitable. There is a working exploit that achieves arbitrary code execution by bypassing prompts from zero permissions, additionally abusing the fact that Cache API lacks filesystem permission checks. The attack can be conducted silently as stderr can also be closed, suppressing all prompt outputs.\n\nVersion 1.39.1 fixes the bug.\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L214",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L220",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L225",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L241",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L256",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L265",
      "https://github.com/denoland/deno/blob/v1.39.0/runtime/permissions/prompter.rs#L99",
      "https://github.com/denoland/deno/commit/55fac9f5ead6d30996400e8597c969b675c5a22b",
      "https://github.com/denoland/deno/commit/5a91a065b882215dde209baf626247e54c21a392",
      "https://github.com/denoland/deno/security/advisories/GHSA-6q4w-9x56-rmwq"
    ],
    "title": "Deno arbitrary file descriptor close via `op_node_ipc_pipe()` leading to permission prompt bypass",
    "updated": "2024-08-02T00:41:55.828000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/27xxx/CVE-2024-27933.json",
    "weaknesses": []
  }
}