{
  "cve": "CVE-2022-31078",
  "mitre": {
    "cpes": [],
    "created": "2022-07-11T20:25:09+00:00",
    "description": "KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service. Only an authenticated user of the cloud can make an attack. It will be affected only when users enable `router` module in the config file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the router switch in the config file `cloudcore.yaml`.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.4,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/31xxx/CVE-2022-31078.json",
    "references": [
      "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm"
    ],
    "title": "KubeEdge CloudCore Router memory exhaustion",
    "updated": "2024-08-03T07:11:38.467000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-400"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:linuxfoundation:kubeedge:*:*:*:*:*:*:*:*"
    ],
    "created": "2022-07-11T21:15:08.267000+00:00",
    "description": "KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service. Only an authenticated user of the cloud can make an attack. It will be affected only when users enable `router` module in the config file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the router switch in the config file `cloudcore.yaml`.",
    "metrics": {
      "cvssV2_0": {
        "score": 3.5,
        "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-31078.json",
    "references": [
      "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm"
    ],
    "title": null,
    "updated": "2023-07-21T17:07:56.513000+00:00",
    "vendors": [
      "linuxfoundation",
      "linuxfoundation$PRODUCT$kubeedge"
    ],
    "weaknesses": [
      "CWE-400",
      "CWE-770"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:linuxfoundation:kubeedge:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2022-07-11T20:25:09+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service. Only an authenticated user of the cloud can make an attack. It will be affected only when users enable `router` module in the config file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the router switch in the config file `cloudcore.yaml`.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 3.5,
          "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.4,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "KubeEdge CloudCore Router memory exhaustion",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T07:11:38.467000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "linuxfoundation",
        "linuxfoundation$PRODUCT$kubeedge"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-400",
        "CWE-770"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}