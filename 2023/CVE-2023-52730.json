{
  "cve": "CVE-2023-52730",
  "mitre": {
    "cpes": [],
    "created": "2024-05-21T15:22:56.633000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdio: fix possible resource leaks in some error paths\n\nIf sdio_add_func() or sdio_init_func() fails, sdio_remove_func() can\nnot release the resources, because the sdio function is not presented\nin these two cases, it won't call of_node_put() or put_device().\n\nTo fix these leaks, make sdio_func_present() only control whether\ndevice_del() needs to be called or not, then always call of_node_put()\nand put_device().\n\nIn error case in sdio_init_func(), the reference of 'card->dev' is\nnot get, to avoid redundant put in sdio_free_func_cis(), move the\nget_device() to sdio_alloc_func() and put_device() to sdio_release_func(),\nit can keep the get/put function be balanced.\n\nWithout this patch, while doing fault inject test, it can get the\nfollowing leak reports, after this fix, the leak is gone.\n\nunreferenced object 0xffff888112514000 (size 2048):\n  comm \"kworker/3:2\", pid 65, jiffies 4294741614 (age 124.774s)\n  hex dump (first 32 bytes):\n    00 e0 6f 12 81 88 ff ff 60 58 8d 06 81 88 ff ff  ..o.....`X......\n    10 40 51 12 81 88 ff ff 10 40 51 12 81 88 ff ff  .@Q......@Q.....\n  backtrace:\n    [<000000009e5931da>] kmalloc_trace+0x21/0x110\n    [<000000002f839ccb>] mmc_alloc_card+0x38/0xb0 [mmc_core]\n    [<0000000004adcbf6>] mmc_sdio_init_card+0xde/0x170 [mmc_core]\n    [<000000007538fea0>] mmc_attach_sdio+0xcb/0x1b0 [mmc_core]\n    [<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]\n\nunreferenced object 0xffff888112511000 (size 2048):\n  comm \"kworker/3:2\", pid 65, jiffies 4294741623 (age 124.766s)\n  hex dump (first 32 bytes):\n    00 40 51 12 81 88 ff ff e0 58 8d 06 81 88 ff ff  .@Q......X......\n    10 10 51 12 81 88 ff ff 10 10 51 12 81 88 ff ff  ..Q.......Q.....\n  backtrace:\n    [<000000009e5931da>] kmalloc_trace+0x21/0x110\n    [<00000000fcbe706c>] sdio_alloc_func+0x35/0x100 [mmc_core]\n    [<00000000c68f4b50>] mmc_attach_sdio.cold.18+0xb1/0x395 [mmc_core]\n    [<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/52xxx/CVE-2023-52730.json",
    "references": [
      "https://git.kernel.org/stable/c/1e06cf04239e202248c8fa356bf11449dc73cfbd",
      "https://git.kernel.org/stable/c/30716d9f0fa1766e522cf24c8a456244e4fc9931",
      "https://git.kernel.org/stable/c/5c7858adada31dbed042448cff6997dd6efc472a",
      "https://git.kernel.org/stable/c/605d9fb9556f8f5fb4566f4df1480f280f308ded",
      "https://git.kernel.org/stable/c/761db46b29b496946046d8cb33c7ea6de6bef36e",
      "https://git.kernel.org/stable/c/92ff03c2563c9b57a027c744750f3b7d2f261c58",
      "https://git.kernel.org/stable/c/f855d31bb38d663c3ba672345d7cce9324ba3b72"
    ],
    "title": "mmc: sdio: fix possible resource leaks in some error paths",
    "updated": "2024-08-02T23:11:35.273000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-21T16:15:13.157000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdio: fix possible resource leaks in some error paths\n\nIf sdio_add_func() or sdio_init_func() fails, sdio_remove_func() can\nnot release the resources, because the sdio function is not presented\nin these two cases, it won't call of_node_put() or put_device().\n\nTo fix these leaks, make sdio_func_present() only control whether\ndevice_del() needs to be called or not, then always call of_node_put()\nand put_device().\n\nIn error case in sdio_init_func(), the reference of 'card->dev' is\nnot get, to avoid redundant put in sdio_free_func_cis(), move the\nget_device() to sdio_alloc_func() and put_device() to sdio_release_func(),\nit can keep the get/put function be balanced.\n\nWithout this patch, while doing fault inject test, it can get the\nfollowing leak reports, after this fix, the leak is gone.\n\nunreferenced object 0xffff888112514000 (size 2048):\n  comm \"kworker/3:2\", pid 65, jiffies 4294741614 (age 124.774s)\n  hex dump (first 32 bytes):\n    00 e0 6f 12 81 88 ff ff 60 58 8d 06 81 88 ff ff  ..o.....`X......\n    10 40 51 12 81 88 ff ff 10 40 51 12 81 88 ff ff  .@Q......@Q.....\n  backtrace:\n    [<000000009e5931da>] kmalloc_trace+0x21/0x110\n    [<000000002f839ccb>] mmc_alloc_card+0x38/0xb0 [mmc_core]\n    [<0000000004adcbf6>] mmc_sdio_init_card+0xde/0x170 [mmc_core]\n    [<000000007538fea0>] mmc_attach_sdio+0xcb/0x1b0 [mmc_core]\n    [<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]\n\nunreferenced object 0xffff888112511000 (size 2048):\n  comm \"kworker/3:2\", pid 65, jiffies 4294741623 (age 124.766s)\n  hex dump (first 32 bytes):\n    00 40 51 12 81 88 ff ff e0 58 8d 06 81 88 ff ff  .@Q......X......\n    10 10 51 12 81 88 ff ff 10 10 51 12 81 88 ff ff  ..Q.......Q.....\n  backtrace:\n    [<000000009e5931da>] kmalloc_trace+0x21/0x110\n    [<00000000fcbe706c>] sdio_alloc_func+0x35/0x100 [mmc_core]\n    [<00000000c68f4b50>] mmc_attach_sdio.cold.18+0xb1/0x395 [mmc_core]\n    [<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-52730.json",
    "references": [
      "https://git.kernel.org/stable/c/1e06cf04239e202248c8fa356bf11449dc73cfbd",
      "https://git.kernel.org/stable/c/30716d9f0fa1766e522cf24c8a456244e4fc9931",
      "https://git.kernel.org/stable/c/5c7858adada31dbed042448cff6997dd6efc472a",
      "https://git.kernel.org/stable/c/605d9fb9556f8f5fb4566f4df1480f280f308ded",
      "https://git.kernel.org/stable/c/761db46b29b496946046d8cb33c7ea6de6bef36e",
      "https://git.kernel.org/stable/c/92ff03c2563c9b57a027c744750f3b7d2f261c58",
      "https://git.kernel.org/stable/c/f855d31bb38d663c3ba672345d7cce9324ba3b72"
    ],
    "title": null,
    "updated": "2024-05-21T16:53:56.550000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-08T23:00:00+00:00",
        "data": [
          {
            "details": [
              "redhat",
              "redhat$PRODUCT$enterprise_linux"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "cpe:/a:redhat:enterprise_linux:8::nfv",
                "cpe:/o:redhat:enterprise_linux:8"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "redhat",
                "redhat$PRODUCT$enterprise_linux"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "6acb2bfd-35c6-43b8-9604-42ed2f45d682"
      }
    ],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_linux:8::nfv",
        "cpe:/o:redhat:enterprise_linux:8"
      ],
      "providers": [
        "redhat"
      ]
    },
    "created": {
      "data": "2024-05-21T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdio: fix possible resource leaks in some error paths\n\nIf sdio_add_func() or sdio_init_func() fails, sdio_remove_func() can\nnot release the resources, because the sdio function is not presented\nin these two cases, it won't call of_node_put() or put_device().\n\nTo fix these leaks, make sdio_func_present() only control whether\ndevice_del() needs to be called or not, then always call of_node_put()\nand put_device().\n\nIn error case in sdio_init_func(), the reference of 'card->dev' is\nnot get, to avoid redundant put in sdio_free_func_cis(), move the\nget_device() to sdio_alloc_func() and put_device() to sdio_release_func(),\nit can keep the get/put function be balanced.\n\nWithout this patch, while doing fault inject test, it can get the\nfollowing leak reports, after this fix, the leak is gone.\n\nunreferenced object 0xffff888112514000 (size 2048):\n  comm \"kworker/3:2\", pid 65, jiffies 4294741614 (age 124.774s)\n  hex dump (first 32 bytes):\n    00 e0 6f 12 81 88 ff ff 60 58 8d 06 81 88 ff ff  ..o.....`X......\n    10 40 51 12 81 88 ff ff 10 40 51 12 81 88 ff ff  .@Q......@Q.....\n  backtrace:\n    [<000000009e5931da>] kmalloc_trace+0x21/0x110\n    [<000000002f839ccb>] mmc_alloc_card+0x38/0xb0 [mmc_core]\n    [<0000000004adcbf6>] mmc_sdio_init_card+0xde/0x170 [mmc_core]\n    [<000000007538fea0>] mmc_attach_sdio+0xcb/0x1b0 [mmc_core]\n    [<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]\n\nunreferenced object 0xffff888112511000 (size 2048):\n  comm \"kworker/3:2\", pid 65, jiffies 4294741623 (age 124.766s)\n  hex dump (first 32 bytes):\n    00 40 51 12 81 88 ff ff e0 58 8d 06 81 88 ff ff  .@Q......X......\n    10 10 51 12 81 88 ff ff 10 10 51 12 81 88 ff ff  ..Q.......Q.....\n  backtrace:\n    [<000000009e5931da>] kmalloc_trace+0x21/0x110\n    [<00000000fcbe706c>] sdio_alloc_func+0x35/0x100 [mmc_core]\n    [<00000000c68f4b50>] mmc_attach_sdio.cold.18+0xb1/0x395 [mmc_core]\n    [<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.4,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/1e06cf04239e202248c8fa356bf11449dc73cfbd",
        "https://git.kernel.org/stable/c/30716d9f0fa1766e522cf24c8a456244e4fc9931",
        "https://git.kernel.org/stable/c/5c7858adada31dbed042448cff6997dd6efc472a",
        "https://git.kernel.org/stable/c/605d9fb9556f8f5fb4566f4df1480f280f308ded",
        "https://git.kernel.org/stable/c/761db46b29b496946046d8cb33c7ea6de6bef36e",
        "https://git.kernel.org/stable/c/92ff03c2563c9b57a027c744750f3b7d2f261c58",
        "https://git.kernel.org/stable/c/f855d31bb38d663c3ba672345d7cce9324ba3b72",
        "https://lore.kernel.org/linux-cve-announce/2024052158-CVE-2023-52730-1c8f@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-52730",
        "https://www.cve.org/CVERecord?id=CVE-2023-52730"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "mmc: sdio: fix possible resource leaks in some error paths",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T23:11:35.273000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$enterprise_linux"
      ],
      "providers": [
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-402"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_linux:8::nfv",
      "cpe:/o:redhat:enterprise_linux:8"
    ],
    "created": "2024-05-21T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nmmc: sdio: fix possible resource leaks in some error paths\nIf sdio_add_func() or sdio_init_func() fails, sdio_remove_func() can\nnot release the resources, because the sdio function is not presented\nin these two cases, it won't call of_node_put() or put_device().\nTo fix these leaks, make sdio_func_present() only control whether\ndevice_del() needs to be called or not, then always call of_node_put()\nand put_device().\nIn error case in sdio_init_func(), the reference of 'card->dev' is\nnot get, to avoid redundant put in sdio_free_func_cis(), move the\nget_device() to sdio_alloc_func() and put_device() to sdio_release_func(),\nit can keep the get/put function be balanced.\nWithout this patch, while doing fault inject test, it can get the\nfollowing leak reports, after this fix, the leak is gone.\nunreferenced object 0xffff888112514000 (size 2048):\ncomm \"kworker/3:2\", pid 65, jiffies 4294741614 (age 124.774s)\nhex dump (first 32 bytes):\n00 e0 6f 12 81 88 ff ff 60 58 8d 06 81 88 ff ff  ..o.....`X......\n10 40 51 12 81 88 ff ff 10 40 51 12 81 88 ff ff  .@Q......@Q.....\nbacktrace:\n[<000000009e5931da>] kmalloc_trace+0x21/0x110\n[<000000002f839ccb>] mmc_alloc_card+0x38/0xb0 [mmc_core]\n[<0000000004adcbf6>] mmc_sdio_init_card+0xde/0x170 [mmc_core]\n[<000000007538fea0>] mmc_attach_sdio+0xcb/0x1b0 [mmc_core]\n[<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]\nunreferenced object 0xffff888112511000 (size 2048):\ncomm \"kworker/3:2\", pid 65, jiffies 4294741623 (age 124.766s)\nhex dump (first 32 bytes):\n00 40 51 12 81 88 ff ff e0 58 8d 06 81 88 ff ff  .@Q......X......\n10 10 51 12 81 88 ff ff 10 10 51 12 81 88 ff ff  ..Q.......Q.....\nbacktrace:\n[<000000009e5931da>] kmalloc_trace+0x21/0x110\n[<00000000fcbe706c>] sdio_alloc_func+0x35/0x100 [mmc_core]\n[<00000000c68f4b50>] mmc_attach_sdio.cold.18+0xb1/0x395 [mmc_core]\n[<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.4,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2023/CVE-2023-52730.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024052158-CVE-2023-52730-1c8f@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-52730",
      "https://www.cve.org/CVERecord?id=CVE-2023-52730"
    ],
    "title": "kernel: mmc: sdio: fix possible resource leaks in some error paths",
    "updated": "2024-05-21T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux"
    ],
    "weaknesses": [
      "CWE-402"
    ]
  }
}