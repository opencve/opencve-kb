{
  "cve": "CVE-2024-26603",
  "mitre": {
    "cpes": [],
    "created": "2024-02-24T14:56:57.628000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/fpu: Stop relying on userspace for info to fault in xsave buffer\n\nBefore this change, the expected size of the user space buffer was\ntaken from fx_sw->xstate_size. fx_sw->xstate_size can be changed\nfrom user-space, so it is possible construct a sigreturn frame where:\n\n * fx_sw->xstate_size is smaller than the size required by valid bits in\n   fx_sw->xfeatures.\n * user-space unmaps parts of the sigrame fpu buffer so that not all of\n   the buffer required by xrstor is accessible.\n\nIn this case, xrstor tries to restore and accesses the unmapped area\nwhich results in a fault. But fault_in_readable succeeds because buf +\nfx_sw->xstate_size is within the still mapped area, so it goes back and\ntries xrstor again. It will spin in this loop forever.\n\nInstead, fault in the maximum size which can be touched by XRSTOR (taken\nfrom fpstate->user_size).\n\n[ dhansen: tweak subject / changelog ]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/26xxx/CVE-2024-26603.json",
    "references": [
      "https://git.kernel.org/stable/c/627339cccdc9166792ecf96bc3c9f711a60ce996",
      "https://git.kernel.org/stable/c/627e28cbb65564e55008315d9e02fbb90478beda",
      "https://git.kernel.org/stable/c/8bd3eee7720c14b59a206bd05b98d7586bccf99a",
      "https://git.kernel.org/stable/c/b2479ab426cef7ab79a13005650eff956223ced2",
      "https://git.kernel.org/stable/c/d877550eaf2dc9090d782864c96939397a3c6835"
    ],
    "title": "x86/fpu: Stop relying on userspace for info to fault in xsave buffer",
    "updated": "2024-08-02T00:07:19.584000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-02-26T16:28:00.097000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/fpu: Stop relying on userspace for info to fault in xsave buffer\n\nBefore this change, the expected size of the user space buffer was\ntaken from fx_sw->xstate_size. fx_sw->xstate_size can be changed\nfrom user-space, so it is possible construct a sigreturn frame where:\n\n * fx_sw->xstate_size is smaller than the size required by valid bits in\n   fx_sw->xfeatures.\n * user-space unmaps parts of the sigrame fpu buffer so that not all of\n   the buffer required by xrstor is accessible.\n\nIn this case, xrstor tries to restore and accesses the unmapped area\nwhich results in a fault. But fault_in_readable succeeds because buf +\nfx_sw->xstate_size is within the still mapped area, so it goes back and\ntries xrstor again. It will spin in this loop forever.\n\nInstead, fault in the maximum size which can be touched by XRSTOR (taken\nfrom fpstate->user_size).\n\n[ dhansen: tweak subject / changelog ]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-26603.json",
    "references": [
      "https://git.kernel.org/stable/c/627339cccdc9166792ecf96bc3c9f711a60ce996",
      "https://git.kernel.org/stable/c/627e28cbb65564e55008315d9e02fbb90478beda",
      "https://git.kernel.org/stable/c/8bd3eee7720c14b59a206bd05b98d7586bccf99a",
      "https://git.kernel.org/stable/c/b2479ab426cef7ab79a13005650eff956223ced2",
      "https://git.kernel.org/stable/c/d877550eaf2dc9090d782864c96939397a3c6835"
    ],
    "title": null,
    "updated": "2024-04-17T18:00:07.600000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-835"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_linux:8::nfv",
        "cpe:/o:redhat:enterprise_linux:8",
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2024-02-24T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/fpu: Stop relying on userspace for info to fault in xsave buffer\n\nBefore this change, the expected size of the user space buffer was\ntaken from fx_sw->xstate_size. fx_sw->xstate_size can be changed\nfrom user-space, so it is possible construct a sigreturn frame where:\n\n * fx_sw->xstate_size is smaller than the size required by valid bits in\n   fx_sw->xfeatures.\n * user-space unmaps parts of the sigrame fpu buffer so that not all of\n   the buffer required by xrstor is accessible.\n\nIn this case, xrstor tries to restore and accesses the unmapped area\nwhich results in a fault. But fault_in_readable succeeds because buf +\nfx_sw->xstate_size is within the still mapped area, so it goes back and\ntries xrstor again. It will spin in this loop forever.\n\nInstead, fault in the maximum size which can be touched by XRSTOR (taken\nfrom fpstate->user_size).\n\n[ dhansen: tweak subject / changelog ]",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/627339cccdc9166792ecf96bc3c9f711a60ce996",
        "https://git.kernel.org/stable/c/627e28cbb65564e55008315d9e02fbb90478beda",
        "https://git.kernel.org/stable/c/8bd3eee7720c14b59a206bd05b98d7586bccf99a",
        "https://git.kernel.org/stable/c/b2479ab426cef7ab79a13005650eff956223ced2",
        "https://git.kernel.org/stable/c/d877550eaf2dc9090d782864c96939397a3c6835",
        "https://lore.kernel.org/linux-cve-announce/2024022415-CVE-2024-26603-42c2@gregkh/T/#u",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-26603",
        "https://www.cve.org/CVERecord?id=CVE-2024-26603"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "x86/fpu: Stop relying on userspace for info to fault in xsave buffer",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T00:07:19.584000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel",
        "redhat",
        "redhat$PRODUCT$enterprise_linux"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-835"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_linux:8::nfv",
      "cpe:/o:redhat:enterprise_linux:8"
    ],
    "created": "2024-02-24T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nx86/fpu: Stop relying on userspace for info to fault in xsave buffer\nBefore this change, the expected size of the user space buffer was\ntaken from fx_sw->xstate_size. fx_sw->xstate_size can be changed\nfrom user-space, so it is possible construct a sigreturn frame where:\n* fx_sw->xstate_size is smaller than the size required by valid bits in\nfx_sw->xfeatures.\n* user-space unmaps parts of the sigrame fpu buffer so that not all of\nthe buffer required by xrstor is accessible.\nIn this case, xrstor tries to restore and accesses the unmapped area\nwhich results in a fault. But fault_in_readable succeeds because buf +\nfx_sw->xstate_size is within the still mapped area, so it goes back and\ntries xrstor again. It will spin in this loop forever.\nInstead, fault in the maximum size which can be touched by XRSTOR (taken\nfrom fpstate->user_size).\n[ dhansen: tweak subject / changelog ]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-26603.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024022415-CVE-2024-26603-42c2@gregkh/T/#u",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-26603",
      "https://www.cve.org/CVERecord?id=CVE-2024-26603"
    ],
    "title": "kernel: x86/fpu: Stop relying on userspace for info to fault in xsave buffer that cause loop forever",
    "updated": "2024-02-24T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux"
    ],
    "weaknesses": [
      "CWE-835"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-02-24T14:56:57.628000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/fpu: Stop relying on userspace for info to fault in xsave buffer\n\nBefore this change, the expected size of the user space buffer was\ntaken from fx_sw->xstate_size. fx_sw->xstate_size can be changed\nfrom user-space, so it is possible construct a sigreturn frame where:\n\n * fx_sw->xstate_size is smaller than the size required by valid bits in\n   fx_sw->xfeatures.\n * user-space unmaps parts of the sigrame fpu buffer so that not all of\n   the buffer required by xrstor is accessible.\n\nIn this case, xrstor tries to restore and accesses the unmapped area\nwhich results in a fault. But fault_in_readable succeeds because buf +\nfx_sw->xstate_size is within the still mapped area, so it goes back and\ntries xrstor again. It will spin in this loop forever.\n\nInstead, fault in the maximum size which can be touched by XRSTOR (taken\nfrom fpstate->user_size).\n\n[ dhansen: tweak subject / changelog ]",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "x86/fpu: Stop relying on userspace for info to fault in xsave buffer",
    "updated": "2024-05-23T19:01:16.095000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/26xxx/CVE-2024-26603.json",
    "weaknesses": []
  }
}