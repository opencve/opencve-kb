{
  "cve": "CVE-2023-26142",
  "mitre": {
    "cpes": [],
    "created": "2023-09-12T05:00:01.235000+00:00",
    "description": "All versions of the package crow are vulnerable to HTTP Response Splitting when untrusted user input is used to build header values. Header values are not properly sanitized against CRLF Injection in the set_header and add_header functions. An attacker can add the \\r\\n (carriage return line feeds) characters to end the HTTP response headers and inject malicious content.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/26xxx/CVE-2023-26142.json",
    "references": [
      "https://gist.github.com/dellalibera/9247769cc90ed96c0d72ddbcba88c65c",
      "https://security.snyk.io/vuln/SNYK-UNMANAGED-CROW-5665556"
    ],
    "title": null,
    "updated": "2024-09-26T14:23:48.768000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-113"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:crowcpp:crow:1.0\\+5:*:*:*:*:*:*:*"
    ],
    "created": "2023-09-12T05:15:41.467000+00:00",
    "description": "All versions of the package crow are vulnerable to HTTP Response Splitting when untrusted user input is used to build header values. Header values are not properly sanitized against CRLF Injection in the set_header and add_header functions. An attacker can add the \\r\\n (carriage return line feeds) characters to end the HTTP response headers and inject malicious content.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.1,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-26142.json",
    "references": [
      "https://gist.github.com/dellalibera/9247769cc90ed96c0d72ddbcba88c65c",
      "https://security.snyk.io/vuln/SNYK-UNMANAGED-CROW-5665556"
    ],
    "title": null,
    "updated": "2023-11-07T04:09:27.440000+00:00",
    "vendors": [
      "crowcpp",
      "crowcpp$PRODUCT$crow"
    ],
    "weaknesses": [
      "CWE-113",
      "CWE-74"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-26T15:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "yes",
                    "Exploitation": "poc",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "b9172da1-5993-44d1-a62c-98c49e8d698c"
      }
    ],
    "cpes": {
      "data": [
        "cpe:2.3:a:crowcpp:crow:1.0\\+5:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-09-12T05:00:01.235000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "All versions of the package crow are vulnerable to HTTP Response Splitting when untrusted user input is used to build header values. Header values are not properly sanitized against CRLF Injection in the set_header and add_header functions. An attacker can add the \\r\\n (carriage return line feeds) characters to end the HTTP response headers and inject malicious content.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "yes",
            "Exploitation": "poc",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://gist.github.com/dellalibera/9247769cc90ed96c0d72ddbcba88c65c",
        "https://security.snyk.io/vuln/SNYK-UNMANAGED-CROW-5665556"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2024-09-26T14:23:48.768000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "crowcpp",
        "crowcpp$PRODUCT$crow"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-113",
        "CWE-74"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2023-09-12T05:00:01.235000+00:00",
    "description": "All versions of the package crow are vulnerable to HTTP Response Splitting when untrusted user input is used to build header values. Header values are not properly sanitized against CRLF Injection in the set_header and add_header functions. An attacker can add the \\r\\n (carriage return line feeds) characters to end the HTTP response headers and inject malicious content.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "yes",
          "Exploitation": "poc",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": null,
    "updated": "2024-09-26T14:23:38.736000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2023/26xxx/CVE-2023-26142.json",
    "weaknesses": []
  }
}