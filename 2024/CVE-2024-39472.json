{
  "cve": "CVE-2024-39472",
  "mitre": {
    "cpes": [],
    "created": "2024-07-05T06:42:03.495000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\n\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\n\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/39xxx/CVE-2024-39472.json",
    "references": [
      "https://git.kernel.org/stable/c/45cf976008ddef4a9c9a30310c9b4fb2a9a6602a",
      "https://git.kernel.org/stable/c/57835c0e7152e36b03875dd6c56dfeed685c1b1f",
      "https://git.kernel.org/stable/c/c2389c074973aa94e34992e7f66dac0de37595b5",
      "https://git.kernel.org/stable/c/f754591b17d0ee91c2b45fe9509d0cdc420527cb"
    ],
    "title": "xfs: fix log recovery buffer allocation for the legacy h_size fixup",
    "updated": "2024-09-11T17:34:41.426000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-07-05T07:15:10.020000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\n\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\n\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-39472.json",
    "references": [
      "https://git.kernel.org/stable/c/45cf976008ddef4a9c9a30310c9b4fb2a9a6602a",
      "https://git.kernel.org/stable/c/57835c0e7152e36b03875dd6c56dfeed685c1b1f",
      "https://git.kernel.org/stable/c/c2389c074973aa94e34992e7f66dac0de37595b5",
      "https://git.kernel.org/stable/c/f754591b17d0ee91c2b45fe9509d0cdc420527cb"
    ],
    "title": null,
    "updated": "2024-08-19T05:15:06.543000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-770"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-08T23:00:00+00:00",
        "data": [
          {
            "details": [
              "redhat",
              "redhat$PRODUCT$enterprise_linux"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "cpe:/a:redhat:enterprise_linux:8::nfv",
                "cpe:/o:redhat:enterprise_linux:8"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "redhat",
                "redhat$PRODUCT$enterprise_linux"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "b69d4520-09f0-47c1-9e78-ceb2bd5562ac"
      },
      {
        "created": "2024-08-14T14:00:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/57835c0e7152e36b03875dd6c56dfeed685c1b1f",
                "https://git.kernel.org/stable/c/c2389c074973aa94e34992e7f66dac0de37595b5"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "7e98dec6-622c-48cb-8f3f-c0cd6775a54d"
      },
      {
        "created": "2024-08-19T04:45:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/f754591b17d0ee91c2b45fe9509d0cdc420527cb"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "8713d17f-de9c-4be2-b2d1-f006adb00b98"
      },
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "5e97bd84-b254-47d3-852f-9a6af6c59682"
      }
    ],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_linux:8::nfv",
        "cpe:/o:redhat:enterprise_linux:8",
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2024-07-05T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\n\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\n\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/45cf976008ddef4a9c9a30310c9b4fb2a9a6602a",
        "https://git.kernel.org/stable/c/57835c0e7152e36b03875dd6c56dfeed685c1b1f",
        "https://git.kernel.org/stable/c/c2389c074973aa94e34992e7f66dac0de37595b5",
        "https://git.kernel.org/stable/c/f754591b17d0ee91c2b45fe9509d0cdc420527cb",
        "https://lore.kernel.org/linux-cve-announce/2024070512-CVE-2024-39472-f977@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-39472",
        "https://www.cve.org/CVERecord?id=CVE-2024-39472"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "xfs: fix log recovery buffer allocation for the legacy h_size fixup",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-11T17:34:41.426000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel",
        "redhat",
        "redhat$PRODUCT$enterprise_linux"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-119",
        "CWE-770"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_linux:8::nfv",
      "cpe:/o:redhat:enterprise_linux:8"
    ],
    "created": "2024-07-05T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-39472.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024070512-CVE-2024-39472-f977@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-39472",
      "https://www.cve.org/CVERecord?id=CVE-2024-39472"
    ],
    "title": "kernel: xfs: fix log recovery buffer allocation for the legacy h_size fixup",
    "updated": "2024-07-05T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux"
    ],
    "weaknesses": [
      "CWE-119"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-07-05T06:42:03.495000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\n\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\n\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "xfs: fix log recovery buffer allocation for the legacy h_size fixup",
    "updated": "2024-09-11T12:42:25.222000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/39xxx/CVE-2024-39472.json",
    "weaknesses": []
  }
}