{
  "cve": "CVE-2023-4039",
  "mitre": {
    "cpes": [],
    "created": "2023-09-13T08:05:10.274000+00:00",
    "description": "\n\n**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.\n\n\n\n\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.8,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/4xxx/CVE-2023-4039.json",
    "references": [
      "https://developer.arm.com/Arm%20Security%20Center/GCC%20Stack%20Protector%20Vulnerability%20AArch64",
      "https://github.com/metaredteam/external-disclosures/security/advisories/GHSA-x7ch-h5rf-w2mf"
    ],
    "title": "GCC's-fstack-protector fails to guard dynamically-sized local variables on AArch64",
    "updated": "2024-08-02T07:17:11.837000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-693"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:gnu:gcc:*:*:*:*:*:*:arm64:*"
    ],
    "created": "2023-09-13T09:15:15.690000+00:00",
    "description": "\n\n**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.\n\n\n\n\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.8,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-4039.json",
    "references": [
      "https://developer.arm.com/Arm%20Security%20Center/GCC%20Stack%20Protector%20Vulnerability%20AArch64",
      "https://github.com/metaredteam/external-disclosures/security/advisories/GHSA-x7ch-h5rf-w2mf"
    ],
    "title": null,
    "updated": "2024-08-02T08:15:14.993000+00:00",
    "vendors": [
      "gnu",
      "gnu$PRODUCT$gcc"
    ],
    "weaknesses": [
      "CWE-693",
      "NVD-CWE-Other"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:gnu:gcc:*:*:*:*:*:*:arm64:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-09-12T15:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "\n\n**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.\n\n\n\n\n\n",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.8,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://developer.arm.com/Arm%20Security%20Center/GCC%20Stack%20Protector%20Vulnerability%20AArch64",
        "https://gcc.gnu.org/git/?p=gcc.git;a=blob_plain;f=SECURITY.txt",
        "https://gcc.gnu.org/pipermail/gcc-patches/2023-October/634066.html",
        "https://github.com/metaredteam/external-disclosures/security/advisories/GHSA-x7ch-h5rf-w2mf",
        "https://inbox.sourceware.org/gcc-patches/46cfa37b-56eb-344d-0745-e0d35393392d@gotplt.org",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-4039",
        "https://www.cve.org/CVERecord?id=CVE-2023-4039"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "GCC's-fstack-protector fails to guard dynamically-sized local variables on AArch64",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T08:15:14.993000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [
        "gnu",
        "gnu$PRODUCT$gcc"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-119",
        "CWE-358",
        "CWE-693",
        "NVD-CWE-Other"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2023-09-12T15:00:00+00:00",
    "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\ngo further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 0.0,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:N"
      },
      "threat_severity": null
    },
    "redhat_repo_path": "2023/CVE-2023-4039.json",
    "references": [
      "https://developer.arm.com/Arm%20Security%20Center/GCC%20Stack%20Protector%20Vulnerability%20AArch64",
      "https://gcc.gnu.org/git/?p=gcc.git;a=blob_plain;f=SECURITY.txt",
      "https://gcc.gnu.org/pipermail/gcc-patches/2023-October/634066.html",
      "https://github.com/metaredteam/external-disclosures/security/advisories/GHSA-x7ch-h5rf-w2mf",
      "https://inbox.sourceware.org/gcc-patches/46cfa37b-56eb-344d-0745-e0d35393392d@gotplt.org",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-4039",
      "https://www.cve.org/CVERecord?id=CVE-2023-4039"
    ],
    "title": "gcc: -fstack-protector fails to guard dynamic stack allocations on ARM64",
    "updated": "2023-09-12T15:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-119",
      "CWE-358"
    ]
  }
}