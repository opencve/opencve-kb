{
  "cve": "CVE-2021-47012",
  "mitre": {
    "cpes": [],
    "created": "2024-02-28T08:13:30.284000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/siw: Fix a use after free in siw_alloc_mr\n\nOur code analyzer reported a UAF.\n\nIn siw_alloc_mr(), it calls siw_mr_add_mem(mr,..). In the implementation of\nsiw_mr_add_mem(), mem is assigned to mr->mem and then mem is freed via\nkfree(mem) if xa_alloc_cyclic() failed. Here, mr->mem still point to a\nfreed object. After, the execution continue up to the err_out branch of\nsiw_alloc_mr, and the freed mr->mem is used in siw_mr_drop_mem(mr).\n\nMy patch moves \"mr->mem = mem\" behind the if (xa_alloc_cyclic(..)<0) {}\nsection, to avoid the uaf.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/47xxx/CVE-2021-47012.json",
    "references": [
      "https://git.kernel.org/stable/c/3093ee182f01689b89e9f8797b321603e5de4f63",
      "https://git.kernel.org/stable/c/30b9e92d0b5e5d5dc1101ab856c17009537cbca4",
      "https://git.kernel.org/stable/c/3e22b88e02c194f6c80867abfef5cc09383461f4",
      "https://git.kernel.org/stable/c/608a4b90ece039940e9425ee2b39c8beff27e00c",
      "https://git.kernel.org/stable/c/ad9ce7188432650469a6c7625bf479f5ed0b6155"
    ],
    "title": "RDMA/siw: Fix a use after free in siw_alloc_mr",
    "updated": "2024-08-04T05:24:39.841000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-02-28T09:15:38.753000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/siw: Fix a use after free in siw_alloc_mr\n\nOur code analyzer reported a UAF.\n\nIn siw_alloc_mr(), it calls siw_mr_add_mem(mr,..). In the implementation of\nsiw_mr_add_mem(), mem is assigned to mr->mem and then mem is freed via\nkfree(mem) if xa_alloc_cyclic() failed. Here, mr->mem still point to a\nfreed object. After, the execution continue up to the err_out branch of\nsiw_alloc_mr, and the freed mr->mem is used in siw_mr_drop_mem(mr).\n\nMy patch moves \"mr->mem = mem\" behind the if (xa_alloc_cyclic(..)<0) {}\nsection, to avoid the uaf.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-47012.json",
    "references": [
      "https://git.kernel.org/stable/c/3093ee182f01689b89e9f8797b321603e5de4f63",
      "https://git.kernel.org/stable/c/30b9e92d0b5e5d5dc1101ab856c17009537cbca4",
      "https://git.kernel.org/stable/c/3e22b88e02c194f6c80867abfef5cc09383461f4",
      "https://git.kernel.org/stable/c/608a4b90ece039940e9425ee2b39c8beff27e00c",
      "https://git.kernel.org/stable/c/ad9ce7188432650469a6c7625bf479f5ed0b6155"
    ],
    "title": null,
    "updated": "2024-02-28T14:06:45.783000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-02-28T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/siw: Fix a use after free in siw_alloc_mr\n\nOur code analyzer reported a UAF.\n\nIn siw_alloc_mr(), it calls siw_mr_add_mem(mr,..). In the implementation of\nsiw_mr_add_mem(), mem is assigned to mr->mem and then mem is freed via\nkfree(mem) if xa_alloc_cyclic() failed. Here, mr->mem still point to a\nfreed object. After, the execution continue up to the err_out branch of\nsiw_alloc_mr, and the freed mr->mem is used in siw_mr_drop_mem(mr).\n\nMy patch moves \"mr->mem = mem\" behind the if (xa_alloc_cyclic(..)<0) {}\nsection, to avoid the uaf.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.1,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/3093ee182f01689b89e9f8797b321603e5de4f63",
        "https://git.kernel.org/stable/c/30b9e92d0b5e5d5dc1101ab856c17009537cbca4",
        "https://git.kernel.org/stable/c/3e22b88e02c194f6c80867abfef5cc09383461f4",
        "https://git.kernel.org/stable/c/608a4b90ece039940e9425ee2b39c8beff27e00c",
        "https://git.kernel.org/stable/c/ad9ce7188432650469a6c7625bf479f5ed0b6155",
        "https://lore.kernel.org/linux-cve-announce/2024022831-CVE-2021-47012-73c5@gregkh/T/#u",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-47012",
        "https://www.cve.org/CVERecord?id=CVE-2021-47012"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "RDMA/siw: Fix a use after free in siw_alloc_mr",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T05:24:39.841000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-416"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-02-28T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nRDMA/siw: Fix a use after free in siw_alloc_mr\nOur code analyzer reported a UAF.\nIn siw_alloc_mr(), it calls siw_mr_add_mem(mr,..). In the implementation of\nsiw_mr_add_mem(), mem is assigned to mr->mem and then mem is freed via\nkfree(mem) if xa_alloc_cyclic() failed. Here, mr->mem still point to a\nfreed object. After, the execution continue up to the err_out branch of\nsiw_alloc_mr, and the freed mr->mem is used in siw_mr_drop_mem(mr).\nMy patch moves \"mr->mem = mem\" behind the if (xa_alloc_cyclic(..)<0) {}\nsection, to avoid the uaf.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.1,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2021/CVE-2021-47012.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024022831-CVE-2021-47012-73c5@gregkh/T/#u",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-47012",
      "https://www.cve.org/CVERecord?id=CVE-2021-47012"
    ],
    "title": "kernel: RDMA/siw: Fix a use after free in siw_alloc_mr",
    "updated": "2024-02-28T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-416"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-02-28T08:13:30.284000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/siw: Fix a use after free in siw_alloc_mr\n\nOur code analyzer reported a UAF.\n\nIn siw_alloc_mr(), it calls siw_mr_add_mem(mr,..). In the implementation of\nsiw_mr_add_mem(), mem is assigned to mr->mem and then mem is freed via\nkfree(mem) if xa_alloc_cyclic() failed. Here, mr->mem still point to a\nfreed object. After, the execution continue up to the err_out branch of\nsiw_alloc_mr, and the freed mr->mem is used in siw_mr_drop_mem(mr).\n\nMy patch moves \"mr->mem = mem\" behind the if (xa_alloc_cyclic(..)<0) {}\nsection, to avoid the uaf.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/3093ee182f01689b89e9f8797b321603e5de4f63",
      "https://git.kernel.org/stable/c/30b9e92d0b5e5d5dc1101ab856c17009537cbca4",
      "https://git.kernel.org/stable/c/3e22b88e02c194f6c80867abfef5cc09383461f4",
      "https://git.kernel.org/stable/c/608a4b90ece039940e9425ee2b39c8beff27e00c",
      "https://git.kernel.org/stable/c/ad9ce7188432650469a6c7625bf479f5ed0b6155"
    ],
    "title": "RDMA/siw: Fix a use after free in siw_alloc_mr",
    "updated": "2024-08-04T05:24:39.841000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2021/47xxx/CVE-2021-47012.json",
    "weaknesses": []
  }
}