{
  "cve": "CVE-2018-1121",
  "mitre": {
    "cpes": [],
    "created": "2018-06-13T20:00:00+00:00",
    "description": "procps-ng, procps is vulnerable to a process hiding through race condition. Since the kernel's proc_pid_readdir() returns PID entries in ascending numeric order, a process occupying a high PID can use inotify events to determine when the process list is being scanned, and fork/exec to obtain a lower PID, thus avoiding enumeration. An unprivileged attacker can hide a process from procps-ng's utilities by exploiting a race condition in reading /proc/PID entries. This vulnerability affects procps and procps-ng up to version 3.3.15, newer versions might be affected also.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 3.9,
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:L"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2018/1xxx/CVE-2018-1121.json",
    "references": [
      "http://seclists.org/oss-sec/2018/q2/122",
      "http://www.securityfocus.com/bid/104214",
      "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1121",
      "https://www.exploit-db.com/exploits/44806/",
      "https://www.qualys.com/2018/05/17/procps-ng-audit-report-advisory.txt"
    ],
    "title": null,
    "updated": "2024-08-05T03:51:48.742000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-367"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:procps_project:procps:*:*:*:*:*:*:*:*"
    ],
    "created": "2018-06-13T20:29:00.337000+00:00",
    "description": "procps-ng, procps is vulnerable to a process hiding through race condition. Since the kernel's proc_pid_readdir() returns PID entries in ascending numeric order, a process occupying a high PID can use inotify events to determine when the process list is being scanned, and fork/exec to obtain a lower PID, thus avoiding enumeration. An unprivileged attacker can hide a process from procps-ng's utilities by exploiting a race condition in reading /proc/PID entries. This vulnerability affects procps and procps-ng up to version 3.3.15, newer versions might be affected also.",
    "metrics": {
      "cvssV2_0": {
        "score": 4.3,
        "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      },
      "cvssV3_0": {
        "score": 5.9,
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2018/CVE-2018-1121.json",
    "references": [
      "http://seclists.org/oss-sec/2018/q2/122",
      "http://www.securityfocus.com/bid/104214",
      "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1121",
      "https://www.exploit-db.com/exploits/44806/",
      "https://www.qualys.com/2018/05/17/procps-ng-audit-report-advisory.txt"
    ],
    "title": null,
    "updated": "2020-06-30T16:15:14.393000+00:00",
    "vendors": [
      "procps_project",
      "procps_project$PRODUCT$procps"
    ],
    "weaknesses": [
      "CWE-362",
      "CWE-367"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:procps_project:procps:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2018-05-17T17:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "procps-ng, procps is vulnerable to a process hiding through race condition. Since the kernel's proc_pid_readdir() returns PID entries in ascending numeric order, a process occupying a high PID can use inotify events to determine when the process list is being scanned, and fork/exec to obtain a lower PID, thus avoiding enumeration. An unprivileged attacker can hide a process from procps-ng's utilities by exploiting a race condition in reading /proc/PID entries. This vulnerability affects procps and procps-ng up to version 3.3.15, newer versions might be affected also.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.3,
          "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 3.9,
          "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:L"
        },
        "provider": "mitre"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://seclists.org/oss-sec/2018/q2/122",
        "http://www.securityfocus.com/bid/104214",
        "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1121",
        "https://nvd.nist.gov/vuln/detail/CVE-2018-1121",
        "https://www.cve.org/CVERecord?id=CVE-2018-1121",
        "https://www.exploit-db.com/exploits/44806/",
        "https://www.qualys.com/2018/05/17/procps-ng-audit-report-advisory.txt"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "procps: process hiding through race condition enumerating /proc",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-05T03:51:48.742000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "procps_project",
        "procps_project$PRODUCT$procps"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-362",
        "CWE-367"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2018-05-17T17:00:00+00:00",
    "description": "procps-ng, procps is vulnerable to a process hiding through race condition. Since the kernel's proc_pid_readdir() returns PID entries in ascending numeric order, a process occupying a high PID can use inotify events to determine when the process list is being scanned, and fork/exec to obtain a lower PID, thus avoiding enumeration. An unprivileged attacker can hide a process from procps-ng's utilities by exploiting a race condition in reading /proc/PID entries. This vulnerability affects procps and procps-ng up to version 3.3.15, newer versions might be affected also.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 3.9,
        "vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:L"
      },
      "cvssV3_1": {},
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2018/CVE-2018-1121.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2018-1121",
      "https://www.cve.org/CVERecord?id=CVE-2018-1121",
      "https://www.qualys.com/2018/05/17/procps-ng-audit-report-advisory.txt"
    ],
    "title": "procps: process hiding through race condition enumerating /proc",
    "updated": "2018-05-17T17:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-367"
    ]
  }
}