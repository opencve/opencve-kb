{
  "cve": "CVE-2022-31183",
  "mitre": {
    "cpes": [],
    "created": "2022-08-01T19:50:11+00:00",
    "description": "fs2 is a compositional, streaming I/O library for Scala. When establishing a server-mode `TLSSocket` using `fs2-io` on Node.js, the parameter `requestCert = true` is ignored, peer certificate verification is skipped, and the connection proceeds. The vulnerability is limited to: 1. `fs2-io` running on Node.js. The JVM TLS implementation is completely independent. 2. `TLSSocket`s in server-mode. Client-mode `TLSSocket`s are implemented via a different API. 3. mTLS as enabled via `requestCert = true` in `TLSParameters`. The default setting is `false` for server-mode `TLSSocket`s. It was introduced with the initial Node.js implementation of fs2-io in 3.1.0. A patch is released in v3.2.11. The requestCert = true parameter is respected and the peer certificate is verified. If verification fails, a SSLException is raised. If using an unpatched version on Node.js, do not use a server-mode TLSSocket with requestCert = true to establish a mTLS connection.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 9.1,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/31xxx/CVE-2022-31183.json",
    "references": [
      "https://github.com/nodejs/node/issues/43994",
      "https://github.com/typelevel/fs2/commit/659824395826a314e0a4331535dbf1ef8bef8207",
      "https://github.com/typelevel/fs2/security/advisories/GHSA-2cpx-6pqp-wf35"
    ],
    "title": "mTLS client verification is skipped in fs2 on Node.js",
    "updated": "2024-08-03T07:11:39.653000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-295"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:typelevel:fs2:*:*:*:*:*:*:*:*"
    ],
    "created": "2022-08-01T20:15:08.410000+00:00",
    "description": "fs2 is a compositional, streaming I/O library for Scala. When establishing a server-mode `TLSSocket` using `fs2-io` on Node.js, the parameter `requestCert = true` is ignored, peer certificate verification is skipped, and the connection proceeds. The vulnerability is limited to: 1. `fs2-io` running on Node.js. The JVM TLS implementation is completely independent. 2. `TLSSocket`s in server-mode. Client-mode `TLSSocket`s are implemented via a different API. 3. mTLS as enabled via `requestCert = true` in `TLSParameters`. The default setting is `false` for server-mode `TLSSocket`s. It was introduced with the initial Node.js implementation of fs2-io in 3.1.0. A patch is released in v3.2.11. The requestCert = true parameter is respected and the peer certificate is verified. If verification fails, a SSLException is raised. If using an unpatched version on Node.js, do not use a server-mode TLSSocket with requestCert = true to establish a mTLS connection.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 9.8,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-31183.json",
    "references": [
      "https://github.com/nodejs/node/issues/43994",
      "https://github.com/typelevel/fs2/commit/659824395826a314e0a4331535dbf1ef8bef8207",
      "https://github.com/typelevel/fs2/security/advisories/GHSA-2cpx-6pqp-wf35"
    ],
    "title": null,
    "updated": "2022-08-09T19:38:00.897000+00:00",
    "vendors": [
      "typelevel",
      "typelevel$PRODUCT$fs2"
    ],
    "weaknesses": [
      "CWE-295"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:typelevel:fs2:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2022-08-01T19:50:11+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "fs2 is a compositional, streaming I/O library for Scala. When establishing a server-mode `TLSSocket` using `fs2-io` on Node.js, the parameter `requestCert = true` is ignored, peer certificate verification is skipped, and the connection proceeds. The vulnerability is limited to: 1. `fs2-io` running on Node.js. The JVM TLS implementation is completely independent. 2. `TLSSocket`s in server-mode. Client-mode `TLSSocket`s are implemented via a different API. 3. mTLS as enabled via `requestCert = true` in `TLSParameters`. The default setting is `false` for server-mode `TLSSocket`s. It was introduced with the initial Node.js implementation of fs2-io in 3.1.0. A patch is released in v3.2.11. The requestCert = true parameter is respected and the peer certificate is verified. If verification fails, a SSLException is raised. If using an unpatched version on Node.js, do not use a server-mode TLSSocket with requestCert = true to establish a mTLS connection.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 9.1,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/nodejs/node/issues/43994",
        "https://github.com/typelevel/fs2/commit/659824395826a314e0a4331535dbf1ef8bef8207",
        "https://github.com/typelevel/fs2/security/advisories/GHSA-2cpx-6pqp-wf35"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "mTLS client verification is skipped in fs2 on Node.js",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T07:11:39.653000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "typelevel",
        "typelevel$PRODUCT$fs2"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-295"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}