{
  "cve": "CVE-2024-42235",
  "mitre": {
    "cpes": [],
    "created": "2024-08-07T15:14:25.070000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/mm: Add NULL pointer check to crst_table_free() base_crst_free()\n\ncrst_table_free() used to work with NULL pointers before the conversion\nto ptdescs.  Since crst_table_free() can be called with a NULL pointer\n(error handling in crst_table_upgrade() add an explicit check.\n\nAlso add the same check to base_crst_free() for consistency reasons.\n\nIn real life this should not happen, since order two GFP_KERNEL\nallocations will not fail, unless FAIL_PAGE_ALLOC is enabled and used.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/42xxx/CVE-2024-42235.json",
    "references": [
      "https://git.kernel.org/stable/c/794fa52b94637d6b2e8c9474fbe3983af5c9f046",
      "https://git.kernel.org/stable/c/b5efb63acf7bddaf20eacfcac654c25c446eabe8",
      "https://git.kernel.org/stable/c/f80bd8bb6f380bc265834c46058d38b34174813e"
    ],
    "title": "s390/mm: Add NULL pointer check to crst_table_free() base_crst_free()",
    "updated": "2024-08-07T15:14:25.070000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-08-07T16:15:46.460000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/mm: Add NULL pointer check to crst_table_free() base_crst_free()\n\ncrst_table_free() used to work with NULL pointers before the conversion\nto ptdescs.  Since crst_table_free() can be called with a NULL pointer\n(error handling in crst_table_upgrade() add an explicit check.\n\nAlso add the same check to base_crst_free() for consistency reasons.\n\nIn real life this should not happen, since order two GFP_KERNEL\nallocations will not fail, unless FAIL_PAGE_ALLOC is enabled and used.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-42235.json",
    "references": [
      "https://git.kernel.org/stable/c/794fa52b94637d6b2e8c9474fbe3983af5c9f046",
      "https://git.kernel.org/stable/c/b5efb63acf7bddaf20eacfcac654c25c446eabe8",
      "https://git.kernel.org/stable/c/f80bd8bb6f380bc265834c46058d38b34174813e"
    ],
    "title": null,
    "updated": "2024-08-08T14:55:16.533000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-476"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-07T15:30:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/mm: Add NULL pointer check to crst_table_free() base_crst_free()\n\ncrst_table_free() used to work with NULL pointers before the conversion\nto ptdescs.  Since crst_table_free() can be called with a NULL pointer\n(error handling in crst_table_upgrade() add an explicit check.\n\nAlso add the same check to base_crst_free() for consistency reasons.\n\nIn real life this should not happen, since order two GFP_KERNEL\nallocations will not fail, unless FAIL_PAGE_ALLOC is enabled and used.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "s390/mm: Add NULL pointer check to crst_table_free() base_crst_free()",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/794fa52b94637d6b2e8c9474fbe3983af5c9f046",
                "https://git.kernel.org/stable/c/b5efb63acf7bddaf20eacfcac654c25c446eabe8",
                "https://git.kernel.org/stable/c/f80bd8bb6f380bc265834c46058d38b34174813e"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "fd1b9bb8-44f3-433e-8198-3974303b24a5"
      },
      {
        "created": "2024-08-08T15:15:00+00:00",
        "data": [
          {
            "details": [
              "linux",
              "linux$PRODUCT$linux_kernel"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "CWE-476"
              ],
              "removed": []
            },
            "type": "weaknesses"
          },
          {
            "details": {
              "added": [
                "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "linux",
                "linux$PRODUCT$linux_kernel"
              ],
              "removed": []
            },
            "type": "vendors"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "c63a497c-f2cb-4b3e-af25-e08299ba2a8c"
      },
      {
        "created": "2024-08-08T21:30:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024080740-CVE-2024-42235-efae@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2024-42235",
                "https://www.cve.org/CVERecord?id=CVE-2024-42235"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {},
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Low",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "053ee81c-be24-4174-aec1-1c9c30e64025"
      },
      {
        "created": "2024-08-16T18:45:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "CWE-99"
              ],
              "removed": []
            },
            "type": "weaknesses"
          }
        ],
        "id": "c22e4cfe-0516-4c1a-adab-810427b45d1e"
      },
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "8e82914b-6443-4742-ad78-4ed3c1ae79d6"
      }
    ],
    "cpes": {
      "data": [
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2024-08-07T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/mm: Add NULL pointer check to crst_table_free() base_crst_free()\n\ncrst_table_free() used to work with NULL pointers before the conversion\nto ptdescs.  Since crst_table_free() can be called with a NULL pointer\n(error handling in crst_table_upgrade() add an explicit check.\n\nAlso add the same check to base_crst_free() for consistency reasons.\n\nIn real life this should not happen, since order two GFP_KERNEL\nallocations will not fail, unless FAIL_PAGE_ALLOC is enabled and used.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/794fa52b94637d6b2e8c9474fbe3983af5c9f046",
        "https://git.kernel.org/stable/c/b5efb63acf7bddaf20eacfcac654c25c446eabe8",
        "https://git.kernel.org/stable/c/f80bd8bb6f380bc265834c46058d38b34174813e",
        "https://lore.kernel.org/linux-cve-announce/2024080740-CVE-2024-42235-efae@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-42235",
        "https://www.cve.org/CVERecord?id=CVE-2024-42235"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "s390/mm: Add NULL pointer check to crst_table_free() base_crst_free()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-11T12:42:24.295000+00:00",
      "provider": "vulnrichment"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-476",
        "CWE-99"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-08-07T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ns390/mm: Add NULL pointer check to crst_table_free() base_crst_free()\ncrst_table_free() used to work with NULL pointers before the conversion\nto ptdescs.  Since crst_table_free() can be called with a NULL pointer\n(error handling in crst_table_upgrade() add an explicit check.\nAlso add the same check to base_crst_free() for consistency reasons.\nIn real life this should not happen, since order two GFP_KERNEL\nallocations will not fail, unless FAIL_PAGE_ALLOC is enabled and used.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-42235.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024080740-CVE-2024-42235-efae@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-42235",
      "https://www.cve.org/CVERecord?id=CVE-2024-42235"
    ],
    "title": "kernel: s390/mm: Add NULL pointer check to crst_table_free() base_crst_free()",
    "updated": "2024-08-07T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-99"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-08-07T15:14:25.070000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/mm: Add NULL pointer check to crst_table_free() base_crst_free()\n\ncrst_table_free() used to work with NULL pointers before the conversion\nto ptdescs.  Since crst_table_free() can be called with a NULL pointer\n(error handling in crst_table_upgrade() add an explicit check.\n\nAlso add the same check to base_crst_free() for consistency reasons.\n\nIn real life this should not happen, since order two GFP_KERNEL\nallocations will not fail, unless FAIL_PAGE_ALLOC is enabled and used.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "s390/mm: Add NULL pointer check to crst_table_free() base_crst_free()",
    "updated": "2024-09-11T12:42:24.295000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/42xxx/CVE-2024-42235.json",
    "weaknesses": []
  }
}