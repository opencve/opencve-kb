{
  "cve": "CVE-2021-47200",
  "mitre": {
    "cpes": [],
    "created": "2024-04-10T18:56:35.152000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/prime: Fix use after free in mmap with drm_gem_ttm_mmap\n\ndrm_gem_ttm_mmap() drops a reference to the gem object on success. If\nthe gem object's refcount == 1 on entry to drm_gem_prime_mmap(), that\ndrop will free the gem object, and the subsequent drm_gem_object_get()\nwill be a UAF. Fix by grabbing a reference before calling the mmap\nhelper.\n\nThis issue was forseen when the reference dropping was adding in\ncommit 9786b65bc61ac (\"drm/ttm: fix mmap refcounting\"):\n  \"For that to work properly the drm_gem_object_get() call in\n  drm_gem_ttm_mmap() must be moved so it happens before calling\n  obj->funcs->mmap(), otherwise the gem refcount would go down\n  to zero.\"",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/47xxx/CVE-2021-47200.json",
    "references": [
      "https://git.kernel.org/stable/c/4f8e469a2384dfa4047145b0093126462cbb6dc0",
      "https://git.kernel.org/stable/c/8244a3bc27b3efd057da154b8d7e414670d5044f"
    ],
    "title": "drm/prime: Fix use after free in mmap with drm_gem_ttm_mmap",
    "updated": "2024-08-04T05:32:07.374000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-04-10T19:15:48.077000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/prime: Fix use after free in mmap with drm_gem_ttm_mmap\n\ndrm_gem_ttm_mmap() drops a reference to the gem object on success. If\nthe gem object's refcount == 1 on entry to drm_gem_prime_mmap(), that\ndrop will free the gem object, and the subsequent drm_gem_object_get()\nwill be a UAF. Fix by grabbing a reference before calling the mmap\nhelper.\n\nThis issue was forseen when the reference dropping was adding in\ncommit 9786b65bc61ac (\"drm/ttm: fix mmap refcounting\"):\n  \"For that to work properly the drm_gem_object_get() call in\n  drm_gem_ttm_mmap() must be moved so it happens before calling\n  obj->funcs->mmap(), otherwise the gem refcount would go down\n  to zero.\"",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-47200.json",
    "references": [
      "https://git.kernel.org/stable/c/4f8e469a2384dfa4047145b0093126462cbb6dc0",
      "https://git.kernel.org/stable/c/8244a3bc27b3efd057da154b8d7e414670d5044f"
    ],
    "title": null,
    "updated": "2024-04-10T19:49:51.183000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-04-10T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/prime: Fix use after free in mmap with drm_gem_ttm_mmap\n\ndrm_gem_ttm_mmap() drops a reference to the gem object on success. If\nthe gem object's refcount == 1 on entry to drm_gem_prime_mmap(), that\ndrop will free the gem object, and the subsequent drm_gem_object_get()\nwill be a UAF. Fix by grabbing a reference before calling the mmap\nhelper.\n\nThis issue was forseen when the reference dropping was adding in\ncommit 9786b65bc61ac (\"drm/ttm: fix mmap refcounting\"):\n  \"For that to work properly the drm_gem_object_get() call in\n  drm_gem_ttm_mmap() must be moved so it happens before calling\n  obj->funcs->mmap(), otherwise the gem refcount would go down\n  to zero.\"",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.7,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/4f8e469a2384dfa4047145b0093126462cbb6dc0",
        "https://git.kernel.org/stable/c/8244a3bc27b3efd057da154b8d7e414670d5044f",
        "https://lore.kernel.org/linux-cve-announce/2024041037-CVE-2021-47200-ae55@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-47200",
        "https://www.cve.org/CVERecord?id=CVE-2021-47200"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "drm/prime: Fix use after free in mmap with drm_gem_ttm_mmap",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T05:32:07.374000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-416"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-04-10T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/prime: Fix use after free in mmap with drm_gem_ttm_mmap\ndrm_gem_ttm_mmap() drops a reference to the gem object on success. If\nthe gem object's refcount == 1 on entry to drm_gem_prime_mmap(), that\ndrop will free the gem object, and the subsequent drm_gem_object_get()\nwill be a UAF. Fix by grabbing a reference before calling the mmap\nhelper.\nThis issue was forseen when the reference dropping was adding in\ncommit 9786b65bc61ac (\"drm/ttm: fix mmap refcounting\"):\n\"For that to work properly the drm_gem_object_get() call in\ndrm_gem_ttm_mmap() must be moved so it happens before calling\nobj->funcs->mmap(), otherwise the gem refcount would go down\nto zero.\"",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.7,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2021/CVE-2021-47200.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024041037-CVE-2021-47200-ae55@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-47200",
      "https://www.cve.org/CVERecord?id=CVE-2021-47200"
    ],
    "title": "kernel: drm/prime: Fix use after free in mmap with drm_gem_ttm_mmap",
    "updated": "2024-04-10T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-416"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-04-10T18:56:35.152000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/prime: Fix use after free in mmap with drm_gem_ttm_mmap\n\ndrm_gem_ttm_mmap() drops a reference to the gem object on success. If\nthe gem object's refcount == 1 on entry to drm_gem_prime_mmap(), that\ndrop will free the gem object, and the subsequent drm_gem_object_get()\nwill be a UAF. Fix by grabbing a reference before calling the mmap\nhelper.\n\nThis issue was forseen when the reference dropping was adding in\ncommit 9786b65bc61ac (\"drm/ttm: fix mmap refcounting\"):\n  \"For that to work properly the drm_gem_object_get() call in\n  drm_gem_ttm_mmap() must be moved so it happens before calling\n  obj->funcs->mmap(), otherwise the gem refcount would go down\n  to zero.\"",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/4f8e469a2384dfa4047145b0093126462cbb6dc0",
      "https://git.kernel.org/stable/c/8244a3bc27b3efd057da154b8d7e414670d5044f"
    ],
    "title": "drm/prime: Fix use after free in mmap with drm_gem_ttm_mmap",
    "updated": "2024-08-04T05:32:07.374000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2021/47xxx/CVE-2021-47200.json",
    "weaknesses": []
  }
}