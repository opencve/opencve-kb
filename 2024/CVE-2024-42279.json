{
  "cve": "CVE-2024-42279",
  "mitre": {
    "cpes": [],
    "created": "2024-08-17T09:08:46.829000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer\n\nWhile transmitting with rx_len == 0, the RX FIFO is not going to be\nemptied in the interrupt handler. A subsequent transfer could then\nread crap from the previous transfer out of the RX FIFO into the\nstart RX buffer. The core provides a register that will empty the RX and\nTX FIFOs, so do that before each transfer.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/42xxx/CVE-2024-42279.json",
    "references": [
      "https://git.kernel.org/stable/c/3feda3677e8bbe833c3a62a4091377a08f015b80",
      "https://git.kernel.org/stable/c/45e03d35229b680b79dfea1103a1f2f07d0b5d75",
      "https://git.kernel.org/stable/c/9cf71eb0faef4bff01df4264841b8465382d7927"
    ],
    "title": "spi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer",
    "updated": "2024-08-17T09:08:46.829000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-08-17T09:15:08.880000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer\n\nWhile transmitting with rx_len == 0, the RX FIFO is not going to be\nemptied in the interrupt handler. A subsequent transfer could then\nread crap from the previous transfer out of the RX FIFO into the\nstart RX buffer. The core provides a register that will empty the RX and\nTX FIFOs, so do that before each transfer.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-42279.json",
    "references": [
      "https://git.kernel.org/stable/c/3feda3677e8bbe833c3a62a4091377a08f015b80",
      "https://git.kernel.org/stable/c/45e03d35229b680b79dfea1103a1f2f07d0b5d75",
      "https://git.kernel.org/stable/c/9cf71eb0faef4bff01df4264841b8465382d7927"
    ],
    "title": null,
    "updated": "2024-08-19T12:59:59.177000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-17T09:15:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer\n\nWhile transmitting with rx_len == 0, the RX FIFO is not going to be\nemptied in the interrupt handler. A subsequent transfer could then\nread crap from the previous transfer out of the RX FIFO into the\nstart RX buffer. The core provides a register that will empty the RX and\nTX FIFOs, so do that before each transfer.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "spi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/3feda3677e8bbe833c3a62a4091377a08f015b80",
                "https://git.kernel.org/stable/c/45e03d35229b680b79dfea1103a1f2f07d0b5d75",
                "https://git.kernel.org/stable/c/9cf71eb0faef4bff01df4264841b8465382d7927"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "271ac184-2e85-4283-bad4-2718c55d6ee4"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-08-17T09:08:46.829000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer\n\nWhile transmitting with rx_len == 0, the RX FIFO is not going to be\nemptied in the interrupt handler. A subsequent transfer could then\nread crap from the previous transfer out of the RX FIFO into the\nstart RX buffer. The core provides a register that will empty the RX and\nTX FIFOs, so do that before each transfer.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/3feda3677e8bbe833c3a62a4091377a08f015b80",
        "https://git.kernel.org/stable/c/45e03d35229b680b79dfea1103a1f2f07d0b5d75",
        "https://git.kernel.org/stable/c/9cf71eb0faef4bff01df4264841b8465382d7927"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "spi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-19T12:59:59.177000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  }
}