{
  "cve": "CVE-2020-15133",
  "mitre": {
    "cpes": [],
    "created": "2020-07-31T17:40:21+00:00",
    "description": "In faye-websocket before version 0.11.0, there is a lack of certification validation in TLS handshakes. The `Faye::WebSocket::Client` class uses the `EM::Connection#start_tls` method in EventMachine to implement the TLS handshake whenever a `wss:` URL is used for the connection. This method does not implement certificate verification by default, meaning that it does not check that the server presents a valid and trusted TLS certificate for the expected hostname. That means that any `wss:` connection made using this library is vulnerable to a man-in-the-middle attack, since it does not confirm the identity of the server it is connected to. For further background information on this issue, please see the referenced GitHub Advisory. Upgrading `faye-websocket` to v0.11.0 is recommended.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2020/15xxx/CVE-2020-15133.json",
    "references": [
      "https://blog.jcoglan.com/2020/07/31/missing-tls-verification-in-faye/",
      "https://github.com/faye/faye-websocket-ruby/security/advisories/GHSA-2v5c-755p-p4gv"
    ],
    "title": "Missing TLS certificate verification in Faye Websocket",
    "updated": "2024-08-04T13:08:22.247000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-295"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:faye-websocket_project:faye-websocket:*:*:*:*:*:*:*:*"
    ],
    "created": "2020-07-31T18:15:14.473000+00:00",
    "description": "In faye-websocket before version 0.11.0, there is a lack of certification validation in TLS handshakes. The `Faye::WebSocket::Client` class uses the `EM::Connection#start_tls` method in EventMachine to implement the TLS handshake whenever a `wss:` URL is used for the connection. This method does not implement certificate verification by default, meaning that it does not check that the server presents a valid and trusted TLS certificate for the expected hostname. That means that any `wss:` connection made using this library is vulnerable to a man-in-the-middle attack, since it does not confirm the identity of the server it is connected to. For further background information on this issue, please see the referenced GitHub Advisory. Upgrading `faye-websocket` to v0.11.0 is recommended.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.8,
        "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 8.7,
        "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2020/CVE-2020-15133.json",
    "references": [
      "https://blog.jcoglan.com/2020/07/31/missing-tls-verification-in-faye/",
      "https://github.com/faye/faye-websocket-ruby/security/advisories/GHSA-2v5c-755p-p4gv"
    ],
    "title": null,
    "updated": "2021-11-18T18:28:56.893000+00:00",
    "vendors": [
      "faye-websocket_project",
      "faye-websocket_project$PRODUCT$faye-websocket"
    ],
    "weaknesses": [
      "CWE-295"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:faye-websocket_project:faye-websocket:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2020-07-31T17:40:21+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "In faye-websocket before version 0.11.0, there is a lack of certification validation in TLS handshakes. The `Faye::WebSocket::Client` class uses the `EM::Connection#start_tls` method in EventMachine to implement the TLS handshake whenever a `wss:` URL is used for the connection. This method does not implement certificate verification by default, meaning that it does not check that the server presents a valid and trusted TLS certificate for the expected hostname. That means that any `wss:` connection made using this library is vulnerable to a man-in-the-middle attack, since it does not confirm the identity of the server it is connected to. For further background information on this issue, please see the referenced GitHub Advisory. Upgrading `faye-websocket` to v0.11.0 is recommended.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.8,
          "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 8,
          "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://blog.jcoglan.com/2020/07/31/missing-tls-verification-in-faye/",
        "https://github.com/faye/faye-websocket-ruby/security/advisories/GHSA-2v5c-755p-p4gv"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Missing TLS certificate verification in Faye Websocket",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T13:08:22.247000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "faye-websocket_project",
        "faye-websocket_project$PRODUCT$faye-websocket"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-295"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}