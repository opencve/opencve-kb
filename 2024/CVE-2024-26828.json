{
  "cve": "CVE-2024-26828",
  "mitre": {
    "cpes": [],
    "created": "2024-04-17T09:43:52.995000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix underflow in parse_server_interfaces()\n\nIn this loop, we step through the buffer and after each item we check\nif the size_left is greater than the minimum size we need.  However,\nthe problem is that \"bytes_left\" is type ssize_t while sizeof() is type\nsize_t.  That means that because of type promotion, the comparison is\ndone as an unsigned and if we have negative bytes left the loop\ncontinues instead of ending.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/26xxx/CVE-2024-26828.json",
    "references": [
      "https://git.kernel.org/stable/c/7190353835b4a219abb70f90b06cdcae97f11512",
      "https://git.kernel.org/stable/c/cffe487026be13eaf37ea28b783d9638ab147204",
      "https://git.kernel.org/stable/c/df2af9fdbc4ddde18a3371c4ca1a86596e8be301",
      "https://git.kernel.org/stable/c/f7ff1c89fb6e9610d2b01c1821727729e6609308"
    ],
    "title": "cifs: fix underflow in parse_server_interfaces()",
    "updated": "2024-08-02T00:14:13.603000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-04-17T10:15:09.300000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix underflow in parse_server_interfaces()\n\nIn this loop, we step through the buffer and after each item we check\nif the size_left is greater than the minimum size we need.  However,\nthe problem is that \"bytes_left\" is type ssize_t while sizeof() is type\nsize_t.  That means that because of type promotion, the comparison is\ndone as an unsigned and if we have negative bytes left the loop\ncontinues instead of ending.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-26828.json",
    "references": [
      "https://git.kernel.org/stable/c/7190353835b4a219abb70f90b06cdcae97f11512",
      "https://git.kernel.org/stable/c/cffe487026be13eaf37ea28b783d9638ab147204",
      "https://git.kernel.org/stable/c/df2af9fdbc4ddde18a3371c4ca1a86596e8be301",
      "https://git.kernel.org/stable/c/f7ff1c89fb6e9610d2b01c1821727729e6609308"
    ],
    "title": null,
    "updated": "2024-04-17T12:48:07.510000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-16T18:45:00+00:00",
        "data": [
          {
            "details": [
              "redhat$PRODUCT$enterprise_linux"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "cpe:/a:redhat:enterprise_linux:9",
                "cpe:/o:redhat:enterprise_linux:9"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "redhat$PRODUCT$enterprise_linux"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "4020ec59-6d34-4919-8ec8-ed9dd9fc6320"
      }
    ],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_linux:9",
        "cpe:/a:redhat:rhel_eus:9.2",
        "cpe:/a:redhat:rhel_eus:9.2::nfv",
        "cpe:/o:redhat:enterprise_linux:9"
      ],
      "providers": [
        "redhat"
      ]
    },
    "created": {
      "data": "2024-04-17T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix underflow in parse_server_interfaces()\n\nIn this loop, we step through the buffer and after each item we check\nif the size_left is greater than the minimum size we need.  However,\nthe problem is that \"bytes_left\" is type ssize_t while sizeof() is type\nsize_t.  That means that because of type promotion, the comparison is\ndone as an unsigned and if we have negative bytes left the loop\ncontinues instead of ending.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.7,
          "vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/7190353835b4a219abb70f90b06cdcae97f11512",
        "https://git.kernel.org/stable/c/cffe487026be13eaf37ea28b783d9638ab147204",
        "https://git.kernel.org/stable/c/df2af9fdbc4ddde18a3371c4ca1a86596e8be301",
        "https://git.kernel.org/stable/c/f7ff1c89fb6e9610d2b01c1821727729e6609308",
        "https://lore.kernel.org/linux-cve-announce/2024041703-CVE-2024-26828-b2be@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-26828",
        "https://www.cve.org/CVERecord?id=CVE-2024-26828"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "cifs: fix underflow in parse_server_interfaces()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T00:14:13.603000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$enterprise_linux",
        "redhat$PRODUCT$rhel_eus"
      ],
      "providers": [
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-191"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_linux:9",
      "cpe:/a:redhat:rhel_eus:9.2",
      "cpe:/a:redhat:rhel_eus:9.2::nfv",
      "cpe:/o:redhat:enterprise_linux:9"
    ],
    "created": "2024-04-17T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ncifs: fix underflow in parse_server_interfaces()\nIn this loop, we step through the buffer and after each item we check\nif the size_left is greater than the minimum size we need.  However,\nthe problem is that \"bytes_left\" is type ssize_t while sizeof() is type\nsize_t.  That means that because of type promotion, the comparison is\ndone as an unsigned and if we have negative bytes left the loop\ncontinues instead of ending.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.7,
        "vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-26828.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024041703-CVE-2024-26828-b2be@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-26828",
      "https://www.cve.org/CVERecord?id=CVE-2024-26828"
    ],
    "title": "kernel: cifs: fix underflow in parse_server_interfaces()",
    "updated": "2024-04-17T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux",
      "redhat$PRODUCT$rhel_eus"
    ],
    "weaknesses": [
      "CWE-191"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-04-17T09:43:52.995000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix underflow in parse_server_interfaces()\n\nIn this loop, we step through the buffer and after each item we check\nif the size_left is greater than the minimum size we need.  However,\nthe problem is that \"bytes_left\" is type ssize_t while sizeof() is type\nsize_t.  That means that because of type promotion, the comparison is\ndone as an unsigned and if we have negative bytes left the loop\ncontinues instead of ending.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/7190353835b4a219abb70f90b06cdcae97f11512",
      "https://git.kernel.org/stable/c/cffe487026be13eaf37ea28b783d9638ab147204",
      "https://git.kernel.org/stable/c/df2af9fdbc4ddde18a3371c4ca1a86596e8be301",
      "https://git.kernel.org/stable/c/f7ff1c89fb6e9610d2b01c1821727729e6609308"
    ],
    "title": "cifs: fix underflow in parse_server_interfaces()",
    "updated": "2024-08-02T00:14:13.603000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/26xxx/CVE-2024-26828.json",
    "weaknesses": []
  }
}