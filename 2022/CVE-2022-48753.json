{
  "cve": "CVE-2022-48753",
  "mitre": {
    "cpes": [],
    "created": "2024-06-20T11:13:33.907000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix memory leak in disk_register_independent_access_ranges\n\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add()\n\n   If this function returns an error, kobject_put() must be called to\n   properly clean up the memory associated with the object.\n\nFix this issue by adding kobject_put().\nCallback function blk_ia_ranges_sysfs_release() in kobject_put()\ncan handle the pointer \"iars\" properly.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/48xxx/CVE-2022-48753.json",
    "references": [
      "https://git.kernel.org/stable/c/83114df32ae779df57e0af99a8ba6c3968b2ba3d",
      "https://git.kernel.org/stable/c/fe4214a07e0b53d2af711f57519e33739c5df23f"
    ],
    "title": "block: fix memory leak in disk_register_independent_access_ranges",
    "updated": "2024-08-03T15:25:00.895000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-06-20T12:15:13.480000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix memory leak in disk_register_independent_access_ranges\n\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add()\n\n   If this function returns an error, kobject_put() must be called to\n   properly clean up the memory associated with the object.\n\nFix this issue by adding kobject_put().\nCallback function blk_ia_ranges_sysfs_release() in kobject_put()\ncan handle the pointer \"iars\" properly.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-48753.json",
    "references": [
      "https://git.kernel.org/stable/c/83114df32ae779df57e0af99a8ba6c3968b2ba3d",
      "https://git.kernel.org/stable/c/fe4214a07e0b53d2af711f57519e33739c5df23f"
    ],
    "title": null,
    "updated": "2024-06-20T12:43:25.663000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-06-20T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix memory leak in disk_register_independent_access_ranges\n\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add()\n\n   If this function returns an error, kobject_put() must be called to\n   properly clean up the memory associated with the object.\n\nFix this issue by adding kobject_put().\nCallback function blk_ia_ranges_sysfs_release() in kobject_put()\ncan handle the pointer \"iars\" properly.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/83114df32ae779df57e0af99a8ba6c3968b2ba3d",
        "https://git.kernel.org/stable/c/fe4214a07e0b53d2af711f57519e33739c5df23f",
        "https://lore.kernel.org/linux-cve-announce/2024062006-CVE-2022-48753-38c0@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2022-48753",
        "https://www.cve.org/CVERecord?id=CVE-2022-48753"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "block: fix memory leak in disk_register_independent_access_ranges",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T15:25:00.895000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-06-20T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nblock: fix memory leak in disk_register_independent_access_ranges\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add()\nIf this function returns an error, kobject_put() must be called to\nproperly clean up the memory associated with the object.\nFix this issue by adding kobject_put().\nCallback function blk_ia_ranges_sysfs_release() in kobject_put()\ncan handle the pointer \"iars\" properly.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2022/CVE-2022-48753.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024062006-CVE-2022-48753-38c0@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2022-48753",
      "https://www.cve.org/CVERecord?id=CVE-2022-48753"
    ],
    "title": "kernel: block: fix memory leak in disk_register_independent_access_ranges",
    "updated": "2024-06-20T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-06-20T11:13:33.907000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix memory leak in disk_register_independent_access_ranges\n\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add()\n\n   If this function returns an error, kobject_put() must be called to\n   properly clean up the memory associated with the object.\n\nFix this issue by adding kobject_put().\nCallback function blk_ia_ranges_sysfs_release() in kobject_put()\ncan handle the pointer \"iars\" properly.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/83114df32ae779df57e0af99a8ba6c3968b2ba3d",
      "https://git.kernel.org/stable/c/fe4214a07e0b53d2af711f57519e33739c5df23f"
    ],
    "title": "block: fix memory leak in disk_register_independent_access_ranges",
    "updated": "2024-08-03T15:25:00.895000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2022/48xxx/CVE-2022-48753.json",
    "weaknesses": []
  }
}