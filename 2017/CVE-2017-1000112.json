{
  "cve": "CVE-2017-1000112",
  "mitre": {
    "cpes": [],
    "created": "2017-10-04T01:00:00+00:00",
    "description": "Linux kernel: Exploitable memory corruption due to UFO to non-UFO path switch. When building a UFO packet with MSG_MORE __ip_append_data() calls ip_ufo_append_data() to append. However in between two send() calls, the append path can be switched from UFO to non-UFO one, which leads to a memory corruption. In case UFO packet lengths exceeds MTU, copy = maxfraglen - skb->len becomes negative on the non-UFO path and the branch to allocate new skb is taken. This triggers fragmentation and computation of fraggap = skb_prev->len - maxfraglen. Fraggap can exceed MTU, causing copy = datalen - transhdrlen - fraggap to become negative. Subsequently skb_copy_and_csum_bits() writes out-of-bounds. A similar issue is present in IPv6 code. The bug was introduced in e89e9cf539a2 (\"[IPv4/IPv6]: UFO Scatter-gather approach\") on Oct 18 2005.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2017/1000xxx/CVE-2017-1000112.json",
    "references": [
      "http://seclists.org/oss-sec/2017/q3/277",
      "http://www.debian.org/security/2017/dsa-3981",
      "http://www.securityfocus.com/bid/100262",
      "http://www.securitytracker.com/id/1039162",
      "https://access.redhat.com/errata/RHSA-2017:2918",
      "https://access.redhat.com/errata/RHSA-2017:2930",
      "https://access.redhat.com/errata/RHSA-2017:2931",
      "https://access.redhat.com/errata/RHSA-2017:3200",
      "https://access.redhat.com/errata/RHSA-2019:1931",
      "https://access.redhat.com/errata/RHSA-2019:1932",
      "https://access.redhat.com/errata/RHSA-2019:4159",
      "https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112",
      "https://www.exploit-db.com/exploits/45147/"
    ],
    "title": null,
    "updated": "2024-08-05T21:53:06.785000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2017-10-05T01:29:04.477000+00:00",
    "description": "Linux kernel: Exploitable memory corruption due to UFO to non-UFO path switch. When building a UFO packet with MSG_MORE __ip_append_data() calls ip_ufo_append_data() to append. However in between two send() calls, the append path can be switched from UFO to non-UFO one, which leads to a memory corruption. In case UFO packet lengths exceeds MTU, copy = maxfraglen - skb->len becomes negative on the non-UFO path and the branch to allocate new skb is taken. This triggers fragmentation and computation of fraggap = skb_prev->len - maxfraglen. Fraggap can exceed MTU, causing copy = datalen - transhdrlen - fraggap to become negative. Subsequently skb_copy_and_csum_bits() writes out-of-bounds. A similar issue is present in IPv6 code. The bug was introduced in e89e9cf539a2 (\"[IPv4/IPv6]: UFO Scatter-gather approach\") on Oct 18 2005.",
    "metrics": {
      "cvssV2_0": {
        "score": 6.9,
        "vector": "AV:L/AC:M/Au:N/C:C/I:C/A:C"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.0,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2017/CVE-2017-1000112.json",
    "references": [
      "http://seclists.org/oss-sec/2017/q3/277",
      "http://www.debian.org/security/2017/dsa-3981",
      "http://www.securityfocus.com/bid/100262",
      "http://www.securitytracker.com/id/1039162",
      "https://access.redhat.com/errata/RHSA-2017:2918",
      "https://access.redhat.com/errata/RHSA-2017:2930",
      "https://access.redhat.com/errata/RHSA-2017:2931",
      "https://access.redhat.com/errata/RHSA-2017:3200",
      "https://access.redhat.com/errata/RHSA-2019:1931",
      "https://access.redhat.com/errata/RHSA-2019:1932",
      "https://access.redhat.com/errata/RHSA-2019:4159",
      "https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112",
      "https://www.exploit-db.com/exploits/45147/"
    ],
    "title": null,
    "updated": "2023-06-07T12:46:19.047000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-362"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_mrg:2:server:el6",
        "cpe:/a:redhat:rhel_extras_rt:7",
        "cpe:/o:redhat:enterprise_linux:6",
        "cpe:/o:redhat:enterprise_linux:7",
        "cpe:/o:redhat:rhel_aus:5.9",
        "cpe:/o:redhat:rhel_aus:7.3",
        "cpe:/o:redhat:rhel_e4s:7.3",
        "cpe:/o:redhat:rhel_els:5",
        "cpe:/o:redhat:rhel_tus:7.3",
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2017-08-10T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "Linux kernel: Exploitable memory corruption due to UFO to non-UFO path switch. When building a UFO packet with MSG_MORE __ip_append_data() calls ip_ufo_append_data() to append. However in between two send() calls, the append path can be switched from UFO to non-UFO one, which leads to a memory corruption. In case UFO packet lengths exceeds MTU, copy = maxfraglen - skb->len becomes negative on the non-UFO path and the branch to allocate new skb is taken. This triggers fragmentation and computation of fraggap = skb_prev->len - maxfraglen. Fraggap can exceed MTU, causing copy = datalen - transhdrlen - fraggap to become negative. Subsequently skb_copy_and_csum_bits() writes out-of-bounds. A similar issue is present in IPv6 code. The bug was introduced in e89e9cf539a2 (\"[IPv4/IPv6]: UFO Scatter-gather approach\") on Oct 18 2005.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 6.9,
          "vector": "AV:L/AC:M/Au:N/C:C/I:C/A:C"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 7.0,
          "vector": "CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "redhat"
      },
      "cvssV3_1": {
        "data": {
          "score": 7.0,
          "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Important",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://seclists.org/oss-sec/2017/q3/277",
        "http://www.debian.org/security/2017/dsa-3981",
        "http://www.securityfocus.com/bid/100262",
        "http://www.securitytracker.com/id/1039162",
        "https://access.redhat.com/errata/RHSA-2017:2918",
        "https://access.redhat.com/errata/RHSA-2017:2930",
        "https://access.redhat.com/errata/RHSA-2017:2931",
        "https://access.redhat.com/errata/RHSA-2017:3200",
        "https://access.redhat.com/errata/RHSA-2019:1931",
        "https://access.redhat.com/errata/RHSA-2019:1932",
        "https://access.redhat.com/errata/RHSA-2019:4159",
        "https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112",
        "https://nvd.nist.gov/vuln/detail/CVE-2017-1000112",
        "https://www.cve.org/CVERecord?id=CVE-2017-1000112",
        "https://www.exploit-db.com/exploits/45147/"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "kernel: Exploitable memory corruption due to UFO to non-UFO path switch",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-05T21:53:06.785000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel",
        "redhat",
        "redhat$PRODUCT$enterprise_linux",
        "redhat$PRODUCT$enterprise_mrg",
        "redhat$PRODUCT$rhel_aus",
        "redhat$PRODUCT$rhel_e4s",
        "redhat$PRODUCT$rhel_els",
        "redhat$PRODUCT$rhel_extras_rt",
        "redhat$PRODUCT$rhel_tus"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-122",
        "CWE-362"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_mrg:2:server:el6",
      "cpe:/a:redhat:rhel_extras_rt:7",
      "cpe:/o:redhat:enterprise_linux:6",
      "cpe:/o:redhat:enterprise_linux:7",
      "cpe:/o:redhat:rhel_aus:5.9",
      "cpe:/o:redhat:rhel_aus:7.3",
      "cpe:/o:redhat:rhel_e4s:7.3",
      "cpe:/o:redhat:rhel_els:5",
      "cpe:/o:redhat:rhel_tus:7.3"
    ],
    "created": "2017-08-10T00:00:00+00:00",
    "description": "Linux kernel: Exploitable memory corruption due to UFO to non-UFO path switch. When building a UFO packet with MSG_MORE __ip_append_data() calls ip_ufo_append_data() to append. However in between two send() calls, the append path can be switched from UFO to non-UFO one, which leads to a memory corruption. In case UFO packet lengths exceeds MTU, copy = maxfraglen - skb->len becomes negative on the non-UFO path and the branch to allocate new skb is taken. This triggers fragmentation and computation of fraggap = skb_prev->len - maxfraglen. Fraggap can exceed MTU, causing copy = datalen - transhdrlen - fraggap to become negative. Subsequently skb_copy_and_csum_bits() writes out-of-bounds. A similar issue is present in IPv6 code. The bug was introduced in e89e9cf539a2 (\"[IPv4/IPv6]: UFO Scatter-gather approach\") on Oct 18 2005.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 7.0,
        "vector": "CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV3_1": {},
      "threat_severity": "Important"
    },
    "redhat_repo_path": "2017/CVE-2017-1000112.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2017-1000112",
      "https://www.cve.org/CVERecord?id=CVE-2017-1000112"
    ],
    "title": "kernel: Exploitable memory corruption due to UFO to non-UFO path switch",
    "updated": "2017-08-10T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux",
      "redhat$PRODUCT$enterprise_mrg",
      "redhat$PRODUCT$rhel_aus",
      "redhat$PRODUCT$rhel_e4s",
      "redhat$PRODUCT$rhel_els",
      "redhat$PRODUCT$rhel_extras_rt",
      "redhat$PRODUCT$rhel_tus"
    ],
    "weaknesses": [
      "CWE-122"
    ]
  }
}