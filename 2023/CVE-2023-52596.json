{
  "cve": "CVE-2023-52596",
  "mitre": {
    "cpes": [],
    "created": "2024-03-06T06:45:26.094000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: Fix out of bounds access for empty sysctl registers\n\nWhen registering tables to the sysctl subsystem there is a check to see\nif header is a permanently empty directory (used for mounts). This check\nevaluates the first element of the ctl_table. This results in an out of\nbounds evaluation when registering empty directories.\n\nThe function register_sysctl_mount_point now passes a ctl_table of size\n1 instead of size 0. It now relies solely on the type to identify\na permanently empty register.\n\nMake sure that the ctl_table has at least one element before testing for\npermanent emptiness.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/52xxx/CVE-2023-52596.json",
    "references": [
      "https://git.kernel.org/stable/c/15893975e9e382f8294ea8d926f08dc2d8d39ede",
      "https://git.kernel.org/stable/c/2ae7081bc10123b187e36a4f3a8e53768de31489",
      "https://git.kernel.org/stable/c/315552310c7de92baea4e570967066569937a843"
    ],
    "title": "sysctl: Fix out of bounds access for empty sysctl registers",
    "updated": "2024-08-02T23:03:21.269000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-03-06T07:15:09.657000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: Fix out of bounds access for empty sysctl registers\n\nWhen registering tables to the sysctl subsystem there is a check to see\nif header is a permanently empty directory (used for mounts). This check\nevaluates the first element of the ctl_table. This results in an out of\nbounds evaluation when registering empty directories.\n\nThe function register_sysctl_mount_point now passes a ctl_table of size\n1 instead of size 0. It now relies solely on the type to identify\na permanently empty register.\n\nMake sure that the ctl_table has at least one element before testing for\npermanent emptiness.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-52596.json",
    "references": [
      "https://git.kernel.org/stable/c/15893975e9e382f8294ea8d926f08dc2d8d39ede",
      "https://git.kernel.org/stable/c/2ae7081bc10123b187e36a4f3a8e53768de31489",
      "https://git.kernel.org/stable/c/315552310c7de92baea4e570967066569937a843"
    ],
    "title": null,
    "updated": "2024-03-06T15:18:08.093000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-03-06T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: Fix out of bounds access for empty sysctl registers\n\nWhen registering tables to the sysctl subsystem there is a check to see\nif header is a permanently empty directory (used for mounts). This check\nevaluates the first element of the ctl_table. This results in an out of\nbounds evaluation when registering empty directories.\n\nThe function register_sysctl_mount_point now passes a ctl_table of size\n1 instead of size 0. It now relies solely on the type to identify\na permanently empty register.\n\nMake sure that the ctl_table has at least one element before testing for\npermanent emptiness.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.1,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/15893975e9e382f8294ea8d926f08dc2d8d39ede",
        "https://git.kernel.org/stable/c/2ae7081bc10123b187e36a4f3a8e53768de31489",
        "https://git.kernel.org/stable/c/315552310c7de92baea4e570967066569937a843",
        "https://lore.kernel.org/linux-cve-announce/2024030645-CVE-2023-52596-b98e@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-52596",
        "https://www.cve.org/CVERecord?id=CVE-2023-52596"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "sysctl: Fix out of bounds access for empty sysctl registers",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T23:03:21.269000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-125"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-03-06T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nsysctl: Fix out of bounds access for empty sysctl registers\nWhen registering tables to the sysctl subsystem there is a check to see\nif header is a permanently empty directory (used for mounts). This check\nevaluates the first element of the ctl_table. This results in an out of\nbounds evaluation when registering empty directories.\nThe function register_sysctl_mount_point now passes a ctl_table of size\n1 instead of size 0. It now relies solely on the type to identify\na permanently empty register.\nMake sure that the ctl_table has at least one element before testing for\npermanent emptiness.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.1,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2023/CVE-2023-52596.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024030645-CVE-2023-52596-b98e@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-52596",
      "https://www.cve.org/CVERecord?id=CVE-2023-52596"
    ],
    "title": "kernel: sysctl: Fix out of bounds access for empty sysctl registers",
    "updated": "2024-03-06T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-125"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-03-06T06:45:26.094000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: Fix out of bounds access for empty sysctl registers\n\nWhen registering tables to the sysctl subsystem there is a check to see\nif header is a permanently empty directory (used for mounts). This check\nevaluates the first element of the ctl_table. This results in an out of\nbounds evaluation when registering empty directories.\n\nThe function register_sysctl_mount_point now passes a ctl_table of size\n1 instead of size 0. It now relies solely on the type to identify\na permanently empty register.\n\nMake sure that the ctl_table has at least one element before testing for\npermanent emptiness.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/15893975e9e382f8294ea8d926f08dc2d8d39ede",
      "https://git.kernel.org/stable/c/2ae7081bc10123b187e36a4f3a8e53768de31489",
      "https://git.kernel.org/stable/c/315552310c7de92baea4e570967066569937a843"
    ],
    "title": "sysctl: Fix out of bounds access for empty sysctl registers",
    "updated": "2024-08-02T23:03:21.269000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2023/52xxx/CVE-2023-52596.json",
    "weaknesses": []
  }
}