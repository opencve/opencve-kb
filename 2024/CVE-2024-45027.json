{
  "cve": "CVE-2024-45027",
  "mitre": {
    "cpes": [],
    "created": "2024-09-11T15:13:59.032000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()\n\nIf xhci_mem_init() fails, it calls into xhci_mem_cleanup() to mop\nup the damage. If it fails early enough, before xhci->interrupters\nis allocated but after xhci->max_interrupters has been set, which\nhappens in most (all?) cases, things get uglier, as xhci_mem_cleanup()\nunconditionally derefences xhci->interrupters. With prejudice.\n\nGate the interrupt freeing loop with a check on xhci->interrupters\nbeing non-NULL.\n\nFound while debugging a DMA allocation issue that led the XHCI driver\non this exact path.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/45xxx/CVE-2024-45027.json",
    "references": [
      "https://git.kernel.org/stable/c/770cacc75b0091ece17349195d72133912c1ca7c",
      "https://git.kernel.org/stable/c/dcdb52d948f3a17ccd3fce757d9bd981d7c32039"
    ],
    "title": "usb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()",
    "updated": "2024-09-11T15:13:59.032000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-09-11T16:15:07.570000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()\n\nIf xhci_mem_init() fails, it calls into xhci_mem_cleanup() to mop\nup the damage. If it fails early enough, before xhci->interrupters\nis allocated but after xhci->max_interrupters has been set, which\nhappens in most (all?) cases, things get uglier, as xhci_mem_cleanup()\nunconditionally derefences xhci->interrupters. With prejudice.\n\nGate the interrupt freeing loop with a check on xhci->interrupters\nbeing non-NULL.\n\nFound while debugging a DMA allocation issue that led the XHCI driver\non this exact path.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-45027.json",
    "references": [
      "https://git.kernel.org/stable/c/770cacc75b0091ece17349195d72133912c1ca7c",
      "https://git.kernel.org/stable/c/dcdb52d948f3a17ccd3fce757d9bd981d7c32039"
    ],
    "title": null,
    "updated": "2024-09-11T16:26:11.920000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-11T15:30:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()\n\nIf xhci_mem_init() fails, it calls into xhci_mem_cleanup() to mop\nup the damage. If it fails early enough, before xhci->interrupters\nis allocated but after xhci->max_interrupters has been set, which\nhappens in most (all?) cases, things get uglier, as xhci_mem_cleanup()\nunconditionally derefences xhci->interrupters. With prejudice.\n\nGate the interrupt freeing loop with a check on xhci->interrupters\nbeing non-NULL.\n\nFound while debugging a DMA allocation issue that led the XHCI driver\non this exact path.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "usb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/770cacc75b0091ece17349195d72133912c1ca7c",
                "https://git.kernel.org/stable/c/dcdb52d948f3a17ccd3fce757d9bd981d7c32039"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "ddb51a44-c4ad-49eb-9f15-eabe30c24ef5"
      },
      {
        "created": "2024-09-11T21:45:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024091110-CVE-2024-45027-95b9@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2024-45027",
                "https://www.cve.org/CVERecord?id=CVE-2024-45027"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Low",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "fb32a6ac-a465-41e2-8be7-8fcbca1d554c"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-09-11T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()\n\nIf xhci_mem_init() fails, it calls into xhci_mem_cleanup() to mop\nup the damage. If it fails early enough, before xhci->interrupters\nis allocated but after xhci->max_interrupters has been set, which\nhappens in most (all?) cases, things get uglier, as xhci_mem_cleanup()\nunconditionally derefences xhci->interrupters. With prejudice.\n\nGate the interrupt freeing loop with a check on xhci->interrupters\nbeing non-NULL.\n\nFound while debugging a DMA allocation issue that led the XHCI driver\non this exact path.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/770cacc75b0091ece17349195d72133912c1ca7c",
        "https://git.kernel.org/stable/c/dcdb52d948f3a17ccd3fce757d9bd981d7c32039",
        "https://lore.kernel.org/linux-cve-announce/2024091110-CVE-2024-45027-95b9@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-45027",
        "https://www.cve.org/CVERecord?id=CVE-2024-45027"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "usb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-11T16:26:11.920000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-09-11T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nusb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()\nIf xhci_mem_init() fails, it calls into xhci_mem_cleanup() to mop\nup the damage. If it fails early enough, before xhci->interrupters\nis allocated but after xhci->max_interrupters has been set, which\nhappens in most (all?) cases, things get uglier, as xhci_mem_cleanup()\nunconditionally derefences xhci->interrupters. With prejudice.\nGate the interrupt freeing loop with a check on xhci->interrupters\nbeing non-NULL.\nFound while debugging a DMA allocation issue that led the XHCI driver\non this exact path.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-45027.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024091110-CVE-2024-45027-95b9@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-45027",
      "https://www.cve.org/CVERecord?id=CVE-2024-45027"
    ],
    "title": "kernel: usb: xhci: Check for xhci-&gt;interrupters being allocated in xhci_mem_clearup()",
    "updated": "2024-09-11T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}