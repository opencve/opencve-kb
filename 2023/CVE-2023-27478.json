{
  "cve": "CVE-2023-27478",
  "mitre": {
    "cpes": [],
    "created": "2023-03-07T17:55:39.172000+00:00",
    "description": "libmemcached-awesome is an open source C/C++ client library and tools for the memcached server. `libmemcached` could return data for a previously requested key, if that previous request timed out due to a low `POLL_TIMEOUT`. This issue has been addressed in version 1.1.4. Users are advised to upgrade. There are several ways to workaround or lower the probability of this bug affecting a given deployment. 1: use a reasonably high `POLL_TIMEOUT` setting, like the default. 2: use separate libmemcached connections for unrelated data. 3: do not re-use libmemcached connections in an unknown state.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/27xxx/CVE-2023-27478.json",
    "references": [
      "https://github.com/awesomized/libmemcached/commit/48dcc61a",
      "https://github.com/awesomized/libmemcached/releases/tag/1.1.4",
      "https://github.com/awesomized/libmemcached/security/advisories/GHSA-wwmh-39wj-fx59",
      "https://github.com/php-memcached-dev/php-memcached/issues/531"
    ],
    "title": "Disclosure of unrelated data in libmemcached-awesome ",
    "updated": "2024-08-02T12:09:43.474000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-200"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:awesome:libmemcached:*:*:*:*:*:*:*:*"
    ],
    "created": "2023-03-07T18:15:09.247000+00:00",
    "description": "libmemcached-awesome is an open source C/C++ client library and tools for the memcached server. `libmemcached` could return data for a previously requested key, if that previous request timed out due to a low `POLL_TIMEOUT`. This issue has been addressed in version 1.1.4. Users are advised to upgrade. There are several ways to workaround or lower the probability of this bug affecting a given deployment. 1: use a reasonably high `POLL_TIMEOUT` setting, like the default. 2: use separate libmemcached connections for unrelated data. 3: do not re-use libmemcached connections in an unknown state.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-27478.json",
    "references": [
      "https://github.com/awesomized/libmemcached/commit/48dcc61a",
      "https://github.com/awesomized/libmemcached/releases/tag/1.1.4",
      "https://github.com/awesomized/libmemcached/security/advisories/GHSA-wwmh-39wj-fx59",
      "https://github.com/php-memcached-dev/php-memcached/issues/531"
    ],
    "title": null,
    "updated": "2023-03-23T16:59:14.237000+00:00",
    "vendors": [
      "awesome",
      "awesome$PRODUCT$libmemcached"
    ],
    "weaknesses": [
      "CWE-200"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:awesome:libmemcached:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-03-07T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "libmemcached-awesome is an open source C/C++ client library and tools for the memcached server. `libmemcached` could return data for a previously requested key, if that previous request timed out due to a low `POLL_TIMEOUT`. This issue has been addressed in version 1.1.4. Users are advised to upgrade. There are several ways to workaround or lower the probability of this bug affecting a given deployment. 1: use a reasonably high `POLL_TIMEOUT` setting, like the default. 2: use separate libmemcached connections for unrelated data. 3: do not re-use libmemcached connections in an unknown state.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/awesomized/libmemcached/commit/48dcc61a",
        "https://github.com/awesomized/libmemcached/releases/tag/1.1.4",
        "https://github.com/awesomized/libmemcached/security/advisories/GHSA-wwmh-39wj-fx59",
        "https://github.com/php-memcached-dev/php-memcached/issues/531",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-27478",
        "https://www.cve.org/CVERecord?id=CVE-2023-27478"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "Disclosure of unrelated data in libmemcached-awesome ",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T12:09:43.474000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "awesome",
        "awesome$PRODUCT$libmemcached"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-200"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2023-03-07T00:00:00+00:00",
    "description": "libmemcached-awesome is an open source C/C++ client library and tools for the memcached server. `libmemcached` could return data for a previously requested key, if that previous request timed out due to a low `POLL_TIMEOUT`. This issue has been addressed in version 1.1.4. Users are advised to upgrade. There are several ways to workaround or lower the probability of this bug affecting a given deployment. 1: use a reasonably high `POLL_TIMEOUT` setting, like the default. 2: use separate libmemcached connections for unrelated data. 3: do not re-use libmemcached connections in an unknown state.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2023/CVE-2023-27478.json",
    "references": [
      "https://github.com/awesomized/libmemcached/security/advisories/GHSA-wwmh-39wj-fx59",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-27478",
      "https://www.cve.org/CVERecord?id=CVE-2023-27478"
    ],
    "title": "libmemcached: Disclosure of unrelated data",
    "updated": "2023-03-07T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-200"
    ]
  }
}