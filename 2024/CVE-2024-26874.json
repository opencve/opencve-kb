{
  "cve": "CVE-2024-26874",
  "mitre": {
    "cpes": [],
    "created": "2024-04-17T10:27:33.278000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip\n\nIt's possible that mtk_crtc->event is NULL in\nmtk_drm_crtc_finish_page_flip().\n\npending_needs_vblank value is set by mtk_crtc->event, but in\nmtk_drm_crtc_atomic_flush(), it's is not guarded by the same\nlock in mtk_drm_finish_page_flip(), thus a race condition happens.\n\nConsider the following case:\n\nCPU1                              CPU2\nstep 1:\nmtk_drm_crtc_atomic_begin()\nmtk_crtc->event is not null,\n                                  step 1:\n                                  mtk_drm_crtc_atomic_flush:\n                                  mtk_drm_crtc_update_config(\n                                      !!mtk_crtc->event)\nstep 2:\nmtk_crtc_ddp_irq ->\nmtk_drm_finish_page_flip:\nlock\nmtk_crtc->event set to null,\npending_needs_vblank set to false\nunlock\n                                  pending_needs_vblank set to true,\n\n                                  step 2:\n                                  mtk_crtc_ddp_irq ->\n                                  mtk_drm_finish_page_flip called again,\n                                  pending_needs_vblank is still true\n                                  //null pointer\n\nInstead of guarding the entire mtk_drm_crtc_atomic_flush(), it's more\nefficient to just check if mtk_crtc->event is null before use.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/26xxx/CVE-2024-26874.json",
    "references": [
      "https://git.kernel.org/stable/c/3fc88b246a2fc16014e374040fc15af1d3752535",
      "https://git.kernel.org/stable/c/4688be96d20ffa49d2186523ee84f475f316fd49",
      "https://git.kernel.org/stable/c/9acee29a38b4d4b70f1f583e5ef9a245db4db710",
      "https://git.kernel.org/stable/c/9beec711a17245b853d64488fd5b739031612340",
      "https://git.kernel.org/stable/c/a3dd12b64ae8373a41a216a0b621df224210860a",
      "https://git.kernel.org/stable/c/accdac6b71d5a2b84040c3d2234f53a60edc398e",
      "https://git.kernel.org/stable/c/c958e86e9cc1b48cac004a6e245154dfba8e163b",
      "https://git.kernel.org/stable/c/d2bd30c710475b2e29288827d2c91f9e6e2b91d7",
      "https://git.kernel.org/stable/c/dfde84cc6c589f2a9f820f12426d97365670b731",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": "drm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip",
    "updated": "2024-08-02T00:21:04.219000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-04-17T11:15:09.670000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip\n\nIt's possible that mtk_crtc->event is NULL in\nmtk_drm_crtc_finish_page_flip().\n\npending_needs_vblank value is set by mtk_crtc->event, but in\nmtk_drm_crtc_atomic_flush(), it's is not guarded by the same\nlock in mtk_drm_finish_page_flip(), thus a race condition happens.\n\nConsider the following case:\n\nCPU1                              CPU2\nstep 1:\nmtk_drm_crtc_atomic_begin()\nmtk_crtc->event is not null,\n                                  step 1:\n                                  mtk_drm_crtc_atomic_flush:\n                                  mtk_drm_crtc_update_config(\n                                      !!mtk_crtc->event)\nstep 2:\nmtk_crtc_ddp_irq ->\nmtk_drm_finish_page_flip:\nlock\nmtk_crtc->event set to null,\npending_needs_vblank set to false\nunlock\n                                  pending_needs_vblank set to true,\n\n                                  step 2:\n                                  mtk_crtc_ddp_irq ->\n                                  mtk_drm_finish_page_flip called again,\n                                  pending_needs_vblank is still true\n                                  //null pointer\n\nInstead of guarding the entire mtk_drm_crtc_atomic_flush(), it's more\nefficient to just check if mtk_crtc->event is null before use.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-26874.json",
    "references": [
      "https://git.kernel.org/stable/c/3fc88b246a2fc16014e374040fc15af1d3752535",
      "https://git.kernel.org/stable/c/4688be96d20ffa49d2186523ee84f475f316fd49",
      "https://git.kernel.org/stable/c/9acee29a38b4d4b70f1f583e5ef9a245db4db710",
      "https://git.kernel.org/stable/c/9beec711a17245b853d64488fd5b739031612340",
      "https://git.kernel.org/stable/c/a3dd12b64ae8373a41a216a0b621df224210860a",
      "https://git.kernel.org/stable/c/accdac6b71d5a2b84040c3d2234f53a60edc398e",
      "https://git.kernel.org/stable/c/c958e86e9cc1b48cac004a6e245154dfba8e163b",
      "https://git.kernel.org/stable/c/d2bd30c710475b2e29288827d2c91f9e6e2b91d7",
      "https://git.kernel.org/stable/c/dfde84cc6c589f2a9f820f12426d97365670b731",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": null,
    "updated": "2024-06-27T13:15:56.957000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-04-17T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip\n\nIt's possible that mtk_crtc->event is NULL in\nmtk_drm_crtc_finish_page_flip().\n\npending_needs_vblank value is set by mtk_crtc->event, but in\nmtk_drm_crtc_atomic_flush(), it's is not guarded by the same\nlock in mtk_drm_finish_page_flip(), thus a race condition happens.\n\nConsider the following case:\n\nCPU1                              CPU2\nstep 1:\nmtk_drm_crtc_atomic_begin()\nmtk_crtc->event is not null,\n                                  step 1:\n                                  mtk_drm_crtc_atomic_flush:\n                                  mtk_drm_crtc_update_config(\n                                      !!mtk_crtc->event)\nstep 2:\nmtk_crtc_ddp_irq ->\nmtk_drm_finish_page_flip:\nlock\nmtk_crtc->event set to null,\npending_needs_vblank set to false\nunlock\n                                  pending_needs_vblank set to true,\n\n                                  step 2:\n                                  mtk_crtc_ddp_irq ->\n                                  mtk_drm_finish_page_flip called again,\n                                  pending_needs_vblank is still true\n                                  //null pointer\n\nInstead of guarding the entire mtk_drm_crtc_atomic_flush(), it's more\nefficient to just check if mtk_crtc->event is null before use.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.4,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/3fc88b246a2fc16014e374040fc15af1d3752535",
        "https://git.kernel.org/stable/c/4688be96d20ffa49d2186523ee84f475f316fd49",
        "https://git.kernel.org/stable/c/9acee29a38b4d4b70f1f583e5ef9a245db4db710",
        "https://git.kernel.org/stable/c/9beec711a17245b853d64488fd5b739031612340",
        "https://git.kernel.org/stable/c/a3dd12b64ae8373a41a216a0b621df224210860a",
        "https://git.kernel.org/stable/c/accdac6b71d5a2b84040c3d2234f53a60edc398e",
        "https://git.kernel.org/stable/c/c958e86e9cc1b48cac004a6e245154dfba8e163b",
        "https://git.kernel.org/stable/c/d2bd30c710475b2e29288827d2c91f9e6e2b91d7",
        "https://git.kernel.org/stable/c/dfde84cc6c589f2a9f820f12426d97365670b731",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
        "https://lore.kernel.org/linux-cve-announce/2024041739-CVE-2024-26874-79b0@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-26874",
        "https://www.cve.org/CVERecord?id=CVE-2024-26874"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "drm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T00:21:04.219000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-476"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-04-17T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ndrm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip\nIt's possible that mtk_crtc->event is NULL in\nmtk_drm_crtc_finish_page_flip().\npending_needs_vblank value is set by mtk_crtc->event, but in\nmtk_drm_crtc_atomic_flush(), it's is not guarded by the same\nlock in mtk_drm_finish_page_flip(), thus a race condition happens.\nConsider the following case:\nCPU1                              CPU2\nstep 1:\nmtk_drm_crtc_atomic_begin()\nmtk_crtc->event is not null,\nstep 1:\nmtk_drm_crtc_atomic_flush:\nmtk_drm_crtc_update_config(\n!!mtk_crtc->event)\nstep 2:\nmtk_crtc_ddp_irq ->\nmtk_drm_finish_page_flip:\nlock\nmtk_crtc->event set to null,\npending_needs_vblank set to false\nunlock\npending_needs_vblank set to true,\nstep 2:\nmtk_crtc_ddp_irq ->\nmtk_drm_finish_page_flip called again,\npending_needs_vblank is still true\n//null pointer\nInstead of guarding the entire mtk_drm_crtc_atomic_flush(), it's more\nefficient to just check if mtk_crtc->event is null before use.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.4,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-26874.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024041739-CVE-2024-26874-79b0@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-26874",
      "https://www.cve.org/CVERecord?id=CVE-2024-26874"
    ],
    "title": "kernel: drm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip",
    "updated": "2024-04-17T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-476"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-04-17T10:27:33.278000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip\n\nIt's possible that mtk_crtc->event is NULL in\nmtk_drm_crtc_finish_page_flip().\n\npending_needs_vblank value is set by mtk_crtc->event, but in\nmtk_drm_crtc_atomic_flush(), it's is not guarded by the same\nlock in mtk_drm_finish_page_flip(), thus a race condition happens.\n\nConsider the following case:\n\nCPU1                              CPU2\nstep 1:\nmtk_drm_crtc_atomic_begin()\nmtk_crtc->event is not null,\n                                  step 1:\n                                  mtk_drm_crtc_atomic_flush:\n                                  mtk_drm_crtc_update_config(\n                                      !!mtk_crtc->event)\nstep 2:\nmtk_crtc_ddp_irq ->\nmtk_drm_finish_page_flip:\nlock\nmtk_crtc->event set to null,\npending_needs_vblank set to false\nunlock\n                                  pending_needs_vblank set to true,\n\n                                  step 2:\n                                  mtk_crtc_ddp_irq ->\n                                  mtk_drm_finish_page_flip called again,\n                                  pending_needs_vblank is still true\n                                  //null pointer\n\nInstead of guarding the entire mtk_drm_crtc_atomic_flush(), it's more\nefficient to just check if mtk_crtc->event is null before use.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "drm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip",
    "updated": "2024-07-05T15:20:38.586000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/26xxx/CVE-2024-26874.json",
    "weaknesses": []
  }
}