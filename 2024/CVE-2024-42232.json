{
  "cve": "CVE-2024-42232",
  "mitre": {
    "cpes": [],
    "created": "2024-08-07T15:14:23.074000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibceph: fix race between delayed_work() and ceph_monc_stop()\n\nThe way the delayed work is handled in ceph_monc_stop() is prone to\nraces with mon_fault() and possibly also finish_hunting().  Both of\nthese can requeue the delayed work which wouldn't be canceled by any of\nthe following code in case that happens after cancel_delayed_work_sync()\nruns -- __close_session() doesn't mess with the delayed work in order\nto avoid interfering with the hunting interval logic.  This part was\nmissed in commit b5d91704f53e (\"libceph: behave in mon_fault() if\ncur_mon < 0\") and use-after-free can still ensue on monc and objects\nthat hang off of it, with monc->auth and monc->monmap being\nparticularly susceptible to quickly being reused.\n\nTo fix this:\n\n- clear monc->cur_mon and monc->hunting as part of closing the session\n  in ceph_monc_stop()\n- bail from delayed_work() if monc->cur_mon is cleared, similar to how\n  it's done in mon_fault() and finish_hunting() (based on monc->hunting)\n- call cancel_delayed_work_sync() after the session is closed",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/42xxx/CVE-2024-42232.json",
    "references": [
      "https://git.kernel.org/stable/c/1177afeca833174ba83504688eec898c6214f4bf",
      "https://git.kernel.org/stable/c/20cf67dcb7db842f941eff1af6ee5e9dc41796d7",
      "https://git.kernel.org/stable/c/2d33654d40a05afd91ab24c9a73ab512a0670a9a",
      "https://git.kernel.org/stable/c/33d38c5da17f8db2d80e811b7829d2822c10625e",
      "https://git.kernel.org/stable/c/34b76d1922e41da1fa73d43b764cddd82ac9733c",
      "https://git.kernel.org/stable/c/63e5d035e3a7ab7412a008f202633c5e6a0a28ea",
      "https://git.kernel.org/stable/c/69c7b2fe4c9cc1d3b1186d1c5606627ecf0de883",
      "https://git.kernel.org/stable/c/9525af1f58f67df387768770fcf6d6a8f23aee3d"
    ],
    "title": "libceph: fix race between delayed_work() and ceph_monc_stop()",
    "updated": "2024-08-07T15:14:23.074000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-08-07T16:15:46.213000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibceph: fix race between delayed_work() and ceph_monc_stop()\n\nThe way the delayed work is handled in ceph_monc_stop() is prone to\nraces with mon_fault() and possibly also finish_hunting().  Both of\nthese can requeue the delayed work which wouldn't be canceled by any of\nthe following code in case that happens after cancel_delayed_work_sync()\nruns -- __close_session() doesn't mess with the delayed work in order\nto avoid interfering with the hunting interval logic.  This part was\nmissed in commit b5d91704f53e (\"libceph: behave in mon_fault() if\ncur_mon < 0\") and use-after-free can still ensue on monc and objects\nthat hang off of it, with monc->auth and monc->monmap being\nparticularly susceptible to quickly being reused.\n\nTo fix this:\n\n- clear monc->cur_mon and monc->hunting as part of closing the session\n  in ceph_monc_stop()\n- bail from delayed_work() if monc->cur_mon is cleared, similar to how\n  it's done in mon_fault() and finish_hunting() (based on monc->hunting)\n- call cancel_delayed_work_sync() after the session is closed",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-42232.json",
    "references": [
      "https://git.kernel.org/stable/c/1177afeca833174ba83504688eec898c6214f4bf",
      "https://git.kernel.org/stable/c/20cf67dcb7db842f941eff1af6ee5e9dc41796d7",
      "https://git.kernel.org/stable/c/2d33654d40a05afd91ab24c9a73ab512a0670a9a",
      "https://git.kernel.org/stable/c/33d38c5da17f8db2d80e811b7829d2822c10625e",
      "https://git.kernel.org/stable/c/34b76d1922e41da1fa73d43b764cddd82ac9733c",
      "https://git.kernel.org/stable/c/63e5d035e3a7ab7412a008f202633c5e6a0a28ea",
      "https://git.kernel.org/stable/c/69c7b2fe4c9cc1d3b1186d1c5606627ecf0de883",
      "https://git.kernel.org/stable/c/9525af1f58f67df387768770fcf6d6a8f23aee3d"
    ],
    "title": null,
    "updated": "2024-08-08T15:02:09.750000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-416"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-07T15:30:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibceph: fix race between delayed_work() and ceph_monc_stop()\n\nThe way the delayed work is handled in ceph_monc_stop() is prone to\nraces with mon_fault() and possibly also finish_hunting().  Both of\nthese can requeue the delayed work which wouldn't be canceled by any of\nthe following code in case that happens after cancel_delayed_work_sync()\nruns -- __close_session() doesn't mess with the delayed work in order\nto avoid interfering with the hunting interval logic.  This part was\nmissed in commit b5d91704f53e (\"libceph: behave in mon_fault() if\ncur_mon < 0\") and use-after-free can still ensue on monc and objects\nthat hang off of it, with monc->auth and monc->monmap being\nparticularly susceptible to quickly being reused.\n\nTo fix this:\n\n- clear monc->cur_mon and monc->hunting as part of closing the session\n  in ceph_monc_stop()\n- bail from delayed_work() if monc->cur_mon is cleared, similar to how\n  it's done in mon_fault() and finish_hunting() (based on monc->hunting)\n- call cancel_delayed_work_sync() after the session is closed",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "libceph: fix race between delayed_work() and ceph_monc_stop()",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/1177afeca833174ba83504688eec898c6214f4bf",
                "https://git.kernel.org/stable/c/20cf67dcb7db842f941eff1af6ee5e9dc41796d7",
                "https://git.kernel.org/stable/c/2d33654d40a05afd91ab24c9a73ab512a0670a9a",
                "https://git.kernel.org/stable/c/33d38c5da17f8db2d80e811b7829d2822c10625e",
                "https://git.kernel.org/stable/c/34b76d1922e41da1fa73d43b764cddd82ac9733c",
                "https://git.kernel.org/stable/c/63e5d035e3a7ab7412a008f202633c5e6a0a28ea",
                "https://git.kernel.org/stable/c/69c7b2fe4c9cc1d3b1186d1c5606627ecf0de883",
                "https://git.kernel.org/stable/c/9525af1f58f67df387768770fcf6d6a8f23aee3d"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "ed2eab32-e4f8-40ce-a14b-4afdb4464667"
      },
      {
        "created": "2024-08-08T15:30:00+00:00",
        "data": [
          {
            "details": [
              "linux",
              "linux$PRODUCT$linux_kernel"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "CWE-416"
              ],
              "removed": []
            },
            "type": "weaknesses"
          },
          {
            "details": {
              "added": [
                "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "linux",
                "linux$PRODUCT$linux_kernel"
              ],
              "removed": []
            },
            "type": "vendors"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "bd15bcb8-9f23-4e9d-803b-ce53c006eddf"
      },
      {
        "created": "2024-08-08T21:30:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024080737-CVE-2024-42232-8ab2@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2024-42232",
                "https://www.cve.org/CVERecord?id=CVE-2024-42232"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {},
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Moderate",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "31f51752-3a26-4545-9710-aba4dfaf1268"
      }
    ],
    "cpes": {
      "data": [
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2024-08-07T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibceph: fix race between delayed_work() and ceph_monc_stop()\n\nThe way the delayed work is handled in ceph_monc_stop() is prone to\nraces with mon_fault() and possibly also finish_hunting().  Both of\nthese can requeue the delayed work which wouldn't be canceled by any of\nthe following code in case that happens after cancel_delayed_work_sync()\nruns -- __close_session() doesn't mess with the delayed work in order\nto avoid interfering with the hunting interval logic.  This part was\nmissed in commit b5d91704f53e (\"libceph: behave in mon_fault() if\ncur_mon < 0\") and use-after-free can still ensue on monc and objects\nthat hang off of it, with monc->auth and monc->monmap being\nparticularly susceptible to quickly being reused.\n\nTo fix this:\n\n- clear monc->cur_mon and monc->hunting as part of closing the session\n  in ceph_monc_stop()\n- bail from delayed_work() if monc->cur_mon is cleared, similar to how\n  it's done in mon_fault() and finish_hunting() (based on monc->hunting)\n- call cancel_delayed_work_sync() after the session is closed",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/1177afeca833174ba83504688eec898c6214f4bf",
        "https://git.kernel.org/stable/c/20cf67dcb7db842f941eff1af6ee5e9dc41796d7",
        "https://git.kernel.org/stable/c/2d33654d40a05afd91ab24c9a73ab512a0670a9a",
        "https://git.kernel.org/stable/c/33d38c5da17f8db2d80e811b7829d2822c10625e",
        "https://git.kernel.org/stable/c/34b76d1922e41da1fa73d43b764cddd82ac9733c",
        "https://git.kernel.org/stable/c/63e5d035e3a7ab7412a008f202633c5e6a0a28ea",
        "https://git.kernel.org/stable/c/69c7b2fe4c9cc1d3b1186d1c5606627ecf0de883",
        "https://git.kernel.org/stable/c/9525af1f58f67df387768770fcf6d6a8f23aee3d",
        "https://lore.kernel.org/linux-cve-announce/2024080737-CVE-2024-42232-8ab2@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-42232",
        "https://www.cve.org/CVERecord?id=CVE-2024-42232"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "libceph: fix race between delayed_work() and ceph_monc_stop()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-08T15:02:09.750000+00:00",
      "provider": "nvd"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-416"
      ],
      "providers": [
        "nvd"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-08-07T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nlibceph: fix race between delayed_work() and ceph_monc_stop()\nThe way the delayed work is handled in ceph_monc_stop() is prone to\nraces with mon_fault() and possibly also finish_hunting().  Both of\nthese can requeue the delayed work which wouldn't be canceled by any of\nthe following code in case that happens after cancel_delayed_work_sync()\nruns -- __close_session() doesn't mess with the delayed work in order\nto avoid interfering with the hunting interval logic.  This part was\nmissed in commit b5d91704f53e (\"libceph: behave in mon_fault() if\ncur_mon < 0\") and use-after-free can still ensue on monc and objects\nthat hang off of it, with monc->auth and monc->monmap being\nparticularly susceptible to quickly being reused.\nTo fix this:\n- clear monc->cur_mon and monc->hunting as part of closing the session\nin ceph_monc_stop()\n- bail from delayed_work() if monc->cur_mon is cleared, similar to how\nit's done in mon_fault() and finish_hunting() (based on monc->hunting)\n- call cancel_delayed_work_sync() after the session is closed",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-42232.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024080737-CVE-2024-42232-8ab2@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-42232",
      "https://www.cve.org/CVERecord?id=CVE-2024-42232"
    ],
    "title": "kernel: libceph: fix race between delayed_work() and ceph_monc_stop()",
    "updated": "2024-08-07T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}