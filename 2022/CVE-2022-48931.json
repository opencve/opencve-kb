{
  "cve": "CVE-2022-48931",
  "mitre": {
    "cpes": [],
    "created": "2024-08-22T03:31:24.823000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nconfigfs: fix a race in configfs_{,un}register_subsystem()\n\nWhen configfs_register_subsystem() or configfs_unregister_subsystem()\nis executing link_group() or unlink_group(),\nit is possible that two processes add or delete list concurrently.\nSome unfortunate interleavings of them can cause kernel panic.\n\nOne of cases is:\nA --> B --> C --> D\nA <-- B <-- C <-- D\n\n     delete list_head *B        |      delete list_head *C\n--------------------------------|-----------------------------------\nconfigfs_unregister_subsystem   |   configfs_unregister_subsystem\n  unlink_group                  |     unlink_group\n    unlink_obj                  |       unlink_obj\n      list_del_init             |         list_del_init\n        __list_del_entry        |           __list_del_entry\n          __list_del            |             __list_del\n            // next == C        |\n            next->prev = prev   |\n                                |               next->prev = prev\n            prev->next = next   |\n                                |                 // prev == B\n                                |                 prev->next = next\n\nFix this by adding mutex when calling link_group() or unlink_group(),\nbut parent configfs_subsystem is NULL when config_item is root.\nSo I create a mutex configfs_subsystem_mutex.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/48xxx/CVE-2022-48931.json",
    "references": [
      "https://git.kernel.org/stable/c/3aadfd46858b1f64d4d6a0654b863e21aabff975",
      "https://git.kernel.org/stable/c/40805099af11f68c5ca7dbcfacf455da8f99f622",
      "https://git.kernel.org/stable/c/84ec758fb2daa236026506868c8796b0500c047d",
      "https://git.kernel.org/stable/c/a37024f7757c25550accdebf49e497ad6ae239fe",
      "https://git.kernel.org/stable/c/a7ab53d3c27dfe83bb594456b9f38a37796ec39b",
      "https://git.kernel.org/stable/c/b7e2b91fcb5c78c414e33dc8d50642e307ca0c5a",
      "https://git.kernel.org/stable/c/d1654de19d42f513b6cfe955cc77e7f427e05a77",
      "https://git.kernel.org/stable/c/e7a66dd2687758718eddd79b542a95cf3aa488cc"
    ],
    "title": "configfs: fix a race in configfs_{,un}register_subsystem()",
    "updated": "2024-09-12T17:33:10.278000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-08-22T04:15:16.010000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nconfigfs: fix a race in configfs_{,un}register_subsystem()\n\nWhen configfs_register_subsystem() or configfs_unregister_subsystem()\nis executing link_group() or unlink_group(),\nit is possible that two processes add or delete list concurrently.\nSome unfortunate interleavings of them can cause kernel panic.\n\nOne of cases is:\nA --> B --> C --> D\nA <-- B <-- C <-- D\n\n     delete list_head *B        |      delete list_head *C\n--------------------------------|-----------------------------------\nconfigfs_unregister_subsystem   |   configfs_unregister_subsystem\n  unlink_group                  |     unlink_group\n    unlink_obj                  |       unlink_obj\n      list_del_init             |         list_del_init\n        __list_del_entry        |           __list_del_entry\n          __list_del            |             __list_del\n            // next == C        |\n            next->prev = prev   |\n                                |               next->prev = prev\n            prev->next = next   |\n                                |                 // prev == B\n                                |                 prev->next = next\n\nFix this by adding mutex when calling link_group() or unlink_group(),\nbut parent configfs_subsystem is NULL when config_item is root.\nSo I create a mutex configfs_subsystem_mutex.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.7,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-48931.json",
    "references": [
      "https://git.kernel.org/stable/c/3aadfd46858b1f64d4d6a0654b863e21aabff975",
      "https://git.kernel.org/stable/c/40805099af11f68c5ca7dbcfacf455da8f99f622",
      "https://git.kernel.org/stable/c/84ec758fb2daa236026506868c8796b0500c047d",
      "https://git.kernel.org/stable/c/a37024f7757c25550accdebf49e497ad6ae239fe",
      "https://git.kernel.org/stable/c/a7ab53d3c27dfe83bb594456b9f38a37796ec39b",
      "https://git.kernel.org/stable/c/b7e2b91fcb5c78c414e33dc8d50642e307ca0c5a",
      "https://git.kernel.org/stable/c/d1654de19d42f513b6cfe955cc77e7f427e05a77",
      "https://git.kernel.org/stable/c/e7a66dd2687758718eddd79b542a95cf3aa488cc"
    ],
    "title": null,
    "updated": "2024-08-23T01:54:11.640000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-362"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-22T03:45:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nconfigfs: fix a race in configfs_{,un}register_subsystem()\n\nWhen configfs_register_subsystem() or configfs_unregister_subsystem()\nis executing link_group() or unlink_group(),\nit is possible that two processes add or delete list concurrently.\nSome unfortunate interleavings of them can cause kernel panic.\n\nOne of cases is:\nA --> B --> C --> D\nA <-- B <-- C <-- D\n\n     delete list_head *B        |      delete list_head *C\n--------------------------------|-----------------------------------\nconfigfs_unregister_subsystem   |   configfs_unregister_subsystem\n  unlink_group                  |     unlink_group\n    unlink_obj                  |       unlink_obj\n      list_del_init             |         list_del_init\n        __list_del_entry        |           __list_del_entry\n          __list_del            |             __list_del\n            // next == C        |\n            next->prev = prev   |\n                                |               next->prev = prev\n            prev->next = next   |\n                                |                 // prev == B\n                                |                 prev->next = next\n\nFix this by adding mutex when calling link_group() or unlink_group(),\nbut parent configfs_subsystem is NULL when config_item is root.\nSo I create a mutex configfs_subsystem_mutex.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "configfs: fix a race in configfs_{,un}register_subsystem()",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/3aadfd46858b1f64d4d6a0654b863e21aabff975",
                "https://git.kernel.org/stable/c/40805099af11f68c5ca7dbcfacf455da8f99f622",
                "https://git.kernel.org/stable/c/84ec758fb2daa236026506868c8796b0500c047d",
                "https://git.kernel.org/stable/c/a37024f7757c25550accdebf49e497ad6ae239fe",
                "https://git.kernel.org/stable/c/a7ab53d3c27dfe83bb594456b9f38a37796ec39b",
                "https://git.kernel.org/stable/c/b7e2b91fcb5c78c414e33dc8d50642e307ca0c5a",
                "https://git.kernel.org/stable/c/d1654de19d42f513b6cfe955cc77e7f427e05a77",
                "https://git.kernel.org/stable/c/e7a66dd2687758718eddd79b542a95cf3aa488cc"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "30b7618d-22d4-4e4d-9388-6893709a116e"
      },
      {
        "created": "2024-08-22T17:00:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024082222-CVE-2022-48931-ec5b@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2022-48931",
                "https://www.cve.org/CVERecord?id=CVE-2022-48931"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Moderate",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "2f6a2f5e-29ae-40d0-a4e1-c8bc58c32a76"
      },
      {
        "created": "2024-08-23T02:15:00+00:00",
        "data": [
          {
            "details": [
              "linux",
              "linux$PRODUCT$linux_kernel"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "CWE-362"
              ],
              "removed": []
            },
            "type": "weaknesses"
          },
          {
            "details": {
              "added": [
                "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "linux",
                "linux$PRODUCT$linux_kernel"
              ],
              "removed": []
            },
            "type": "vendors"
          },
          {
            "details": {
              "added": {},
              "removed": {},
              "updated": {
                "cvssV3_1": {
                  "new": {
                    "score": 4.7,
                    "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  },
                  "old": {
                    "score": 5.5,
                    "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "744680c5-377d-4396-a869-2657b73722dc"
      },
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "baa6ac0e-fe4a-4ea7-84fe-be288346a611"
      }
    ],
    "cpes": {
      "data": [
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2024-08-22T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nconfigfs: fix a race in configfs_{,un}register_subsystem()\n\nWhen configfs_register_subsystem() or configfs_unregister_subsystem()\nis executing link_group() or unlink_group(),\nit is possible that two processes add or delete list concurrently.\nSome unfortunate interleavings of them can cause kernel panic.\n\nOne of cases is:\nA --> B --> C --> D\nA <-- B <-- C <-- D\n\n     delete list_head *B        |      delete list_head *C\n--------------------------------|-----------------------------------\nconfigfs_unregister_subsystem   |   configfs_unregister_subsystem\n  unlink_group                  |     unlink_group\n    unlink_obj                  |       unlink_obj\n      list_del_init             |         list_del_init\n        __list_del_entry        |           __list_del_entry\n          __list_del            |             __list_del\n            // next == C        |\n            next->prev = prev   |\n                                |               next->prev = prev\n            prev->next = next   |\n                                |                 // prev == B\n                                |                 prev->next = next\n\nFix this by adding mutex when calling link_group() or unlink_group(),\nbut parent configfs_subsystem is NULL when config_item is root.\nSo I create a mutex configfs_subsystem_mutex.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.7,
          "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/3aadfd46858b1f64d4d6a0654b863e21aabff975",
        "https://git.kernel.org/stable/c/40805099af11f68c5ca7dbcfacf455da8f99f622",
        "https://git.kernel.org/stable/c/84ec758fb2daa236026506868c8796b0500c047d",
        "https://git.kernel.org/stable/c/a37024f7757c25550accdebf49e497ad6ae239fe",
        "https://git.kernel.org/stable/c/a7ab53d3c27dfe83bb594456b9f38a37796ec39b",
        "https://git.kernel.org/stable/c/b7e2b91fcb5c78c414e33dc8d50642e307ca0c5a",
        "https://git.kernel.org/stable/c/d1654de19d42f513b6cfe955cc77e7f427e05a77",
        "https://git.kernel.org/stable/c/e7a66dd2687758718eddd79b542a95cf3aa488cc",
        "https://lore.kernel.org/linux-cve-announce/2024082222-CVE-2022-48931-ec5b@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2022-48931",
        "https://www.cve.org/CVERecord?id=CVE-2022-48931"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "configfs: fix a race in configfs_{,un}register_subsystem()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-12T17:33:10.278000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-362"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-08-22T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nconfigfs: fix a race in configfs_{,un}register_subsystem()\nWhen configfs_register_subsystem() or configfs_unregister_subsystem()\nis executing link_group() or unlink_group(),\nit is possible that two processes add or delete list concurrently.\nSome unfortunate interleavings of them can cause kernel panic.\nOne of cases is:\nA --> B --> C --> D\nA <-- B <-- C <-- D\ndelete list_head *B        |      delete list_head *C\n--------------------------------|-----------------------------------\nconfigfs_unregister_subsystem   |   configfs_unregister_subsystem\nunlink_group                  |     unlink_group\nunlink_obj                  |       unlink_obj\nlist_del_init             |         list_del_init\n__list_del_entry        |           __list_del_entry\n__list_del            |             __list_del\n// next == C        |\nnext->prev = prev   |\n|               next->prev = prev\nprev->next = next   |\n|                 // prev == B\n|                 prev->next = next\nFix this by adding mutex when calling link_group() or unlink_group(),\nbut parent configfs_subsystem is NULL when config_item is root.\nSo I create a mutex configfs_subsystem_mutex.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.7,
        "vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2022/CVE-2022-48931.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024082222-CVE-2022-48931-ec5b@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2022-48931",
      "https://www.cve.org/CVERecord?id=CVE-2022-48931"
    ],
    "title": "kernel: configfs: fix a race in configfs_{,un}register_subsystem()",
    "updated": "2024-08-22T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-362"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-08-22T03:31:24.823000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nconfigfs: fix a race in configfs_{,un}register_subsystem()\n\nWhen configfs_register_subsystem() or configfs_unregister_subsystem()\nis executing link_group() or unlink_group(),\nit is possible that two processes add or delete list concurrently.\nSome unfortunate interleavings of them can cause kernel panic.\n\nOne of cases is:\nA --> B --> C --> D\nA <-- B <-- C <-- D\n\n     delete list_head *B        |      delete list_head *C\n--------------------------------|-----------------------------------\nconfigfs_unregister_subsystem   |   configfs_unregister_subsystem\n  unlink_group                  |     unlink_group\n    unlink_obj                  |       unlink_obj\n      list_del_init             |         list_del_init\n        __list_del_entry        |           __list_del_entry\n          __list_del            |             __list_del\n            // next == C        |\n            next->prev = prev   |\n                                |               next->prev = prev\n            prev->next = next   |\n                                |                 // prev == B\n                                |                 prev->next = next\n\nFix this by adding mutex when calling link_group() or unlink_group(),\nbut parent configfs_subsystem is NULL when config_item is root.\nSo I create a mutex configfs_subsystem_mutex.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "configfs: fix a race in configfs_{,un}register_subsystem()",
    "updated": "2024-09-11T12:42:15.600000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2022/48xxx/CVE-2022-48931.json",
    "weaknesses": []
  }
}