{
  "cve": "CVE-2023-50259",
  "mitre": {
    "cpes": [],
    "created": "2023-12-22T17:00:00.976000+00:00",
    "description": "Medusa is an automatic video library manager for TV shows. Versions prior to 1.0.19 are vulnerable to unauthenticated blind server-side request forgery (SSRF). The `testslack` request handler in `medusa/server/web/home/handler.py` does not validate the user-controlled `slack_webhook` variable and passes it to the `notifiers.slack_notifier.test_notify` method, then `_notify_slack` and finally `_send_slack` method,  which sends a POST request to the user-controlled URL on line 103 in `/medusa/notifiers/slack.py`, which leads to a blind server-side request forgery (SSRF). This issue allows for crafting POST requests on behalf of the Medusa server. Version 1.0.19 contains a fix for the issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/50xxx/CVE-2023-50259.json",
    "references": [
      "https://github.com/pymedusa/Medusa/blob/3d656652ab277e47689483912ed7fc443e7023e8/medusa/notifiers/slack.py#L103",
      "https://github.com/pymedusa/Medusa/blob/3d656652ab277e47689483912ed7fc443e7023e8/medusa/server/web/home/handler.py#L168",
      "https://github.com/pymedusa/Medusa/releases/tag/v1.0.19",
      "https://github.com/pymedusa/Medusa/security/advisories/GHSA-8mcr-vffr-jwxv",
      "https://securitylab.github.com/advisories/GHSL-2023-201_GHSL-2023-202_Medusa/"
    ],
    "title": "Blind SSRF in /home/testslack endpoint ",
    "updated": "2024-08-02T22:16:46.296000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-918"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:pymedusa:medusa:*:*:*:*:*:*:*:*"
    ],
    "created": "2023-12-22T17:15:09.747000+00:00",
    "description": "Medusa is an automatic video library manager for TV shows. Versions prior to 1.0.19 are vulnerable to unauthenticated blind server-side request forgery (SSRF). The `testslack` request handler in `medusa/server/web/home/handler.py` does not validate the user-controlled `slack_webhook` variable and passes it to the `notifiers.slack_notifier.test_notify` method, then `_notify_slack` and finally `_send_slack` method,  which sends a POST request to the user-controlled URL on line 103 in `/medusa/notifiers/slack.py`, which leads to a blind server-side request forgery (SSRF). This issue allows for crafting POST requests on behalf of the Medusa server. Version 1.0.19 contains a fix for the issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.3,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-50259.json",
    "references": [
      "https://github.com/pymedusa/Medusa/blob/3d656652ab277e47689483912ed7fc443e7023e8/medusa/notifiers/slack.py#L103",
      "https://github.com/pymedusa/Medusa/blob/3d656652ab277e47689483912ed7fc443e7023e8/medusa/server/web/home/handler.py#L168",
      "https://github.com/pymedusa/Medusa/releases/tag/v1.0.19",
      "https://github.com/pymedusa/Medusa/security/advisories/GHSA-8mcr-vffr-jwxv",
      "https://securitylab.github.com/advisories/GHSL-2023-201_GHSL-2023-202_Medusa/"
    ],
    "title": null,
    "updated": "2024-01-03T20:07:07.073000+00:00",
    "vendors": [
      "pymedusa",
      "pymedusa$PRODUCT$medusa"
    ],
    "weaknesses": [
      "CWE-918"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:pymedusa:medusa:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2023-12-22T17:00:00.976000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "Medusa is an automatic video library manager for TV shows. Versions prior to 1.0.19 are vulnerable to unauthenticated blind server-side request forgery (SSRF). The `testslack` request handler in `medusa/server/web/home/handler.py` does not validate the user-controlled `slack_webhook` variable and passes it to the `notifiers.slack_notifier.test_notify` method, then `_notify_slack` and finally `_send_slack` method,  which sends a POST request to the user-controlled URL on line 103 in `/medusa/notifiers/slack.py`, which leads to a blind server-side request forgery (SSRF). This issue allows for crafting POST requests on behalf of the Medusa server. Version 1.0.19 contains a fix for the issue.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.3,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://github.com/pymedusa/Medusa/blob/3d656652ab277e47689483912ed7fc443e7023e8/medusa/notifiers/slack.py#L103",
        "https://github.com/pymedusa/Medusa/blob/3d656652ab277e47689483912ed7fc443e7023e8/medusa/server/web/home/handler.py#L168",
        "https://github.com/pymedusa/Medusa/releases/tag/v1.0.19",
        "https://github.com/pymedusa/Medusa/security/advisories/GHSA-8mcr-vffr-jwxv",
        "https://securitylab.github.com/advisories/GHSL-2023-201_GHSL-2023-202_Medusa/"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": "Blind SSRF in /home/testslack endpoint ",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T22:16:46.296000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "pymedusa",
        "pymedusa$PRODUCT$medusa"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-918"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    }
  }
}