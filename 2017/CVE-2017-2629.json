{
  "cve": "CVE-2017-2629",
  "mitre": {
    "cpes": [],
    "created": "2018-07-27T19:00:00+00:00",
    "description": "curl before 7.53.0 has an incorrect TLS Certificate Status Request extension feature that asks for a fresh proof of the server's certificate's validity in the code that checks for a test success or failure. It ends up always thinking there's valid proof, even when there is none or if the server doesn't support the TLS extension in question. This could lead to users not detecting when a server's certificate goes invalid or otherwise be mislead that the server is in a better shape than it is in reality. This flaw also exists in the command line tool (--cert-status).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 4.3,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2017/2xxx/CVE-2017-2629.json",
    "references": [
      "http://www.securityfocus.com/bid/96382",
      "http://www.securitytracker.com/id/1037871",
      "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-2629",
      "https://curl.haxx.se/docs/adv_20170222.html",
      "https://security.gentoo.org/glsa/201703-04",
      "https://www.tenable.com/security/tns-2017-09"
    ],
    "title": null,
    "updated": "2024-08-05T14:02:06.938000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-295"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:haxx:curl:*:*:*:*:*:*:*:*"
    ],
    "created": "2018-07-27T19:29:00.440000+00:00",
    "description": "curl before 7.53.0 has an incorrect TLS Certificate Status Request extension feature that asks for a fresh proof of the server's certificate's validity in the code that checks for a test success or failure. It ends up always thinking there's valid proof, even when there is none or if the server doesn't support the TLS extension in question. This could lead to users not detecting when a server's certificate goes invalid or otherwise be mislead that the server is in a better shape than it is in reality. This flaw also exists in the command line tool (--cert-status).",
    "metrics": {
      "cvssV2_0": {
        "score": 4.0,
        "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N"
      },
      "cvssV3_0": {
        "score": 6.5,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2017/CVE-2017-2629.json",
    "references": [
      "http://www.securityfocus.com/bid/96382",
      "http://www.securitytracker.com/id/1037871",
      "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-2629",
      "https://curl.haxx.se/docs/adv_20170222.html",
      "https://security.gentoo.org/glsa/201703-04",
      "https://www.tenable.com/security/tns-2017-09"
    ],
    "title": null,
    "updated": "2019-10-09T23:26:59.053000+00:00",
    "vendors": [
      "haxx",
      "haxx$PRODUCT$curl"
    ],
    "weaknesses": [
      "CWE-295"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:haxx:curl:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2017-02-22T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "curl before 7.53.0 has an incorrect TLS Certificate Status Request extension feature that asks for a fresh proof of the server's certificate's validity in the code that checks for a test success or failure. It ends up always thinking there's valid proof, even when there is none or if the server doesn't support the TLS extension in question. This could lead to users not detecting when a server's certificate goes invalid or otherwise be mislead that the server is in a better shape than it is in reality. This flaw also exists in the command line tool (--cert-status).",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.0,
          "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 4.3,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"
        },
        "provider": "mitre"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://www.securityfocus.com/bid/96382",
        "http://www.securitytracker.com/id/1037871",
        "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-2629",
        "https://curl.haxx.se/docs/adv_20170222.html",
        "https://nvd.nist.gov/vuln/detail/CVE-2017-2629",
        "https://security.gentoo.org/glsa/201703-04",
        "https://www.cve.org/CVERecord?id=CVE-2017-2629",
        "https://www.tenable.com/security/tns-2017-09"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "curl: SSL_VERIFYSTATUS ignored",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-05T14:02:06.938000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "haxx",
        "haxx$PRODUCT$curl"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-295"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2017-02-22T00:00:00+00:00",
    "description": "curl before 7.53.0 has an incorrect TLS Certificate Status Request extension feature that asks for a fresh proof of the server's certificate's validity in the code that checks for a test success or failure. It ends up always thinking there's valid proof, even when there is none or if the server doesn't support the TLS extension in question. This could lead to users not detecting when a server's certificate goes invalid or otherwise be mislead that the server is in a better shape than it is in reality. This flaw also exists in the command line tool (--cert-status).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 4.3,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N"
      },
      "cvssV3_1": {},
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2017/CVE-2017-2629.json",
    "references": [
      "https://curl.haxx.se/docs/adv_20170222.html",
      "https://nvd.nist.gov/vuln/detail/CVE-2017-2629",
      "https://www.cve.org/CVERecord?id=CVE-2017-2629"
    ],
    "title": "curl: SSL_VERIFYSTATUS ignored",
    "updated": "2017-02-22T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-295"
    ]
  }
}