{
  "cve": "CVE-2024-39276",
  "mitre": {
    "cpes": [],
    "created": "2024-06-25T14:22:38.886000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()\n\nSyzbot reports a warning as follows:\n\n============================================\nWARNING: CPU: 0 PID: 5075 at fs/mbcache.c:419 mb_cache_destroy+0x224/0x290\nModules linked in:\nCPU: 0 PID: 5075 Comm: syz-executor199 Not tainted 6.9.0-rc6-gb947cc5bf6d7\nRIP: 0010:mb_cache_destroy+0x224/0x290 fs/mbcache.c:419\nCall Trace:\n <TASK>\n ext4_put_super+0x6d4/0xcd0 fs/ext4/super.c:1375\n generic_shutdown_super+0x136/0x2d0 fs/super.c:641\n kill_block_super+0x44/0x90 fs/super.c:1675\n ext4_kill_sb+0x68/0xa0 fs/ext4/super.c:7327\n[...]\n============================================\n\nThis is because when finding an entry in ext4_xattr_block_cache_find(), if\next4_sb_bread() returns -ENOMEM, the ce's e_refcnt, which has already grown\nin the __entry_find(), won't be put away, and eventually trigger the above\nissue in mb_cache_destroy() due to reference count leakage.\n\nSo call mb_cache_entry_put() on the -ENOMEM error branch as a quick fix.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/39xxx/CVE-2024-39276.json",
    "references": [
      "https://git.kernel.org/stable/c/0c0b4a49d3e7f49690a6827a41faeffad5df7e21",
      "https://git.kernel.org/stable/c/681ff9a09accd8a4379f8bd30b7a1641ee19bb3e",
      "https://git.kernel.org/stable/c/76dc776153a47372719d664e0fc50d6355791abb",
      "https://git.kernel.org/stable/c/896a7e7d0d555ad8b2b46af0c2fa7de7467f9483",
      "https://git.kernel.org/stable/c/9ad75e78747b5a50dc5a52f0f8e92e920a653f16",
      "https://git.kernel.org/stable/c/a95df6f04f2c37291adf26a74205cde0314d4577",
      "https://git.kernel.org/stable/c/b37c0edef4e66fb21a2fbc211471195a383e5ab8",
      "https://git.kernel.org/stable/c/e941b712e758f615d311946bf98216e79145ccd9"
    ],
    "title": "ext4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()",
    "updated": "2024-08-02T04:19:20.631000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-06-25T15:15:13.903000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()\n\nSyzbot reports a warning as follows:\n\n============================================\nWARNING: CPU: 0 PID: 5075 at fs/mbcache.c:419 mb_cache_destroy+0x224/0x290\nModules linked in:\nCPU: 0 PID: 5075 Comm: syz-executor199 Not tainted 6.9.0-rc6-gb947cc5bf6d7\nRIP: 0010:mb_cache_destroy+0x224/0x290 fs/mbcache.c:419\nCall Trace:\n <TASK>\n ext4_put_super+0x6d4/0xcd0 fs/ext4/super.c:1375\n generic_shutdown_super+0x136/0x2d0 fs/super.c:641\n kill_block_super+0x44/0x90 fs/super.c:1675\n ext4_kill_sb+0x68/0xa0 fs/ext4/super.c:7327\n[...]\n============================================\n\nThis is because when finding an entry in ext4_xattr_block_cache_find(), if\next4_sb_bread() returns -ENOMEM, the ce's e_refcnt, which has already grown\nin the __entry_find(), won't be put away, and eventually trigger the above\nissue in mb_cache_destroy() due to reference count leakage.\n\nSo call mb_cache_entry_put() on the -ENOMEM error branch as a quick fix.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-39276.json",
    "references": [
      "https://git.kernel.org/stable/c/0c0b4a49d3e7f49690a6827a41faeffad5df7e21",
      "https://git.kernel.org/stable/c/681ff9a09accd8a4379f8bd30b7a1641ee19bb3e",
      "https://git.kernel.org/stable/c/76dc776153a47372719d664e0fc50d6355791abb",
      "https://git.kernel.org/stable/c/896a7e7d0d555ad8b2b46af0c2fa7de7467f9483",
      "https://git.kernel.org/stable/c/9ad75e78747b5a50dc5a52f0f8e92e920a653f16",
      "https://git.kernel.org/stable/c/a95df6f04f2c37291adf26a74205cde0314d4577",
      "https://git.kernel.org/stable/c/b37c0edef4e66fb21a2fbc211471195a383e5ab8",
      "https://git.kernel.org/stable/c/e941b712e758f615d311946bf98216e79145ccd9"
    ],
    "title": null,
    "updated": "2024-06-25T18:50:42.040000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-06-25T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()\n\nSyzbot reports a warning as follows:\n\n============================================\nWARNING: CPU: 0 PID: 5075 at fs/mbcache.c:419 mb_cache_destroy+0x224/0x290\nModules linked in:\nCPU: 0 PID: 5075 Comm: syz-executor199 Not tainted 6.9.0-rc6-gb947cc5bf6d7\nRIP: 0010:mb_cache_destroy+0x224/0x290 fs/mbcache.c:419\nCall Trace:\n <TASK>\n ext4_put_super+0x6d4/0xcd0 fs/ext4/super.c:1375\n generic_shutdown_super+0x136/0x2d0 fs/super.c:641\n kill_block_super+0x44/0x90 fs/super.c:1675\n ext4_kill_sb+0x68/0xa0 fs/ext4/super.c:7327\n[...]\n============================================\n\nThis is because when finding an entry in ext4_xattr_block_cache_find(), if\next4_sb_bread() returns -ENOMEM, the ce's e_refcnt, which has already grown\nin the __entry_find(), won't be put away, and eventually trigger the above\nissue in mb_cache_destroy() due to reference count leakage.\n\nSo call mb_cache_entry_put() on the -ENOMEM error branch as a quick fix.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/0c0b4a49d3e7f49690a6827a41faeffad5df7e21",
        "https://git.kernel.org/stable/c/681ff9a09accd8a4379f8bd30b7a1641ee19bb3e",
        "https://git.kernel.org/stable/c/76dc776153a47372719d664e0fc50d6355791abb",
        "https://git.kernel.org/stable/c/896a7e7d0d555ad8b2b46af0c2fa7de7467f9483",
        "https://git.kernel.org/stable/c/9ad75e78747b5a50dc5a52f0f8e92e920a653f16",
        "https://git.kernel.org/stable/c/a95df6f04f2c37291adf26a74205cde0314d4577",
        "https://git.kernel.org/stable/c/b37c0edef4e66fb21a2fbc211471195a383e5ab8",
        "https://git.kernel.org/stable/c/e941b712e758f615d311946bf98216e79145ccd9",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-39276",
        "https://www.cve.org/CVERecord?id=CVE-2024-39276"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "ext4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T04:19:20.631000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-402"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-06-25T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\next4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()\nSyzbot reports a warning as follows:\n============================================\nWARNING: CPU: 0 PID: 5075 at fs/mbcache.c:419 mb_cache_destroy+0x224/0x290\nModules linked in:\nCPU: 0 PID: 5075 Comm: syz-executor199 Not tainted 6.9.0-rc6-gb947cc5bf6d7\nRIP: 0010:mb_cache_destroy+0x224/0x290 fs/mbcache.c:419\nCall Trace:\n<TASK>\next4_put_super+0x6d4/0xcd0 fs/ext4/super.c:1375\ngeneric_shutdown_super+0x136/0x2d0 fs/super.c:641\nkill_block_super+0x44/0x90 fs/super.c:1675\next4_kill_sb+0x68/0xa0 fs/ext4/super.c:7327\n[...]\n============================================\nThis is because when finding an entry in ext4_xattr_block_cache_find(), if\next4_sb_bread() returns -ENOMEM, the ce's e_refcnt, which has already grown\nin the __entry_find(), won't be put away, and eventually trigger the above\nissue in mb_cache_destroy() due to reference count leakage.\nSo call mb_cache_entry_put() on the -ENOMEM error branch as a quick fix.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-39276.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2024-39276",
      "https://www.cve.org/CVERecord?id=CVE-2024-39276"
    ],
    "title": "kernel: ext4: fix mb_cache_entry&#39;s e_refcnt leak in ext4_xattr_block_cache_find()",
    "updated": "2024-06-25T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-402"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-06-25T14:22:38.886000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()\n\nSyzbot reports a warning as follows:\n\n============================================\nWARNING: CPU: 0 PID: 5075 at fs/mbcache.c:419 mb_cache_destroy+0x224/0x290\nModules linked in:\nCPU: 0 PID: 5075 Comm: syz-executor199 Not tainted 6.9.0-rc6-gb947cc5bf6d7\nRIP: 0010:mb_cache_destroy+0x224/0x290 fs/mbcache.c:419\nCall Trace:\n <TASK>\n ext4_put_super+0x6d4/0xcd0 fs/ext4/super.c:1375\n generic_shutdown_super+0x136/0x2d0 fs/super.c:641\n kill_block_super+0x44/0x90 fs/super.c:1675\n ext4_kill_sb+0x68/0xa0 fs/ext4/super.c:7327\n[...]\n============================================\n\nThis is because when finding an entry in ext4_xattr_block_cache_find(), if\next4_sb_bread() returns -ENOMEM, the ce's e_refcnt, which has already grown\nin the __entry_find(), won't be put away, and eventually trigger the above\nissue in mb_cache_destroy() due to reference count leakage.\n\nSo call mb_cache_entry_put() on the -ENOMEM error branch as a quick fix.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "ext4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()",
    "updated": "2024-06-25T15:26:47.726000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/39xxx/CVE-2024-39276.json",
    "weaknesses": []
  }
}