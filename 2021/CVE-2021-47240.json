{
  "cve": "CVE-2021-47240",
  "mitre": {
    "cpes": [],
    "created": "2024-05-21T14:19:40.363000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qrtr: fix OOB Read in qrtr_endpoint_post\n\nSyzbot reported slab-out-of-bounds Read in\nqrtr_endpoint_post. The problem was in wrong\n_size_ type:\n\n\tif (len != ALIGN(size, 4) + hdrlen)\n\t\tgoto err;\n\nIf size from qrtr_hdr is 4294967293 (0xfffffffd), the result of\nALIGN(size, 4) will be 0. In case of len == hdrlen and size == 4294967293\nin header this check won't fail and\n\n\tskb_put_data(skb, data + hdrlen, size);\n\nwill read out of bound from data, which is hdrlen allocated block.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/47xxx/CVE-2021-47240.json",
    "references": [
      "https://git.kernel.org/stable/c/19892ab9c9d838e2e5a7744d36e4bb8b7c3292fe",
      "https://git.kernel.org/stable/c/26b8d10703a9be45d6097946b2b4011f7dd2c56f",
      "https://git.kernel.org/stable/c/960b08dd36de1e341e3eb43d1c547513e338f4f8",
      "https://git.kernel.org/stable/c/ad9d24c9429e2159d1e279dc3a83191ccb4daf1d",
      "https://git.kernel.org/stable/c/f8111c0d7ed42ede41a3d0d393b104de0730a8a6"
    ],
    "title": "net: qrtr: fix OOB Read in qrtr_endpoint_post",
    "updated": "2024-08-04T05:32:08.052000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-21T15:15:13.177000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qrtr: fix OOB Read in qrtr_endpoint_post\n\nSyzbot reported slab-out-of-bounds Read in\nqrtr_endpoint_post. The problem was in wrong\n_size_ type:\n\n\tif (len != ALIGN(size, 4) + hdrlen)\n\t\tgoto err;\n\nIf size from qrtr_hdr is 4294967293 (0xfffffffd), the result of\nALIGN(size, 4) will be 0. In case of len == hdrlen and size == 4294967293\nin header this check won't fail and\n\n\tskb_put_data(skb, data + hdrlen, size);\n\nwill read out of bound from data, which is hdrlen allocated block.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-47240.json",
    "references": [
      "https://git.kernel.org/stable/c/19892ab9c9d838e2e5a7744d36e4bb8b7c3292fe",
      "https://git.kernel.org/stable/c/26b8d10703a9be45d6097946b2b4011f7dd2c56f",
      "https://git.kernel.org/stable/c/960b08dd36de1e341e3eb43d1c547513e338f4f8",
      "https://git.kernel.org/stable/c/ad9d24c9429e2159d1e279dc3a83191ccb4daf1d",
      "https://git.kernel.org/stable/c/f8111c0d7ed42ede41a3d0d393b104de0730a8a6"
    ],
    "title": null,
    "updated": "2024-05-21T16:54:26.047000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-21T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qrtr: fix OOB Read in qrtr_endpoint_post\n\nSyzbot reported slab-out-of-bounds Read in\nqrtr_endpoint_post. The problem was in wrong\n_size_ type:\n\n\tif (len != ALIGN(size, 4) + hdrlen)\n\t\tgoto err;\n\nIf size from qrtr_hdr is 4294967293 (0xfffffffd), the result of\nALIGN(size, 4) will be 0. In case of len == hdrlen and size == 4294967293\nin header this check won't fail and\n\n\tskb_put_data(skb, data + hdrlen, size);\n\nwill read out of bound from data, which is hdrlen allocated block.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.1,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/19892ab9c9d838e2e5a7744d36e4bb8b7c3292fe",
        "https://git.kernel.org/stable/c/26b8d10703a9be45d6097946b2b4011f7dd2c56f",
        "https://git.kernel.org/stable/c/960b08dd36de1e341e3eb43d1c547513e338f4f8",
        "https://git.kernel.org/stable/c/ad9d24c9429e2159d1e279dc3a83191ccb4daf1d",
        "https://git.kernel.org/stable/c/f8111c0d7ed42ede41a3d0d393b104de0730a8a6",
        "https://lore.kernel.org/linux-cve-announce/2024052141-CVE-2021-47240-b6f9@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-47240",
        "https://www.cve.org/CVERecord?id=CVE-2021-47240"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "net: qrtr: fix OOB Read in qrtr_endpoint_post",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T05:32:08.052000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-125"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-21T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet: qrtr: fix OOB Read in qrtr_endpoint_post\nSyzbot reported slab-out-of-bounds Read in\nqrtr_endpoint_post. The problem was in wrong\n_size_ type:\nif (len != ALIGN(size, 4) + hdrlen)\ngoto err;\nIf size from qrtr_hdr is 4294967293 (0xfffffffd), the result of\nALIGN(size, 4) will be 0. In case of len == hdrlen and size == 4294967293\nin header this check won't fail and\nskb_put_data(skb, data + hdrlen, size);\nwill read out of bound from data, which is hdrlen allocated block.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.1,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2021/CVE-2021-47240.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024052141-CVE-2021-47240-b6f9@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-47240",
      "https://www.cve.org/CVERecord?id=CVE-2021-47240"
    ],
    "title": "kernel: net: qrtr: fix OOB Read in qrtr_endpoint_post",
    "updated": "2024-05-21T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-125"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-21T14:19:40.363000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qrtr: fix OOB Read in qrtr_endpoint_post\n\nSyzbot reported slab-out-of-bounds Read in\nqrtr_endpoint_post. The problem was in wrong\n_size_ type:\n\n\tif (len != ALIGN(size, 4) + hdrlen)\n\t\tgoto err;\n\nIf size from qrtr_hdr is 4294967293 (0xfffffffd), the result of\nALIGN(size, 4) will be 0. In case of len == hdrlen and size == 4294967293\nin header this check won't fail and\n\n\tskb_put_data(skb, data + hdrlen, size);\n\nwill read out of bound from data, which is hdrlen allocated block.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/19892ab9c9d838e2e5a7744d36e4bb8b7c3292fe",
      "https://git.kernel.org/stable/c/26b8d10703a9be45d6097946b2b4011f7dd2c56f",
      "https://git.kernel.org/stable/c/960b08dd36de1e341e3eb43d1c547513e338f4f8",
      "https://git.kernel.org/stable/c/ad9d24c9429e2159d1e279dc3a83191ccb4daf1d",
      "https://git.kernel.org/stable/c/f8111c0d7ed42ede41a3d0d393b104de0730a8a6"
    ],
    "title": "net: qrtr: fix OOB Read in qrtr_endpoint_post",
    "updated": "2024-08-04T05:32:08.052000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2021/47xxx/CVE-2021-47240.json",
    "weaknesses": []
  }
}