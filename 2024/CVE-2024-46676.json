{
  "cve": "CVE-2024-46676",
  "mitre": {
    "cpes": [],
    "created": "2024-09-13T05:29:11.598000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Add poll mod list filling check\n\nIn case of im_protocols value is 1 and tm_protocols value is 0 this\ncombination successfully passes the check\n'if (!im_protocols && !tm_protocols)' in the nfc_start_poll().\nBut then after pn533_poll_create_mod_list() call in pn533_start_poll()\npoll mod list will remain empty and dev->poll_mod_count will remain 0\nwhich lead to division by zero.\n\nNormally no im protocol has value 1 in the mask, so this combination is\nnot expected by driver. But these protocol values actually come from\nuserspace via Netlink interface (NFC_CMD_START_POLL operation). So a\nbroken or malicious program may pass a message containing a \"bad\"\ncombination of protocol parameter values so that dev->poll_mod_count\nis not incremented inside pn533_poll_create_mod_list(), thus leading\nto division by zero.\nCall trace looks like:\nnfc_genl_start_poll()\n  nfc_start_poll()\n    ->start_poll()\n    pn533_start_poll()\n\nAdd poll mod list filling check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/46xxx/CVE-2024-46676.json",
    "references": [
      "https://git.kernel.org/stable/c/56ad559cf6d87f250a8d203b555dfc3716afa946",
      "https://git.kernel.org/stable/c/64513d0e546a1f19e390f7e5eba3872bfcbdacf5",
      "https://git.kernel.org/stable/c/7535db0624a2dede374c42040808ad9a9101d723",
      "https://git.kernel.org/stable/c/7ecd3dd4f8eecd3309432156ccfe24768e009ec4",
      "https://git.kernel.org/stable/c/8ddaea033de051ed61b39f6b69ad54a411172b33",
      "https://git.kernel.org/stable/c/c5e05237444f32f6cfe5d907603a232c77a08b31",
      "https://git.kernel.org/stable/c/febccb39255f9df35527b88c953b2e0deae50e53"
    ],
    "title": "nfc: pn533: Add poll mod list filling check",
    "updated": "2024-09-29T15:44:28.585000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
      "cpe:2.3:o:linux:linux_kernel:6.11:rc1:*:*:*:*:*:*",
      "cpe:2.3:o:linux:linux_kernel:6.11:rc2:*:*:*:*:*:*",
      "cpe:2.3:o:linux:linux_kernel:6.11:rc3:*:*:*:*:*:*",
      "cpe:2.3:o:linux:linux_kernel:6.11:rc4:*:*:*:*:*:*",
      "cpe:2.3:o:linux:linux_kernel:6.11:rc5:*:*:*:*:*:*"
    ],
    "created": "2024-09-13T06:15:12.223000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Add poll mod list filling check\n\nIn case of im_protocols value is 1 and tm_protocols value is 0 this\ncombination successfully passes the check\n'if (!im_protocols && !tm_protocols)' in the nfc_start_poll().\nBut then after pn533_poll_create_mod_list() call in pn533_start_poll()\npoll mod list will remain empty and dev->poll_mod_count will remain 0\nwhich lead to division by zero.\n\nNormally no im protocol has value 1 in the mask, so this combination is\nnot expected by driver. But these protocol values actually come from\nuserspace via Netlink interface (NFC_CMD_START_POLL operation). So a\nbroken or malicious program may pass a message containing a \"bad\"\ncombination of protocol parameter values so that dev->poll_mod_count\nis not incremented inside pn533_poll_create_mod_list(), thus leading\nto division by zero.\nCall trace looks like:\nnfc_genl_start_poll()\n  nfc_start_poll()\n    ->start_poll()\n    pn533_start_poll()\n\nAdd poll mod list filling check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-46676.json",
    "references": [
      "https://git.kernel.org/stable/c/56ad559cf6d87f250a8d203b555dfc3716afa946",
      "https://git.kernel.org/stable/c/64513d0e546a1f19e390f7e5eba3872bfcbdacf5",
      "https://git.kernel.org/stable/c/7535db0624a2dede374c42040808ad9a9101d723",
      "https://git.kernel.org/stable/c/7ecd3dd4f8eecd3309432156ccfe24768e009ec4",
      "https://git.kernel.org/stable/c/8ddaea033de051ed61b39f6b69ad54a411172b33",
      "https://git.kernel.org/stable/c/c5e05237444f32f6cfe5d907603a232c77a08b31",
      "https://git.kernel.org/stable/c/febccb39255f9df35527b88c953b2e0deae50e53"
    ],
    "title": null,
    "updated": "2024-09-23T14:42:38.230000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-369"
    ]
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-13T05:45:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Add poll mod list filling check\n\nIn case of im_protocols value is 1 and tm_protocols value is 0 this\ncombination successfully passes the check\n'if (!im_protocols && !tm_protocols)' in the nfc_start_poll().\nBut then after pn533_poll_create_mod_list() call in pn533_start_poll()\npoll mod list will remain empty and dev->poll_mod_count will remain 0\nwhich lead to division by zero.\n\nNormally no im protocol has value 1 in the mask, so this combination is\nnot expected by driver. But these protocol values actually come from\nuserspace via Netlink interface (NFC_CMD_START_POLL operation). So a\nbroken or malicious program may pass a message containing a \"bad\"\ncombination of protocol parameter values so that dev->poll_mod_count\nis not incremented inside pn533_poll_create_mod_list(), thus leading\nto division by zero.\nCall trace looks like:\nnfc_genl_start_poll()\n  nfc_start_poll()\n    ->start_poll()\n    pn533_start_poll()\n\nAdd poll mod list filling check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "nfc: pn533: Add poll mod list filling check",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/56ad559cf6d87f250a8d203b555dfc3716afa946",
                "https://git.kernel.org/stable/c/64513d0e546a1f19e390f7e5eba3872bfcbdacf5",
                "https://git.kernel.org/stable/c/7535db0624a2dede374c42040808ad9a9101d723",
                "https://git.kernel.org/stable/c/7ecd3dd4f8eecd3309432156ccfe24768e009ec4",
                "https://git.kernel.org/stable/c/8ddaea033de051ed61b39f6b69ad54a411172b33",
                "https://git.kernel.org/stable/c/c5e05237444f32f6cfe5d907603a232c77a08b31",
                "https://git.kernel.org/stable/c/febccb39255f9df35527b88c953b2e0deae50e53"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "761ec7cb-f529-4754-9c2d-657a36cc82bd"
      },
      {
        "created": "2024-09-13T23:30:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024091335-CVE-2024-46676-0b05@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2024-46676",
                "https://www.cve.org/CVERecord?id=CVE-2024-46676"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Low",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "da187ece-96f8-4963-b4d7-b7a0fa0326dd"
      },
      {
        "created": "2024-09-23T15:00:00+00:00",
        "data": [
          {
            "details": [
              "linux",
              "linux$PRODUCT$linux_kernel"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "CWE-369"
              ],
              "removed": []
            },
            "type": "weaknesses"
          },
          {
            "details": {
              "added": [
                "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                "cpe:2.3:o:linux:linux_kernel:6.11:rc1:*:*:*:*:*:*",
                "cpe:2.3:o:linux:linux_kernel:6.11:rc2:*:*:*:*:*:*",
                "cpe:2.3:o:linux:linux_kernel:6.11:rc3:*:*:*:*:*:*",
                "cpe:2.3:o:linux:linux_kernel:6.11:rc4:*:*:*:*:*:*",
                "cpe:2.3:o:linux:linux_kernel:6.11:rc5:*:*:*:*:*:*"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "linux",
                "linux$PRODUCT$linux_kernel"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "89f735b9-036a-4e7b-a5c9-1e452d9199e3"
      },
      {
        "created": "2024-09-29T16:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "91f8e9b8-710d-4b0f-a092-82d9538b81da"
      }
    ],
    "cpes": {
      "data": [
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
        "cpe:2.3:o:linux:linux_kernel:6.11:rc1:*:*:*:*:*:*",
        "cpe:2.3:o:linux:linux_kernel:6.11:rc2:*:*:*:*:*:*",
        "cpe:2.3:o:linux:linux_kernel:6.11:rc3:*:*:*:*:*:*",
        "cpe:2.3:o:linux:linux_kernel:6.11:rc4:*:*:*:*:*:*",
        "cpe:2.3:o:linux:linux_kernel:6.11:rc5:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2024-09-13T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Add poll mod list filling check\n\nIn case of im_protocols value is 1 and tm_protocols value is 0 this\ncombination successfully passes the check\n'if (!im_protocols && !tm_protocols)' in the nfc_start_poll().\nBut then after pn533_poll_create_mod_list() call in pn533_start_poll()\npoll mod list will remain empty and dev->poll_mod_count will remain 0\nwhich lead to division by zero.\n\nNormally no im protocol has value 1 in the mask, so this combination is\nnot expected by driver. But these protocol values actually come from\nuserspace via Netlink interface (NFC_CMD_START_POLL operation). So a\nbroken or malicious program may pass a message containing a \"bad\"\ncombination of protocol parameter values so that dev->poll_mod_count\nis not incremented inside pn533_poll_create_mod_list(), thus leading\nto division by zero.\nCall trace looks like:\nnfc_genl_start_poll()\n  nfc_start_poll()\n    ->start_poll()\n    pn533_start_poll()\n\nAdd poll mod list filling check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/56ad559cf6d87f250a8d203b555dfc3716afa946",
        "https://git.kernel.org/stable/c/64513d0e546a1f19e390f7e5eba3872bfcbdacf5",
        "https://git.kernel.org/stable/c/7535db0624a2dede374c42040808ad9a9101d723",
        "https://git.kernel.org/stable/c/7ecd3dd4f8eecd3309432156ccfe24768e009ec4",
        "https://git.kernel.org/stable/c/8ddaea033de051ed61b39f6b69ad54a411172b33",
        "https://git.kernel.org/stable/c/c5e05237444f32f6cfe5d907603a232c77a08b31",
        "https://git.kernel.org/stable/c/febccb39255f9df35527b88c953b2e0deae50e53",
        "https://lore.kernel.org/linux-cve-announce/2024091335-CVE-2024-46676-0b05@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-46676",
        "https://www.cve.org/CVERecord?id=CVE-2024-46676"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "nfc: pn533: Add poll mod list filling check",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-29T15:44:28.585000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-369"
      ],
      "providers": [
        "nvd"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-09-13T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nnfc: pn533: Add poll mod list filling check\nIn case of im_protocols value is 1 and tm_protocols value is 0 this\ncombination successfully passes the check\n'if (!im_protocols && !tm_protocols)' in the nfc_start_poll().\nBut then after pn533_poll_create_mod_list() call in pn533_start_poll()\npoll mod list will remain empty and dev->poll_mod_count will remain 0\nwhich lead to division by zero.\nNormally no im protocol has value 1 in the mask, so this combination is\nnot expected by driver. But these protocol values actually come from\nuserspace via Netlink interface (NFC_CMD_START_POLL operation). So a\nbroken or malicious program may pass a message containing a \"bad\"\ncombination of protocol parameter values so that dev->poll_mod_count\nis not incremented inside pn533_poll_create_mod_list(), thus leading\nto division by zero.\nCall trace looks like:\nnfc_genl_start_poll()\nnfc_start_poll()\n->start_poll()\npn533_start_poll()\nAdd poll mod list filling check.\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-46676.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024091335-CVE-2024-46676-0b05@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-46676",
      "https://www.cve.org/CVERecord?id=CVE-2024-46676"
    ],
    "title": "kernel: nfc: pn533: Add poll mod list filling check",
    "updated": "2024-09-13T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-09-13T05:29:11.598000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Add poll mod list filling check\n\nIn case of im_protocols value is 1 and tm_protocols value is 0 this\ncombination successfully passes the check\n'if (!im_protocols && !tm_protocols)' in the nfc_start_poll().\nBut then after pn533_poll_create_mod_list() call in pn533_start_poll()\npoll mod list will remain empty and dev->poll_mod_count will remain 0\nwhich lead to division by zero.\n\nNormally no im protocol has value 1 in the mask, so this combination is\nnot expected by driver. But these protocol values actually come from\nuserspace via Netlink interface (NFC_CMD_START_POLL operation). So a\nbroken or malicious program may pass a message containing a \"bad\"\ncombination of protocol parameter values so that dev->poll_mod_count\nis not incremented inside pn533_poll_create_mod_list(), thus leading\nto division by zero.\nCall trace looks like:\nnfc_genl_start_poll()\n  nfc_start_poll()\n    ->start_poll()\n    pn533_start_poll()\n\nAdd poll mod list filling check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "nfc: pn533: Add poll mod list filling check",
    "updated": "2024-09-29T15:44:18.331000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/46xxx/CVE-2024-46676.json",
    "weaknesses": []
  }
}