{
  "cve": "CVE-2024-36000",
  "mitre": {
    "cpes": [],
    "created": "2024-05-20T09:48:02.318000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: fix missing hugetlb_lock for resv uncharge\n\nThere is a recent report on UFFDIO_COPY over hugetlb:\n\nhttps://lore.kernel.org/all/000000000000ee06de0616177560@google.com/\n\n350:\tlockdep_assert_held(&hugetlb_lock);\n\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/36xxx/CVE-2024-36000.json",
    "references": [
      "https://git.kernel.org/stable/c/4c806333efea1000a2a9620926f560ad2e1ca7cc",
      "https://git.kernel.org/stable/c/538faabf31e9c53d8c870d114846fda958a0de10",
      "https://git.kernel.org/stable/c/b76b46902c2d0395488c8412e1116c2486cdfcb2",
      "https://git.kernel.org/stable/c/f6c5d21db16a0910152ec8aa9d5a7aed72694505"
    ],
    "title": "mm/hugetlb: fix missing hugetlb_lock for resv uncharge",
    "updated": "2024-08-02T03:30:12.529000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-20T10:15:14.163000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: fix missing hugetlb_lock for resv uncharge\n\nThere is a recent report on UFFDIO_COPY over hugetlb:\n\nhttps://lore.kernel.org/all/000000000000ee06de0616177560@google.com/\n\n350:\tlockdep_assert_held(&hugetlb_lock);\n\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-36000.json",
    "references": [
      "https://git.kernel.org/stable/c/4c806333efea1000a2a9620926f560ad2e1ca7cc",
      "https://git.kernel.org/stable/c/538faabf31e9c53d8c870d114846fda958a0de10",
      "https://git.kernel.org/stable/c/b76b46902c2d0395488c8412e1116c2486cdfcb2",
      "https://git.kernel.org/stable/c/f6c5d21db16a0910152ec8aa9d5a7aed72694505"
    ],
    "title": null,
    "updated": "2024-05-20T13:00:04.957000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-08-07T10:30:00+00:00",
        "data": [
          {
            "details": [
              "redhat",
              "redhat$PRODUCT$rhel_aus",
              "redhat$PRODUCT$rhel_e4s",
              "redhat$PRODUCT$rhel_tus"
            ],
            "type": "first_time"
          },
          {
            "details": {
              "added": [
                "cpe:/o:redhat:rhel_aus:8.6",
                "cpe:/o:redhat:rhel_e4s:8.6",
                "cpe:/o:redhat:rhel_tus:8.6"
              ],
              "removed": []
            },
            "type": "cpes"
          },
          {
            "details": {
              "added": [
                "redhat",
                "redhat$PRODUCT$rhel_aus",
                "redhat$PRODUCT$rhel_e4s",
                "redhat$PRODUCT$rhel_tus"
              ],
              "removed": []
            },
            "type": "vendors"
          }
        ],
        "id": "401e124b-7e17-4652-96ad-c30462d972fa"
      }
    ],
    "cpes": {
      "data": [
        "cpe:/o:redhat:rhel_aus:8.6",
        "cpe:/o:redhat:rhel_e4s:8.6",
        "cpe:/o:redhat:rhel_tus:8.6"
      ],
      "providers": [
        "redhat"
      ]
    },
    "created": {
      "data": "2024-05-20T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: fix missing hugetlb_lock for resv uncharge\n\nThere is a recent report on UFFDIO_COPY over hugetlb:\n\nhttps://lore.kernel.org/all/000000000000ee06de0616177560@google.com/\n\n350:\tlockdep_assert_held(&hugetlb_lock);\n\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/4c806333efea1000a2a9620926f560ad2e1ca7cc",
        "https://git.kernel.org/stable/c/538faabf31e9c53d8c870d114846fda958a0de10",
        "https://git.kernel.org/stable/c/b76b46902c2d0395488c8412e1116c2486cdfcb2",
        "https://git.kernel.org/stable/c/f6c5d21db16a0910152ec8aa9d5a7aed72694505",
        "https://lore.kernel.org/linux-cve-announce/2024052023-CVE-2024-36000-cfc4@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-36000",
        "https://www.cve.org/CVERecord?id=CVE-2024-36000"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "mm/hugetlb: fix missing hugetlb_lock for resv uncharge",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T03:30:12.529000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$rhel_aus",
        "redhat$PRODUCT$rhel_e4s",
        "redhat$PRODUCT$rhel_tus"
      ],
      "providers": [
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/o:redhat:rhel_aus:8.6",
      "cpe:/o:redhat:rhel_e4s:8.6",
      "cpe:/o:redhat:rhel_tus:8.6"
    ],
    "created": "2024-05-20T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nmm/hugetlb: fix missing hugetlb_lock for resv uncharge\nThere is a recent report on UFFDIO_COPY over hugetlb:\nhttps://lore.kernel.org/all/000000000000ee06de0616177560@google.com/\n350:lockdep_assert_held(&hugetlb_lock);\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-36000.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024052023-CVE-2024-36000-cfc4@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-36000",
      "https://www.cve.org/CVERecord?id=CVE-2024-36000"
    ],
    "title": "kernel: mm/hugetlb: fix missing hugetlb_lock for resv uncharge",
    "updated": "2024-05-20T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$rhel_aus",
      "redhat$PRODUCT$rhel_e4s",
      "redhat$PRODUCT$rhel_tus"
    ],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-20T09:48:02.318000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: fix missing hugetlb_lock for resv uncharge\n\nThere is a recent report on UFFDIO_COPY over hugetlb:\n\nhttps://lore.kernel.org/all/000000000000ee06de0616177560@google.com/\n\n350:\tlockdep_assert_held(&hugetlb_lock);\n\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/4c806333efea1000a2a9620926f560ad2e1ca7cc",
      "https://git.kernel.org/stable/c/538faabf31e9c53d8c870d114846fda958a0de10",
      "https://git.kernel.org/stable/c/b76b46902c2d0395488c8412e1116c2486cdfcb2",
      "https://git.kernel.org/stable/c/f6c5d21db16a0910152ec8aa9d5a7aed72694505"
    ],
    "title": "mm/hugetlb: fix missing hugetlb_lock for resv uncharge",
    "updated": "2024-08-02T03:30:12.529000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/36xxx/CVE-2024-36000.json",
    "weaknesses": []
  }
}