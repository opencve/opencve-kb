{
  "cve": "CVE-2018-10407",
  "mitre": {
    "cpes": [],
    "created": "2018-06-13T22:00:00+00:00",
    "description": "An issue was discovered in Carbon Black Cb Response. A maliciously crafted Universal/fat binary can evade third-party code signing checks. By not completing full inspection of the Universal/fat binary, the user of the third-party tool will believe that the code is signed by Apple, but the malicious unsigned code will execute.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2018/10xxx/CVE-2018-10407.json",
    "references": [
      "https://www.okta.com/security-blog/2018/06/issues-around-third-party-apple-code-signing-checks/"
    ],
    "title": null,
    "updated": "2024-08-05T07:39:07.463000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:carbonblack:carbon_black_cb:*:*:*:*:*:*:*:*"
    ],
    "created": "2018-06-13T22:29:00.457000+00:00",
    "description": "An issue was discovered in Carbon Black Cb Response. A maliciously crafted Universal/fat binary can evade third-party code signing checks. By not completing full inspection of the Universal/fat binary, the user of the third-party tool will believe that the code is signed by Apple, but the malicious unsigned code will execute.",
    "metrics": {
      "cvssV2_0": {
        "score": 4.3,
        "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      },
      "cvssV3_0": {
        "score": 5.5,
        "vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2018/CVE-2018-10407.json",
    "references": [
      "https://www.okta.com/security-blog/2018/06/issues-around-third-party-apple-code-signing-checks/"
    ],
    "title": null,
    "updated": "2018-08-10T13:52:53.027000+00:00",
    "vendors": [
      "carbonblack",
      "carbonblack$PRODUCT$carbon_black_cb"
    ],
    "weaknesses": [
      "CWE-347"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:carbonblack:carbon_black_cb:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2018-06-13T22:00:00+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "An issue was discovered in Carbon Black Cb Response. A maliciously crafted Universal/fat binary can evade third-party code signing checks. By not completing full inspection of the Universal/fat binary, the user of the third-party tool will believe that the code is signed by Apple, but the malicious unsigned code will execute.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.3,
          "vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://www.okta.com/security-blog/2018/06/issues-around-third-party-apple-code-signing-checks/"
      ],
      "providers": [
        "mitre",
        "nvd"
      ]
    },
    "title": {
      "data": null,
      "provider": null
    },
    "updated": {
      "data": "2024-08-05T07:39:07.463000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "carbonblack",
        "carbonblack$PRODUCT$carbon_black_cb"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-347"
      ],
      "providers": [
        "nvd"
      ]
    }
  }
}