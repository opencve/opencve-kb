{
  "cve": "CVE-2023-52622",
  "mitre": {
    "cpes": [],
    "created": "2024-03-26T17:19:23.838000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid online resizing failures due to oversized flex bg\n\nWhen we online resize an ext4 filesystem with a oversized flexbg_size,\n\n     mkfs.ext4 -F -G 67108864 $dev -b 4096 100M\n     mount $dev $dir\n     resize2fs $dev 16G\n\nthe following WARN_ON is triggered:\n==================================================================\nWARNING: CPU: 0 PID: 427 at mm/page_alloc.c:4402 __alloc_pages+0x411/0x550\nModules linked in: sg(E)\nCPU: 0 PID: 427 Comm: resize2fs Tainted: G  E  6.6.0-rc5+ #314\nRIP: 0010:__alloc_pages+0x411/0x550\nCall Trace:\n <TASK>\n __kmalloc_large_node+0xa2/0x200\n __kmalloc+0x16e/0x290\n ext4_resize_fs+0x481/0xd80\n __ext4_ioctl+0x1616/0x1d90\n ext4_ioctl+0x12/0x20\n __x64_sys_ioctl+0xf0/0x150\n do_syscall_64+0x3b/0x90\n==================================================================\n\nThis is because flexbg_size is too large and the size of the new_group_data\narray to be allocated exceeds MAX_ORDER. Currently, the minimum value of\nMAX_ORDER is 8, the minimum value of PAGE_SIZE is 4096, the corresponding\nmaximum number of groups that can be allocated is:\n\n (PAGE_SIZE << MAX_ORDER) / sizeof(struct ext4_new_group_data) ≈ 21845\n\nAnd the value that is down-aligned to the power of 2 is 16384. Therefore,\nthis value is defined as MAX_RESIZE_BG, and the number of groups added\neach time does not exceed this value during resizing, and is added multiple\ntimes to complete the online resizing. The difference is that the metadata\nin a flex_bg may be more dispersed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/52xxx/CVE-2023-52622.json",
    "references": [
      "https://git.kernel.org/stable/c/5d1935ac02ca5aee364a449a35e2977ea84509b0",
      "https://git.kernel.org/stable/c/6d2cbf517dcabc093159cf138ad5712c9c7fa954",
      "https://git.kernel.org/stable/c/8b1413dbfe49646eda2c00c0f1144ee9d3368e0c",
      "https://git.kernel.org/stable/c/b183fe8702e78bba3dcef8e7193cab6898abee07",
      "https://git.kernel.org/stable/c/cd1f93ca97a9136989f3bd2bf90696732a2ed644",
      "https://git.kernel.org/stable/c/cfbbb3199e71b63fc26cee0ebff327c47128a1e8",
      "https://git.kernel.org/stable/c/d76c8d7ffe163c6bf2f1ef680b0539c2b3902b90",
      "https://git.kernel.org/stable/c/dc3e0f55bec4410f3d74352c4a7c79f518088ee2",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": "ext4: avoid online resizing failures due to oversized flex bg",
    "updated": "2024-08-02T23:03:21.365000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-03-26T18:15:08.873000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid online resizing failures due to oversized flex bg\n\nWhen we online resize an ext4 filesystem with a oversized flexbg_size,\n\n     mkfs.ext4 -F -G 67108864 $dev -b 4096 100M\n     mount $dev $dir\n     resize2fs $dev 16G\n\nthe following WARN_ON is triggered:\n==================================================================\nWARNING: CPU: 0 PID: 427 at mm/page_alloc.c:4402 __alloc_pages+0x411/0x550\nModules linked in: sg(E)\nCPU: 0 PID: 427 Comm: resize2fs Tainted: G  E  6.6.0-rc5+ #314\nRIP: 0010:__alloc_pages+0x411/0x550\nCall Trace:\n <TASK>\n __kmalloc_large_node+0xa2/0x200\n __kmalloc+0x16e/0x290\n ext4_resize_fs+0x481/0xd80\n __ext4_ioctl+0x1616/0x1d90\n ext4_ioctl+0x12/0x20\n __x64_sys_ioctl+0xf0/0x150\n do_syscall_64+0x3b/0x90\n==================================================================\n\nThis is because flexbg_size is too large and the size of the new_group_data\narray to be allocated exceeds MAX_ORDER. Currently, the minimum value of\nMAX_ORDER is 8, the minimum value of PAGE_SIZE is 4096, the corresponding\nmaximum number of groups that can be allocated is:\n\n (PAGE_SIZE << MAX_ORDER) / sizeof(struct ext4_new_group_data) ≈ 21845\n\nAnd the value that is down-aligned to the power of 2 is 16384. Therefore,\nthis value is defined as MAX_RESIZE_BG, and the number of groups added\neach time does not exceed this value during resizing, and is added multiple\ntimes to complete the online resizing. The difference is that the metadata\nin a flex_bg may be more dispersed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-52622.json",
    "references": [
      "https://git.kernel.org/stable/c/5d1935ac02ca5aee364a449a35e2977ea84509b0",
      "https://git.kernel.org/stable/c/6d2cbf517dcabc093159cf138ad5712c9c7fa954",
      "https://git.kernel.org/stable/c/8b1413dbfe49646eda2c00c0f1144ee9d3368e0c",
      "https://git.kernel.org/stable/c/b183fe8702e78bba3dcef8e7193cab6898abee07",
      "https://git.kernel.org/stable/c/cd1f93ca97a9136989f3bd2bf90696732a2ed644",
      "https://git.kernel.org/stable/c/cfbbb3199e71b63fc26cee0ebff327c47128a1e8",
      "https://git.kernel.org/stable/c/d76c8d7ffe163c6bf2f1ef680b0539c2b3902b90",
      "https://git.kernel.org/stable/c/dc3e0f55bec4410f3d74352c4a7c79f518088ee2",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": null,
    "updated": "2024-06-27T13:15:53.560000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-03-26T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid online resizing failures due to oversized flex bg\n\nWhen we online resize an ext4 filesystem with a oversized flexbg_size,\n\n     mkfs.ext4 -F -G 67108864 $dev -b 4096 100M\n     mount $dev $dir\n     resize2fs $dev 16G\n\nthe following WARN_ON is triggered:\n==================================================================\nWARNING: CPU: 0 PID: 427 at mm/page_alloc.c:4402 __alloc_pages+0x411/0x550\nModules linked in: sg(E)\nCPU: 0 PID: 427 Comm: resize2fs Tainted: G  E  6.6.0-rc5+ #314\nRIP: 0010:__alloc_pages+0x411/0x550\nCall Trace:\n <TASK>\n __kmalloc_large_node+0xa2/0x200\n __kmalloc+0x16e/0x290\n ext4_resize_fs+0x481/0xd80\n __ext4_ioctl+0x1616/0x1d90\n ext4_ioctl+0x12/0x20\n __x64_sys_ioctl+0xf0/0x150\n do_syscall_64+0x3b/0x90\n==================================================================\n\nThis is because flexbg_size is too large and the size of the new_group_data\narray to be allocated exceeds MAX_ORDER. Currently, the minimum value of\nMAX_ORDER is 8, the minimum value of PAGE_SIZE is 4096, the corresponding\nmaximum number of groups that can be allocated is:\n\n (PAGE_SIZE << MAX_ORDER) / sizeof(struct ext4_new_group_data) ≈ 21845\n\nAnd the value that is down-aligned to the power of 2 is 16384. Therefore,\nthis value is defined as MAX_RESIZE_BG, and the number of groups added\neach time does not exceed this value during resizing, and is added multiple\ntimes to complete the online resizing. The difference is that the metadata\nin a flex_bg may be more dispersed.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/5d1935ac02ca5aee364a449a35e2977ea84509b0",
        "https://git.kernel.org/stable/c/6d2cbf517dcabc093159cf138ad5712c9c7fa954",
        "https://git.kernel.org/stable/c/8b1413dbfe49646eda2c00c0f1144ee9d3368e0c",
        "https://git.kernel.org/stable/c/b183fe8702e78bba3dcef8e7193cab6898abee07",
        "https://git.kernel.org/stable/c/cd1f93ca97a9136989f3bd2bf90696732a2ed644",
        "https://git.kernel.org/stable/c/cfbbb3199e71b63fc26cee0ebff327c47128a1e8",
        "https://git.kernel.org/stable/c/d76c8d7ffe163c6bf2f1ef680b0539c2b3902b90",
        "https://git.kernel.org/stable/c/dc3e0f55bec4410f3d74352c4a7c79f518088ee2",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
        "https://lore.kernel.org/linux-cve-announce/20240326171931.1354035-5-lee@kernel.org/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-52622",
        "https://www.cve.org/CVERecord?id=CVE-2023-52622"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "ext4: avoid online resizing failures due to oversized flex bg",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T23:03:21.365000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-131"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-03-26T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\next4: avoid online resizing failures due to oversized flex bg\nWhen we online resize an ext4 filesystem with a oversized flexbg_size,\nmkfs.ext4 -F -G 67108864 $dev -b 4096 100M\nmount $dev $dir\nresize2fs $dev 16G\nthe following WARN_ON is triggered:\n==================================================================\nWARNING: CPU: 0 PID: 427 at mm/page_alloc.c:4402 __alloc_pages+0x411/0x550\nModules linked in: sg(E)\nCPU: 0 PID: 427 Comm: resize2fs Tainted: G  E  6.6.0-rc5+ #314\nRIP: 0010:__alloc_pages+0x411/0x550\nCall Trace:\n<TASK>\n__kmalloc_large_node+0xa2/0x200\n__kmalloc+0x16e/0x290\next4_resize_fs+0x481/0xd80\n__ext4_ioctl+0x1616/0x1d90\next4_ioctl+0x12/0x20\n__x64_sys_ioctl+0xf0/0x150\ndo_syscall_64+0x3b/0x90\n==================================================================\nThis is because flexbg_size is too large and the size of the new_group_data\narray to be allocated exceeds MAX_ORDER. Currently, the minimum value of\nMAX_ORDER is 8, the minimum value of PAGE_SIZE is 4096, the corresponding\nmaximum number of groups that can be allocated is:\n(PAGE_SIZE << MAX_ORDER) / sizeof(struct ext4_new_group_data) ≈ 21845\nAnd the value that is down-aligned to the power of 2 is 16384. Therefore,\nthis value is defined as MAX_RESIZE_BG, and the number of groups added\neach time does not exceed this value during resizing, and is added multiple\ntimes to complete the online resizing. The difference is that the metadata\nin a flex_bg may be more dispersed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2023/CVE-2023-52622.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/20240326171931.1354035-5-lee@kernel.org/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-52622",
      "https://www.cve.org/CVERecord?id=CVE-2023-52622"
    ],
    "title": "kernel: ext4: avoid online resizing failures due to oversized flex bg",
    "updated": "2024-03-26T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-131"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-03-26T17:19:23.838000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid online resizing failures due to oversized flex bg\n\nWhen we online resize an ext4 filesystem with a oversized flexbg_size,\n\n     mkfs.ext4 -F -G 67108864 $dev -b 4096 100M\n     mount $dev $dir\n     resize2fs $dev 16G\n\nthe following WARN_ON is triggered:\n==================================================================\nWARNING: CPU: 0 PID: 427 at mm/page_alloc.c:4402 __alloc_pages+0x411/0x550\nModules linked in: sg(E)\nCPU: 0 PID: 427 Comm: resize2fs Tainted: G  E  6.6.0-rc5+ #314\nRIP: 0010:__alloc_pages+0x411/0x550\nCall Trace:\n <TASK>\n __kmalloc_large_node+0xa2/0x200\n __kmalloc+0x16e/0x290\n ext4_resize_fs+0x481/0xd80\n __ext4_ioctl+0x1616/0x1d90\n ext4_ioctl+0x12/0x20\n __x64_sys_ioctl+0xf0/0x150\n do_syscall_64+0x3b/0x90\n==================================================================\n\nThis is because flexbg_size is too large and the size of the new_group_data\narray to be allocated exceeds MAX_ORDER. Currently, the minimum value of\nMAX_ORDER is 8, the minimum value of PAGE_SIZE is 4096, the corresponding\nmaximum number of groups that can be allocated is:\n\n (PAGE_SIZE << MAX_ORDER) / sizeof(struct ext4_new_group_data) ≈ 21845\n\nAnd the value that is down-aligned to the power of 2 is 16384. Therefore,\nthis value is defined as MAX_RESIZE_BG, and the number of groups added\neach time does not exceed this value during resizing, and is added multiple\ntimes to complete the online resizing. The difference is that the metadata\nin a flex_bg may be more dispersed.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/5d1935ac02ca5aee364a449a35e2977ea84509b0",
      "https://git.kernel.org/stable/c/6d2cbf517dcabc093159cf138ad5712c9c7fa954",
      "https://git.kernel.org/stable/c/8b1413dbfe49646eda2c00c0f1144ee9d3368e0c",
      "https://git.kernel.org/stable/c/b183fe8702e78bba3dcef8e7193cab6898abee07",
      "https://git.kernel.org/stable/c/cd1f93ca97a9136989f3bd2bf90696732a2ed644",
      "https://git.kernel.org/stable/c/cfbbb3199e71b63fc26cee0ebff327c47128a1e8",
      "https://git.kernel.org/stable/c/d76c8d7ffe163c6bf2f1ef680b0539c2b3902b90",
      "https://git.kernel.org/stable/c/dc3e0f55bec4410f3d74352c4a7c79f518088ee2",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": "ext4: avoid online resizing failures due to oversized flex bg",
    "updated": "2024-08-02T23:03:21.365000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2023/52xxx/CVE-2023-52622.json",
    "weaknesses": []
  }
}