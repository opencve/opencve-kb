{
  "cve": "CVE-2021-47343",
  "mitre": {
    "cpes": [],
    "created": "2024-05-21T14:35:50.293000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm btree remove: assign new_root only when removal succeeds\n\nremove_raw() in dm_btree_remove() may fail due to IO read error\n(e.g. read the content of origin block fails during shadowing),\nand the value of shadow_spine::root is uninitialized, but\nthe uninitialized value is still assign to new_root in the\nend of dm_btree_remove().\n\nFor dm-thin, the value of pmd->details_root or pmd->root will become\nan uninitialized value, so if trying to read details_info tree again\nout-of-bound memory may occur as showed below:\n\n  general protection fault, probably for non-canonical address 0x3fdcb14c8d7520\n  CPU: 4 PID: 515 Comm: dmsetup Not tainted 5.13.0-rc6\n  Hardware name: QEMU Standard PC\n  RIP: 0010:metadata_ll_load_ie+0x14/0x30\n  Call Trace:\n   sm_metadata_count_is_more_than_one+0xb9/0xe0\n   dm_tm_shadow_block+0x52/0x1c0\n   shadow_step+0x59/0xf0\n   remove_raw+0xb2/0x170\n   dm_btree_remove+0xf4/0x1c0\n   dm_pool_delete_thin_device+0xc3/0x140\n   pool_message+0x218/0x2b0\n   target_message+0x251/0x290\n   ctl_ioctl+0x1c4/0x4d0\n   dm_ctl_ioctl+0xe/0x20\n   __x64_sys_ioctl+0x7b/0xb0\n   do_syscall_64+0x40/0xb0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nFixing it by only assign new_root when removal succeeds",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/47xxx/CVE-2021-47343.json",
    "references": [
      "https://git.kernel.org/stable/c/4c84b3e0728ffe10d89c633694c35a02b5c477dc",
      "https://git.kernel.org/stable/c/73f27adaa73e3057a9ec464e33c4f54d34ea5de3",
      "https://git.kernel.org/stable/c/89bf942314b78d454db92427201421b5dec132d9",
      "https://git.kernel.org/stable/c/8fbae4a1bdb5b889490cdee929e68540151536e5",
      "https://git.kernel.org/stable/c/964d57d1962d7e68f0f578f05d9ae4a104d74851",
      "https://git.kernel.org/stable/c/ad365e9351ac2b450e7e79932ff6abf59342d91a",
      "https://git.kernel.org/stable/c/b6e58b5466b2959f83034bead2e2e1395cca8aeb",
      "https://git.kernel.org/stable/c/ba47e65a5de3e0e8270301a409fc63d3129fdb9e",
      "https://git.kernel.org/stable/c/c154775619186781aaf8a99333ac07437a1768d5"
    ],
    "title": "dm btree remove: assign new_root only when removal succeeds",
    "updated": "2024-08-04T05:32:08.519000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-21T15:15:20.993000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm btree remove: assign new_root only when removal succeeds\n\nremove_raw() in dm_btree_remove() may fail due to IO read error\n(e.g. read the content of origin block fails during shadowing),\nand the value of shadow_spine::root is uninitialized, but\nthe uninitialized value is still assign to new_root in the\nend of dm_btree_remove().\n\nFor dm-thin, the value of pmd->details_root or pmd->root will become\nan uninitialized value, so if trying to read details_info tree again\nout-of-bound memory may occur as showed below:\n\n  general protection fault, probably for non-canonical address 0x3fdcb14c8d7520\n  CPU: 4 PID: 515 Comm: dmsetup Not tainted 5.13.0-rc6\n  Hardware name: QEMU Standard PC\n  RIP: 0010:metadata_ll_load_ie+0x14/0x30\n  Call Trace:\n   sm_metadata_count_is_more_than_one+0xb9/0xe0\n   dm_tm_shadow_block+0x52/0x1c0\n   shadow_step+0x59/0xf0\n   remove_raw+0xb2/0x170\n   dm_btree_remove+0xf4/0x1c0\n   dm_pool_delete_thin_device+0xc3/0x140\n   pool_message+0x218/0x2b0\n   target_message+0x251/0x290\n   ctl_ioctl+0x1c4/0x4d0\n   dm_ctl_ioctl+0xe/0x20\n   __x64_sys_ioctl+0x7b/0xb0\n   do_syscall_64+0x40/0xb0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nFixing it by only assign new_root when removal succeeds",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-47343.json",
    "references": [
      "https://git.kernel.org/stable/c/4c84b3e0728ffe10d89c633694c35a02b5c477dc",
      "https://git.kernel.org/stable/c/73f27adaa73e3057a9ec464e33c4f54d34ea5de3",
      "https://git.kernel.org/stable/c/89bf942314b78d454db92427201421b5dec132d9",
      "https://git.kernel.org/stable/c/8fbae4a1bdb5b889490cdee929e68540151536e5",
      "https://git.kernel.org/stable/c/964d57d1962d7e68f0f578f05d9ae4a104d74851",
      "https://git.kernel.org/stable/c/ad365e9351ac2b450e7e79932ff6abf59342d91a",
      "https://git.kernel.org/stable/c/b6e58b5466b2959f83034bead2e2e1395cca8aeb",
      "https://git.kernel.org/stable/c/ba47e65a5de3e0e8270301a409fc63d3129fdb9e",
      "https://git.kernel.org/stable/c/c154775619186781aaf8a99333ac07437a1768d5"
    ],
    "title": null,
    "updated": "2024-05-21T16:54:26.047000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-21T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm btree remove: assign new_root only when removal succeeds\n\nremove_raw() in dm_btree_remove() may fail due to IO read error\n(e.g. read the content of origin block fails during shadowing),\nand the value of shadow_spine::root is uninitialized, but\nthe uninitialized value is still assign to new_root in the\nend of dm_btree_remove().\n\nFor dm-thin, the value of pmd->details_root or pmd->root will become\nan uninitialized value, so if trying to read details_info tree again\nout-of-bound memory may occur as showed below:\n\n  general protection fault, probably for non-canonical address 0x3fdcb14c8d7520\n  CPU: 4 PID: 515 Comm: dmsetup Not tainted 5.13.0-rc6\n  Hardware name: QEMU Standard PC\n  RIP: 0010:metadata_ll_load_ie+0x14/0x30\n  Call Trace:\n   sm_metadata_count_is_more_than_one+0xb9/0xe0\n   dm_tm_shadow_block+0x52/0x1c0\n   shadow_step+0x59/0xf0\n   remove_raw+0xb2/0x170\n   dm_btree_remove+0xf4/0x1c0\n   dm_pool_delete_thin_device+0xc3/0x140\n   pool_message+0x218/0x2b0\n   target_message+0x251/0x290\n   ctl_ioctl+0x1c4/0x4d0\n   dm_ctl_ioctl+0xe/0x20\n   __x64_sys_ioctl+0x7b/0xb0\n   do_syscall_64+0x40/0xb0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nFixing it by only assign new_root when removal succeeds",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 4.4,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/4c84b3e0728ffe10d89c633694c35a02b5c477dc",
        "https://git.kernel.org/stable/c/73f27adaa73e3057a9ec464e33c4f54d34ea5de3",
        "https://git.kernel.org/stable/c/89bf942314b78d454db92427201421b5dec132d9",
        "https://git.kernel.org/stable/c/8fbae4a1bdb5b889490cdee929e68540151536e5",
        "https://git.kernel.org/stable/c/964d57d1962d7e68f0f578f05d9ae4a104d74851",
        "https://git.kernel.org/stable/c/ad365e9351ac2b450e7e79932ff6abf59342d91a",
        "https://git.kernel.org/stable/c/b6e58b5466b2959f83034bead2e2e1395cca8aeb",
        "https://git.kernel.org/stable/c/ba47e65a5de3e0e8270301a409fc63d3129fdb9e",
        "https://git.kernel.org/stable/c/c154775619186781aaf8a99333ac07437a1768d5",
        "https://lore.kernel.org/linux-cve-announce/2024052138-CVE-2021-47343-1974@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-47343",
        "https://www.cve.org/CVERecord?id=CVE-2021-47343"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "dm btree remove: assign new_root only when removal succeeds",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-04T05:32:08.519000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-824"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-21T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ndm btree remove: assign new_root only when removal succeeds\nremove_raw() in dm_btree_remove() may fail due to IO read error\n(e.g. read the content of origin block fails during shadowing),\nand the value of shadow_spine::root is uninitialized, but\nthe uninitialized value is still assign to new_root in the\nend of dm_btree_remove().\nFor dm-thin, the value of pmd->details_root or pmd->root will become\nan uninitialized value, so if trying to read details_info tree again\nout-of-bound memory may occur as showed below:\ngeneral protection fault, probably for non-canonical address 0x3fdcb14c8d7520\nCPU: 4 PID: 515 Comm: dmsetup Not tainted 5.13.0-rc6\nHardware name: QEMU Standard PC\nRIP: 0010:metadata_ll_load_ie+0x14/0x30\nCall Trace:\nsm_metadata_count_is_more_than_one+0xb9/0xe0\ndm_tm_shadow_block+0x52/0x1c0\nshadow_step+0x59/0xf0\nremove_raw+0xb2/0x170\ndm_btree_remove+0xf4/0x1c0\ndm_pool_delete_thin_device+0xc3/0x140\npool_message+0x218/0x2b0\ntarget_message+0x251/0x290\nctl_ioctl+0x1c4/0x4d0\ndm_ctl_ioctl+0xe/0x20\n__x64_sys_ioctl+0x7b/0xb0\ndo_syscall_64+0x40/0xb0\nentry_SYSCALL_64_after_hwframe+0x44/0xae\nFixing it by only assign new_root when removal succeeds",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 4.4,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2021/CVE-2021-47343.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024052138-CVE-2021-47343-1974@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2021-47343",
      "https://www.cve.org/CVERecord?id=CVE-2021-47343"
    ],
    "title": "kernel: dm btree remove: assign new_root only when removal succeeds",
    "updated": "2024-05-21T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-824"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-21T14:35:50.293000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm btree remove: assign new_root only when removal succeeds\n\nremove_raw() in dm_btree_remove() may fail due to IO read error\n(e.g. read the content of origin block fails during shadowing),\nand the value of shadow_spine::root is uninitialized, but\nthe uninitialized value is still assign to new_root in the\nend of dm_btree_remove().\n\nFor dm-thin, the value of pmd->details_root or pmd->root will become\nan uninitialized value, so if trying to read details_info tree again\nout-of-bound memory may occur as showed below:\n\n  general protection fault, probably for non-canonical address 0x3fdcb14c8d7520\n  CPU: 4 PID: 515 Comm: dmsetup Not tainted 5.13.0-rc6\n  Hardware name: QEMU Standard PC\n  RIP: 0010:metadata_ll_load_ie+0x14/0x30\n  Call Trace:\n   sm_metadata_count_is_more_than_one+0xb9/0xe0\n   dm_tm_shadow_block+0x52/0x1c0\n   shadow_step+0x59/0xf0\n   remove_raw+0xb2/0x170\n   dm_btree_remove+0xf4/0x1c0\n   dm_pool_delete_thin_device+0xc3/0x140\n   pool_message+0x218/0x2b0\n   target_message+0x251/0x290\n   ctl_ioctl+0x1c4/0x4d0\n   dm_ctl_ioctl+0xe/0x20\n   __x64_sys_ioctl+0x7b/0xb0\n   do_syscall_64+0x40/0xb0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nFixing it by only assign new_root when removal succeeds",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "dm btree remove: assign new_root only when removal succeeds",
    "updated": "2024-05-23T19:04:26.101000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2021/47xxx/CVE-2021-47343.json",
    "weaknesses": []
  }
}