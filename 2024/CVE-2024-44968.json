{
  "cve": "CVE-2024-44968",
  "mitre": {
    "cpes": [],
    "created": "2024-09-04T18:56:45.456000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntick/broadcast: Move per CPU pointer access into the atomic section\n\nThe recent fix for making the take over of the broadcast timer more\nreliable retrieves a per CPU pointer in preemptible context.\n\nThis went unnoticed as compilers hoist the access into the non-preemptible\nregion where the pointer is actually used. But of course it's valid that\nthe compiler keeps it at the place where the code puts it which rightfully\ntriggers:\n\n  BUG: using smp_processor_id() in preemptible [00000000] code:\n       caller is hotplug_cpu__broadcast_tick_pull+0x1c/0xc0\n\nMove it to the actual usage site which is in a non-preemptible region.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/44xxx/CVE-2024-44968.json",
    "references": [
      "https://git.kernel.org/stable/c/541a900d245536d4809cb1aa322c3fcc2cdb58a6",
      "https://git.kernel.org/stable/c/668c6c4a7e9e9f081c06b70f30104fb7013437ed",
      "https://git.kernel.org/stable/c/6881e75237a84093d0986f56223db3724619f26e",
      "https://git.kernel.org/stable/c/7b3ec186ba93e333e9efe7254e7e31c1828e5d2d",
      "https://git.kernel.org/stable/c/7dd12f85f150010ef7518201c63fa7e395f5c3e9",
      "https://git.kernel.org/stable/c/b9d604933d5fd72dd37f24e1dc35f778297d745a",
      "https://git.kernel.org/stable/c/f54abf332a2bc0413cfa8bd6a8511f7aa99faea0",
      "https://git.kernel.org/stable/c/f91fb47ecacc178a83a77eeebd25cbaec18c01d6"
    ],
    "title": "tick/broadcast: Move per CPU pointer access into the atomic section",
    "updated": "2024-09-15T17:56:08.879000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-09-04T19:15:31.173000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntick/broadcast: Move per CPU pointer access into the atomic section\n\nThe recent fix for making the take over of the broadcast timer more\nreliable retrieves a per CPU pointer in preemptible context.\n\nThis went unnoticed as compilers hoist the access into the non-preemptible\nregion where the pointer is actually used. But of course it's valid that\nthe compiler keeps it at the place where the code puts it which rightfully\ntriggers:\n\n  BUG: using smp_processor_id() in preemptible [00000000] code:\n       caller is hotplug_cpu__broadcast_tick_pull+0x1c/0xc0\n\nMove it to the actual usage site which is in a non-preemptible region.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-44968.json",
    "references": [
      "https://git.kernel.org/stable/c/541a900d245536d4809cb1aa322c3fcc2cdb58a6",
      "https://git.kernel.org/stable/c/668c6c4a7e9e9f081c06b70f30104fb7013437ed",
      "https://git.kernel.org/stable/c/6881e75237a84093d0986f56223db3724619f26e",
      "https://git.kernel.org/stable/c/7b3ec186ba93e333e9efe7254e7e31c1828e5d2d",
      "https://git.kernel.org/stable/c/7dd12f85f150010ef7518201c63fa7e395f5c3e9",
      "https://git.kernel.org/stable/c/b9d604933d5fd72dd37f24e1dc35f778297d745a",
      "https://git.kernel.org/stable/c/f54abf332a2bc0413cfa8bd6a8511f7aa99faea0",
      "https://git.kernel.org/stable/c/f91fb47ecacc178a83a77eeebd25cbaec18c01d6"
    ],
    "title": null,
    "updated": "2024-09-05T12:53:21.110000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-04T19:15:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\ntick/broadcast: Move per CPU pointer access into the atomic section\n\nThe recent fix for making the take over of the broadcast timer more\nreliable retrieves a per CPU pointer in preemptible context.\n\nThis went unnoticed as compilers hoist the access into the non-preemptible\nregion where the pointer is actually used. But of course it's valid that\nthe compiler keeps it at the place where the code puts it which rightfully\ntriggers:\n\n  BUG: using smp_processor_id() in preemptible [00000000] code:\n       caller is hotplug_cpu__broadcast_tick_pull+0x1c/0xc0\n\nMove it to the actual usage site which is in a non-preemptible region.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "tick/broadcast: Move per CPU pointer access into the atomic section",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/541a900d245536d4809cb1aa322c3fcc2cdb58a6",
                "https://git.kernel.org/stable/c/668c6c4a7e9e9f081c06b70f30104fb7013437ed",
                "https://git.kernel.org/stable/c/6881e75237a84093d0986f56223db3724619f26e",
                "https://git.kernel.org/stable/c/7b3ec186ba93e333e9efe7254e7e31c1828e5d2d",
                "https://git.kernel.org/stable/c/7dd12f85f150010ef7518201c63fa7e395f5c3e9",
                "https://git.kernel.org/stable/c/b9d604933d5fd72dd37f24e1dc35f778297d745a",
                "https://git.kernel.org/stable/c/f54abf332a2bc0413cfa8bd6a8511f7aa99faea0",
                "https://git.kernel.org/stable/c/f91fb47ecacc178a83a77eeebd25cbaec18c01d6"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "94e1424f-0765-48e2-86fc-70c566e16951"
      },
      {
        "created": "2024-09-04T23:30:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024090456-CVE-2024-44968-3e4f@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2024-44968",
                "https://www.cve.org/CVERecord?id=CVE-2024-44968"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Moderate",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "fee57dc5-4402-4f9b-841e-87bd07517b60"
      },
      {
        "created": "2024-09-11T13:30:00+00:00",
        "data": [
          {
            "details": {
              "added": {
                "ssvc": {
                  "options": {
                    "Automatable": "no",
                    "Exploitation": "none",
                    "Technical Impact": "partial"
                  },
                  "version": "2.0.3"
                }
              },
              "removed": {},
              "updated": {}
            },
            "type": "metrics"
          }
        ],
        "id": "610d3953-515a-4fe1-8af6-b0a57f623b9f"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-09-04T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\ntick/broadcast: Move per CPU pointer access into the atomic section\n\nThe recent fix for making the take over of the broadcast timer more\nreliable retrieves a per CPU pointer in preemptible context.\n\nThis went unnoticed as compilers hoist the access into the non-preemptible\nregion where the pointer is actually used. But of course it's valid that\nthe compiler keeps it at the place where the code puts it which rightfully\ntriggers:\n\n  BUG: using smp_processor_id() in preemptible [00000000] code:\n       caller is hotplug_cpu__broadcast_tick_pull+0x1c/0xc0\n\nMove it to the actual usage site which is in a non-preemptible region.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/541a900d245536d4809cb1aa322c3fcc2cdb58a6",
        "https://git.kernel.org/stable/c/668c6c4a7e9e9f081c06b70f30104fb7013437ed",
        "https://git.kernel.org/stable/c/6881e75237a84093d0986f56223db3724619f26e",
        "https://git.kernel.org/stable/c/7b3ec186ba93e333e9efe7254e7e31c1828e5d2d",
        "https://git.kernel.org/stable/c/7dd12f85f150010ef7518201c63fa7e395f5c3e9",
        "https://git.kernel.org/stable/c/b9d604933d5fd72dd37f24e1dc35f778297d745a",
        "https://git.kernel.org/stable/c/f54abf332a2bc0413cfa8bd6a8511f7aa99faea0",
        "https://git.kernel.org/stable/c/f91fb47ecacc178a83a77eeebd25cbaec18c01d6",
        "https://lore.kernel.org/linux-cve-announce/2024090456-CVE-2024-44968-3e4f@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-44968",
        "https://www.cve.org/CVERecord?id=CVE-2024-44968"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "tick/broadcast: Move per CPU pointer access into the atomic section",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-15T17:56:08.879000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-09-04T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\ntick/broadcast: Move per CPU pointer access into the atomic section\nThe recent fix for making the take over of the broadcast timer more\nreliable retrieves a per CPU pointer in preemptible context.\nThis went unnoticed as compilers hoist the access into the non-preemptible\nregion where the pointer is actually used. But of course it's valid that\nthe compiler keeps it at the place where the code puts it which rightfully\ntriggers:\nBUG: using smp_processor_id() in preemptible [00000000] code:\ncaller is hotplug_cpu__broadcast_tick_pull+0x1c/0xc0\nMove it to the actual usage site which is in a non-preemptible region.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-44968.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024090456-CVE-2024-44968-3e4f@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-44968",
      "https://www.cve.org/CVERecord?id=CVE-2024-44968"
    ],
    "title": "kernel: tick/broadcast: Move per CPU pointer access into the atomic section",
    "updated": "2024-09-04T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-09-04T18:56:45.456000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntick/broadcast: Move per CPU pointer access into the atomic section\n\nThe recent fix for making the take over of the broadcast timer more\nreliable retrieves a per CPU pointer in preemptible context.\n\nThis went unnoticed as compilers hoist the access into the non-preemptible\nregion where the pointer is actually used. But of course it's valid that\nthe compiler keeps it at the place where the code puts it which rightfully\ntriggers:\n\n  BUG: using smp_processor_id() in preemptible [00000000] code:\n       caller is hotplug_cpu__broadcast_tick_pull+0x1c/0xc0\n\nMove it to the actual usage site which is in a non-preemptible region.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "tick/broadcast: Move per CPU pointer access into the atomic section",
    "updated": "2024-09-11T12:42:24.792000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/44xxx/CVE-2024-44968.json",
    "weaknesses": []
  }
}