{
  "cve": "CVE-2018-16984",
  "mitre": {
    "cpes": [],
    "created": "2018-10-02T18:00:00+00:00",
    "description": "An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the \"view\" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2018/16xxx/CVE-2018-16984.json",
    "references": [
      "http://www.securitytracker.com/id/1041749",
      "https://security.netapp.com/advisory/ntap-20190502-0009/",
      "https://www.djangoproject.com/weblog/2018/oct/01/security-release/"
    ],
    "title": null,
    "updated": "2024-08-05T10:39:58.059000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:djangoproject:django:*:*:*:*:*:*:*:*"
    ],
    "created": "2018-10-02T18:29:01.430000+00:00",
    "description": "An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the \"view\" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",
    "metrics": {
      "cvssV2_0": {
        "score": 4.0,
        "vector": "AV:N/AC:L/Au:S/C:P/I:N/A:N"
      },
      "cvssV3_0": {
        "score": 4.9,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2018/CVE-2018-16984.json",
    "references": [
      "http://www.securitytracker.com/id/1041749",
      "https://security.netapp.com/advisory/ntap-20190502-0009/",
      "https://www.djangoproject.com/weblog/2018/oct/01/security-release/"
    ],
    "title": null,
    "updated": "2019-10-03T00:03:26.223000+00:00",
    "vendors": [
      "djangoproject",
      "djangoproject$PRODUCT$django"
    ],
    "weaknesses": [
      "CWE-522"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:djangoproject:django:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2018-10-01T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the \"view\" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.0,
          "vector": "AV:N/AC:L/Au:S/C:P/I:N/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 4.9,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://www.securitytracker.com/id/1041749",
        "https://nvd.nist.gov/vuln/detail/CVE-2018-16984",
        "https://security.netapp.com/advisory/ntap-20190502-0009/",
        "https://www.cve.org/CVERecord?id=CVE-2018-16984",
        "https://www.djangoproject.com/weblog/2018/oct/01/security-release/"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "python-django: Password hash disclosure to \"view only\" admin users",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-05T10:39:58.059000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "djangoproject",
        "djangoproject$PRODUCT$django"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-200",
        "CWE-522"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2018-10-01T00:00:00+00:00",
    "description": "An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the \"view\" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 2.7,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:N/A:N"
      },
      "cvssV3_1": {},
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2018/CVE-2018-16984.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2018-16984",
      "https://www.cve.org/CVERecord?id=CVE-2018-16984",
      "https://www.djangoproject.com/weblog/2018/oct/01/security-release/"
    ],
    "title": "python-django: Password hash disclosure to \"view only\" admin users",
    "updated": "2018-10-01T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-200"
    ]
  }
}