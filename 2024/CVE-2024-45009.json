{
  "cve": "CVE-2024-45009",
  "mitre": {
    "cpes": [],
    "created": "2024-09-11T15:13:47.719000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: only decrement add_addr_accepted for MPJ req\n\nAdding the following warning ...\n\n  WARN_ON_ONCE(msk->pm.add_addr_accepted == 0)\n\n... before decrementing the add_addr_accepted counter helped to find a\nbug when running the \"remove single subflow\" subtest from the\nmptcp_join.sh selftest.\n\nRemoving a 'subflow' endpoint will first trigger a RM_ADDR, then the\nsubflow closure. Before this patch, and upon the reception of the\nRM_ADDR, the other peer will then try to decrement this\nadd_addr_accepted. That's not correct because the attached subflows have\nnot been created upon the reception of an ADD_ADDR.\n\nA way to solve that is to decrement the counter only if the attached\nsubflow was an MP_JOIN to a remote id that was not 0, and initiated by\nthe host receiving the RM_ADDR.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/45xxx/CVE-2024-45009.json",
    "references": [
      "https://git.kernel.org/stable/c/1c1f721375989579e46741f59523e39ec9b2a9bd",
      "https://git.kernel.org/stable/c/2060f1efab370b496c4903b840844ecaff324c3c",
      "https://git.kernel.org/stable/c/35b31f5549ede4070566b949781e83495906b43d",
      "https://git.kernel.org/stable/c/85b866e4c4e63a1d7afb58f1e24273caad03d0b7",
      "https://git.kernel.org/stable/c/d20bf2c96d7ffd171299b32f562f70e5bf5dc608"
    ],
    "title": "mptcp: pm: only decrement add_addr_accepted for MPJ req",
    "updated": "2024-09-12T11:48:12.189000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-09-11T16:15:06.427000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: only decrement add_addr_accepted for MPJ req\n\nAdding the following warning ...\n\n  WARN_ON_ONCE(msk->pm.add_addr_accepted == 0)\n\n... before decrementing the add_addr_accepted counter helped to find a\nbug when running the \"remove single subflow\" subtest from the\nmptcp_join.sh selftest.\n\nRemoving a 'subflow' endpoint will first trigger a RM_ADDR, then the\nsubflow closure. Before this patch, and upon the reception of the\nRM_ADDR, the other peer will then try to decrement this\nadd_addr_accepted. That's not correct because the attached subflows have\nnot been created upon the reception of an ADD_ADDR.\n\nA way to solve that is to decrement the counter only if the attached\nsubflow was an MP_JOIN to a remote id that was not 0, and initiated by\nthe host receiving the RM_ADDR.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-45009.json",
    "references": [
      "https://git.kernel.org/stable/c/1c1f721375989579e46741f59523e39ec9b2a9bd",
      "https://git.kernel.org/stable/c/2060f1efab370b496c4903b840844ecaff324c3c",
      "https://git.kernel.org/stable/c/85b866e4c4e63a1d7afb58f1e24273caad03d0b7",
      "https://git.kernel.org/stable/c/d20bf2c96d7ffd171299b32f562f70e5bf5dc608"
    ],
    "title": null,
    "updated": "2024-09-11T16:26:11.920000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-11T15:30:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: only decrement add_addr_accepted for MPJ req\n\nAdding the following warning ...\n\n  WARN_ON_ONCE(msk->pm.add_addr_accepted == 0)\n\n... before decrementing the add_addr_accepted counter helped to find a\nbug when running the \"remove single subflow\" subtest from the\nmptcp_join.sh selftest.\n\nRemoving a 'subflow' endpoint will first trigger a RM_ADDR, then the\nsubflow closure. Before this patch, and upon the reception of the\nRM_ADDR, the other peer will then try to decrement this\nadd_addr_accepted. That's not correct because the attached subflows have\nnot been created upon the reception of an ADD_ADDR.\n\nA way to solve that is to decrement the counter only if the attached\nsubflow was an MP_JOIN to a remote id that was not 0, and initiated by\nthe host receiving the RM_ADDR.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "mptcp: pm: only decrement add_addr_accepted for MPJ req",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/1c1f721375989579e46741f59523e39ec9b2a9bd",
                "https://git.kernel.org/stable/c/2060f1efab370b496c4903b840844ecaff324c3c",
                "https://git.kernel.org/stable/c/85b866e4c4e63a1d7afb58f1e24273caad03d0b7",
                "https://git.kernel.org/stable/c/d20bf2c96d7ffd171299b32f562f70e5bf5dc608"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "82f91cb5-bc7c-4c01-827f-500ba67cbceb"
      },
      {
        "created": "2024-09-11T19:30:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://lore.kernel.org/linux-cve-announce/2024091104-CVE-2024-45009-24ea@gregkh/T",
                "https://nvd.nist.gov/vuln/detail/CVE-2024-45009",
                "https://www.cve.org/CVERecord?id=CVE-2024-45009"
              ],
              "removed": []
            },
            "type": "references"
          },
          {
            "details": {
              "added": {
                "cvssV3_1": {
                  "score": 5.5,
                  "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                }
              },
              "removed": {},
              "updated": {
                "threat_severity": {
                  "new": "Moderate",
                  "old": null
                }
              }
            },
            "type": "metrics"
          }
        ],
        "id": "3dcdb6a0-765e-41f5-9b0d-429ef8d9a2ff"
      },
      {
        "created": "2024-09-12T12:00:00+00:00",
        "data": [
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/35b31f5549ede4070566b949781e83495906b43d"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "afc6fad1-85ab-4605-bff6-a21d8fc7b81b"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-09-11T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: only decrement add_addr_accepted for MPJ req\n\nAdding the following warning ...\n\n  WARN_ON_ONCE(msk->pm.add_addr_accepted == 0)\n\n... before decrementing the add_addr_accepted counter helped to find a\nbug when running the \"remove single subflow\" subtest from the\nmptcp_join.sh selftest.\n\nRemoving a 'subflow' endpoint will first trigger a RM_ADDR, then the\nsubflow closure. Before this patch, and upon the reception of the\nRM_ADDR, the other peer will then try to decrement this\nadd_addr_accepted. That's not correct because the attached subflows have\nnot been created upon the reception of an ADD_ADDR.\n\nA way to solve that is to decrement the counter only if the attached\nsubflow was an MP_JOIN to a remote id that was not 0, and initiated by\nthe host receiving the RM_ADDR.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/1c1f721375989579e46741f59523e39ec9b2a9bd",
        "https://git.kernel.org/stable/c/2060f1efab370b496c4903b840844ecaff324c3c",
        "https://git.kernel.org/stable/c/35b31f5549ede4070566b949781e83495906b43d",
        "https://git.kernel.org/stable/c/85b866e4c4e63a1d7afb58f1e24273caad03d0b7",
        "https://git.kernel.org/stable/c/d20bf2c96d7ffd171299b32f562f70e5bf5dc608",
        "https://lore.kernel.org/linux-cve-announce/2024091104-CVE-2024-45009-24ea@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-45009",
        "https://www.cve.org/CVERecord?id=CVE-2024-45009"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "mptcp: pm: only decrement add_addr_accepted for MPJ req",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-12T11:48:12.189000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-09-11T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nmptcp: pm: only decrement add_addr_accepted for MPJ req\nAdding the following warning ...\nWARN_ON_ONCE(msk->pm.add_addr_accepted == 0)\n... before decrementing the add_addr_accepted counter helped to find a\nbug when running the \"remove single subflow\" subtest from the\nmptcp_join.sh selftest.\nRemoving a 'subflow' endpoint will first trigger a RM_ADDR, then the\nsubflow closure. Before this patch, and upon the reception of the\nRM_ADDR, the other peer will then try to decrement this\nadd_addr_accepted. That's not correct because the attached subflows have\nnot been created upon the reception of an ADD_ADDR.\nA way to solve that is to decrement the counter only if the attached\nsubflow was an MP_JOIN to a remote id that was not 0, and initiated by\nthe host receiving the RM_ADDR.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-45009.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024091104-CVE-2024-45009-24ea@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-45009",
      "https://www.cve.org/CVERecord?id=CVE-2024-45009"
    ],
    "title": "kernel: mptcp: pm: only decrement add_addr_accepted for MPJ req",
    "updated": "2024-09-11T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  }
}