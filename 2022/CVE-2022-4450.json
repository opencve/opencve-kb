{
  "cve": "CVE-2022-4450",
  "mitre": {
    "cpes": [],
    "created": "2023-02-08T19:04:04.874000+00:00",
    "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2022/4xxx/CVE-2022-4450.json",
    "references": [
      "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83",
      "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b",
      "https://security.gentoo.org/glsa/202402-08",
      "https://www.openssl.org/news/secadv/20230207.txt"
    ],
    "title": "Double free after calling PEM_read_bio_ex",
    "updated": "2024-08-03T01:41:44.632000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:openssl:openssl:*:*:*:*:*:*:*:*",
      "cpe:2.3:a:stormshield:stormshield_network_security:*:*:*:*:*:*:*:*"
    ],
    "created": "2023-02-08T20:15:23.973000+00:00",
    "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2022/CVE-2022-4450.json",
    "references": [
      "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83",
      "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b",
      "https://security.gentoo.org/glsa/202402-08",
      "https://www.openssl.org/news/secadv/20230207.txt"
    ],
    "title": null,
    "updated": "2024-02-04T09:15:08.733000+00:00",
    "vendors": [
      "openssl",
      "openssl$PRODUCT$openssl",
      "stormshield",
      "stormshield$PRODUCT$stormshield_network_security"
    ],
    "weaknesses": [
      "CWE-415"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:enterprise_linux:8",
        "cpe:/a:redhat:enterprise_linux:9",
        "cpe:/a:redhat:jboss_core_services:1",
        "cpe:/a:redhat:jboss_core_services:1::el7",
        "cpe:/a:redhat:jboss_core_services:1::el8",
        "cpe:/a:redhat:jboss_enterprise_web_server:5.7",
        "cpe:/a:redhat:jboss_enterprise_web_server:5.7::el7",
        "cpe:/a:redhat:jboss_enterprise_web_server:5.7::el8",
        "cpe:/a:redhat:jboss_enterprise_web_server:5.7::el9",
        "cpe:/a:redhat:rhel_eus:9.0",
        "cpe:/o:redhat:enterprise_linux:8",
        "cpe:/o:redhat:enterprise_linux:9",
        "cpe:/o:redhat:rhel_eus:8.6",
        "cpe:2.3:a:openssl:openssl:*:*:*:*:*:*:*:*",
        "cpe:2.3:a:stormshield:stormshield_network_security:*:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2023-02-07T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.\n\n\n",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83",
        "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b",
        "https://nvd.nist.gov/vuln/detail/CVE-2022-4450",
        "https://security.gentoo.org/glsa/202402-08",
        "https://www.cve.org/CVERecord?id=CVE-2022-4450",
        "https://www.openssl.org/news/secadv/20230207.txt"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "Double free after calling PEM_read_bio_ex",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T01:41:44.632000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "openssl",
        "openssl$PRODUCT$openssl",
        "redhat",
        "redhat$PRODUCT$enterprise_linux",
        "redhat$PRODUCT$jboss_core_services",
        "redhat$PRODUCT$jboss_enterprise_web_server",
        "redhat$PRODUCT$rhel_eus",
        "stormshield",
        "stormshield$PRODUCT$stormshield_network_security"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-415"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:enterprise_linux:8",
      "cpe:/a:redhat:enterprise_linux:9",
      "cpe:/a:redhat:jboss_core_services:1",
      "cpe:/a:redhat:jboss_core_services:1::el7",
      "cpe:/a:redhat:jboss_core_services:1::el8",
      "cpe:/a:redhat:jboss_enterprise_web_server:5.7",
      "cpe:/a:redhat:jboss_enterprise_web_server:5.7::el7",
      "cpe:/a:redhat:jboss_enterprise_web_server:5.7::el8",
      "cpe:/a:redhat:jboss_enterprise_web_server:5.7::el9",
      "cpe:/a:redhat:rhel_eus:9.0",
      "cpe:/o:redhat:enterprise_linux:8",
      "cpe:/o:redhat:enterprise_linux:9",
      "cpe:/o:redhat:rhel_eus:8.6"
    ],
    "created": "2023-02-07T00:00:00+00:00",
    "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2022/CVE-2022-4450.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2022-4450",
      "https://www.cve.org/CVERecord?id=CVE-2022-4450",
      "https://www.openssl.org/news/secadv/20230207.txt"
    ],
    "title": "openssl: double free after calling PEM_read_bio_ex",
    "updated": "2023-02-07T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux",
      "redhat$PRODUCT$jboss_core_services",
      "redhat$PRODUCT$jboss_enterprise_web_server",
      "redhat$PRODUCT$rhel_eus"
    ],
    "weaknesses": [
      "CWE-415"
    ]
  }
}