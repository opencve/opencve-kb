{
  "cve": "CVE-2024-35902",
  "mitre": {
    "cpes": [],
    "created": "2024-05-19T08:34:55.692000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/rds: fix possible cp null dereference\n\ncp might be null, calling cp->cp_conn would produce null dereference\n\n[Simon Horman adds:]\n\nAnalysis:\n\n* cp is a parameter of __rds_rdma_map and is not reassigned.\n\n* The following call-sites pass a NULL cp argument to __rds_rdma_map()\n\n  - rds_get_mr()\n  - rds_get_mr_for_dest\n\n* Prior to the code above, the following assumes that cp may be NULL\n  (which is indicative, but could itself be unnecessary)\n\n\ttrans_private = rs->rs_transport->get_mr(\n\t\tsg, nents, rs, &mr->r_key, cp ? cp->cp_conn : NULL,\n\t\targs->vec.addr, args->vec.bytes,\n\t\tneed_odp ? ODP_ZEROBASED : ODP_NOT_NEEDED);\n\n* The code modified by this patch is guarded by IS_ERR(trans_private),\n  where trans_private is assigned as per the previous point in this analysis.\n\n  The only implementation of get_mr that I could locate is rds_ib_get_mr()\n  which can return an ERR_PTR if the conn (4th) argument is NULL.\n\n* ret is set to PTR_ERR(trans_private).\n  rds_ib_get_mr can return ERR_PTR(-ENODEV) if the conn (4th) argument is NULL.\n  Thus ret may be -ENODEV in which case the code in question will execute.\n\nConclusion:\n* cp may be NULL at the point where this patch adds a check;\n  this patch does seem to address a possible bug",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/35xxx/CVE-2024-35902.json",
    "references": [
      "https://git.kernel.org/stable/c/62fc3357e079a07a22465b9b6ef71bb6ea75ee4b",
      "https://git.kernel.org/stable/c/6794090c742008c53b344b35b021d4a3093dc50a",
      "https://git.kernel.org/stable/c/92309bed3c5fbe2ccd4c45056efd42edbd06162d",
      "https://git.kernel.org/stable/c/bcd46782e2ec3825d10c1552fcb674d491cc09f9",
      "https://git.kernel.org/stable/c/cbaac2e5488ed54833897264a5ffb2a341a9f196",
      "https://git.kernel.org/stable/c/cfb786b03b03c5ff38882bee38525eb9987e4d14",
      "https://git.kernel.org/stable/c/d275de8ea7be3a453629fddae41d4156762e814c",
      "https://git.kernel.org/stable/c/d49fac38479bfdaec52b3ea274d290c47a294029",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": "net/rds: fix possible cp null dereference",
    "updated": "2024-08-02T03:21:48.670000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-05-19T09:15:11.037000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/rds: fix possible cp null dereference\n\ncp might be null, calling cp->cp_conn would produce null dereference\n\n[Simon Horman adds:]\n\nAnalysis:\n\n* cp is a parameter of __rds_rdma_map and is not reassigned.\n\n* The following call-sites pass a NULL cp argument to __rds_rdma_map()\n\n  - rds_get_mr()\n  - rds_get_mr_for_dest\n\n* Prior to the code above, the following assumes that cp may be NULL\n  (which is indicative, but could itself be unnecessary)\n\n\ttrans_private = rs->rs_transport->get_mr(\n\t\tsg, nents, rs, &mr->r_key, cp ? cp->cp_conn : NULL,\n\t\targs->vec.addr, args->vec.bytes,\n\t\tneed_odp ? ODP_ZEROBASED : ODP_NOT_NEEDED);\n\n* The code modified by this patch is guarded by IS_ERR(trans_private),\n  where trans_private is assigned as per the previous point in this analysis.\n\n  The only implementation of get_mr that I could locate is rds_ib_get_mr()\n  which can return an ERR_PTR if the conn (4th) argument is NULL.\n\n* ret is set to PTR_ERR(trans_private).\n  rds_ib_get_mr can return ERR_PTR(-ENODEV) if the conn (4th) argument is NULL.\n  Thus ret may be -ENODEV in which case the code in question will execute.\n\nConclusion:\n* cp may be NULL at the point where this patch adds a check;\n  this patch does seem to address a possible bug",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-35902.json",
    "references": [
      "https://git.kernel.org/stable/c/62fc3357e079a07a22465b9b6ef71bb6ea75ee4b",
      "https://git.kernel.org/stable/c/6794090c742008c53b344b35b021d4a3093dc50a",
      "https://git.kernel.org/stable/c/92309bed3c5fbe2ccd4c45056efd42edbd06162d",
      "https://git.kernel.org/stable/c/bcd46782e2ec3825d10c1552fcb674d491cc09f9",
      "https://git.kernel.org/stable/c/cbaac2e5488ed54833897264a5ffb2a341a9f196",
      "https://git.kernel.org/stable/c/cfb786b03b03c5ff38882bee38525eb9987e4d14",
      "https://git.kernel.org/stable/c/d275de8ea7be3a453629fddae41d4156762e814c",
      "https://git.kernel.org/stable/c/d49fac38479bfdaec52b3ea274d290c47a294029",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": null,
    "updated": "2024-06-27T12:15:26.087000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-05-19T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/rds: fix possible cp null dereference\n\ncp might be null, calling cp->cp_conn would produce null dereference\n\n[Simon Horman adds:]\n\nAnalysis:\n\n* cp is a parameter of __rds_rdma_map and is not reassigned.\n\n* The following call-sites pass a NULL cp argument to __rds_rdma_map()\n\n  - rds_get_mr()\n  - rds_get_mr_for_dest\n\n* Prior to the code above, the following assumes that cp may be NULL\n  (which is indicative, but could itself be unnecessary)\n\n\ttrans_private = rs->rs_transport->get_mr(\n\t\tsg, nents, rs, &mr->r_key, cp ? cp->cp_conn : NULL,\n\t\targs->vec.addr, args->vec.bytes,\n\t\tneed_odp ? ODP_ZEROBASED : ODP_NOT_NEEDED);\n\n* The code modified by this patch is guarded by IS_ERR(trans_private),\n  where trans_private is assigned as per the previous point in this analysis.\n\n  The only implementation of get_mr that I could locate is rds_ib_get_mr()\n  which can return an ERR_PTR if the conn (4th) argument is NULL.\n\n* ret is set to PTR_ERR(trans_private).\n  rds_ib_get_mr can return ERR_PTR(-ENODEV) if the conn (4th) argument is NULL.\n  Thus ret may be -ENODEV in which case the code in question will execute.\n\nConclusion:\n* cp may be NULL at the point where this patch adds a check;\n  this patch does seem to address a possible bug",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/62fc3357e079a07a22465b9b6ef71bb6ea75ee4b",
        "https://git.kernel.org/stable/c/6794090c742008c53b344b35b021d4a3093dc50a",
        "https://git.kernel.org/stable/c/92309bed3c5fbe2ccd4c45056efd42edbd06162d",
        "https://git.kernel.org/stable/c/bcd46782e2ec3825d10c1552fcb674d491cc09f9",
        "https://git.kernel.org/stable/c/cbaac2e5488ed54833897264a5ffb2a341a9f196",
        "https://git.kernel.org/stable/c/cfb786b03b03c5ff38882bee38525eb9987e4d14",
        "https://git.kernel.org/stable/c/d275de8ea7be3a453629fddae41d4156762e814c",
        "https://git.kernel.org/stable/c/d49fac38479bfdaec52b3ea274d290c47a294029",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
        "https://lore.kernel.org/linux-cve-announce/2024051952-CVE-2024-35902-a288@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-35902",
        "https://www.cve.org/CVERecord?id=CVE-2024-35902"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "net/rds: fix possible cp null dereference",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T03:21:48.670000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-05-19T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nnet/rds: fix possible cp null dereference\ncp might be null, calling cp->cp_conn would produce null dereference\n[Simon Horman adds:]\nAnalysis:\n* cp is a parameter of __rds_rdma_map and is not reassigned.\n* The following call-sites pass a NULL cp argument to __rds_rdma_map()\n- rds_get_mr()\n- rds_get_mr_for_dest\n* Prior to the code above, the following assumes that cp may be NULL\n(which is indicative, but could itself be unnecessary)\ntrans_private = rs->rs_transport->get_mr(\nsg, nents, rs, &mr->r_key, cp ? cp->cp_conn : NULL,\nargs->vec.addr, args->vec.bytes,\nneed_odp ? ODP_ZEROBASED : ODP_NOT_NEEDED);\n* The code modified by this patch is guarded by IS_ERR(trans_private),\nwhere trans_private is assigned as per the previous point in this analysis.\nThe only implementation of get_mr that I could locate is rds_ib_get_mr()\nwhich can return an ERR_PTR if the conn (4th) argument is NULL.\n* ret is set to PTR_ERR(trans_private).\nrds_ib_get_mr can return ERR_PTR(-ENODEV) if the conn (4th) argument is NULL.\nThus ret may be -ENODEV in which case the code in question will execute.\nConclusion:\n* cp may be NULL at the point where this patch adds a check;\nthis patch does seem to address a possible bug",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-35902.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024051952-CVE-2024-35902-a288@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-35902",
      "https://www.cve.org/CVERecord?id=CVE-2024-35902"
    ],
    "title": "kernel: net/rds: fix possible cp null dereference",
    "updated": "2024-05-19T00:00:00+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-05-19T08:34:55.692000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/rds: fix possible cp null dereference\n\ncp might be null, calling cp->cp_conn would produce null dereference\n\n[Simon Horman adds:]\n\nAnalysis:\n\n* cp is a parameter of __rds_rdma_map and is not reassigned.\n\n* The following call-sites pass a NULL cp argument to __rds_rdma_map()\n\n  - rds_get_mr()\n  - rds_get_mr_for_dest\n\n* Prior to the code above, the following assumes that cp may be NULL\n  (which is indicative, but could itself be unnecessary)\n\n\ttrans_private = rs->rs_transport->get_mr(\n\t\tsg, nents, rs, &mr->r_key, cp ? cp->cp_conn : NULL,\n\t\targs->vec.addr, args->vec.bytes,\n\t\tneed_odp ? ODP_ZEROBASED : ODP_NOT_NEEDED);\n\n* The code modified by this patch is guarded by IS_ERR(trans_private),\n  where trans_private is assigned as per the previous point in this analysis.\n\n  The only implementation of get_mr that I could locate is rds_ib_get_mr()\n  which can return an ERR_PTR if the conn (4th) argument is NULL.\n\n* ret is set to PTR_ERR(trans_private).\n  rds_ib_get_mr can return ERR_PTR(-ENODEV) if the conn (4th) argument is NULL.\n  Thus ret may be -ENODEV in which case the code in question will execute.\n\nConclusion:\n* cp may be NULL at the point where this patch adds a check;\n  this patch does seem to address a possible bug",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "net/rds: fix possible cp null dereference",
    "updated": "2024-05-23T19:01:24.764000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/35xxx/CVE-2024-35902.json",
    "weaknesses": []
  }
}