{
  "cve": "CVE-2024-26885",
  "mitre": {
    "cpes": [],
    "created": "2024-04-17T10:27:40.300000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix DEVMAP_HASH overflow check on 32-bit arches\n\nThe devmap code allocates a number hash buckets equal to the next power\nof two of the max_entries value provided when creating the map. When\nrounding up to the next power of two, the 32-bit variable storing the\nnumber of buckets can overflow, and the code checks for overflow by\nchecking if the truncated 32-bit value is equal to 0. However, on 32-bit\narches the rounding up itself can overflow mid-way through, because it\nends up doing a left-shift of 32 bits on an unsigned long value. If the\nsize of an unsigned long is four bytes, this is undefined behaviour, so\nthere is no guarantee that we'll end up with a nice and tidy 0-value at\nthe end.\n\nSyzbot managed to turn this into a crash on arm32 by creating a\nDEVMAP_HASH with max_entries > 0x80000000 and then trying to update it.\nFix this by moving the overflow check to before the rounding up\noperation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/26xxx/CVE-2024-26885.json",
    "references": [
      "https://git.kernel.org/stable/c/22079b3a423382335f47d9ed32114e6c9fe88d7c",
      "https://git.kernel.org/stable/c/225da02acdc97af01b6bc6ce1a3e5362bf01d3fb",
      "https://git.kernel.org/stable/c/250051acc21f9d4c5c595e4fcb55986ea08c4691",
      "https://git.kernel.org/stable/c/281d464a34f540de166cee74b723e97ac2515ec3",
      "https://git.kernel.org/stable/c/c826502bed93970f2fd488918a7b8d5f1d30e2e3",
      "https://git.kernel.org/stable/c/e89386f62ce9a9ab9a94835a9890883c23d9d52c",
      "https://git.kernel.org/stable/c/edf7990baa48de5097daa9ac02e06cb4c798a737",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
    ],
    "title": "bpf: Fix DEVMAP_HASH overflow check on 32-bit arches",
    "updated": "2024-08-02T00:21:05.424000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*"
    ],
    "created": "2024-04-17T11:15:10.210000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix DEVMAP_HASH overflow check on 32-bit arches\n\nThe devmap code allocates a number hash buckets equal to the next power\nof two of the max_entries value provided when creating the map. When\nrounding up to the next power of two, the 32-bit variable storing the\nnumber of buckets can overflow, and the code checks for overflow by\nchecking if the truncated 32-bit value is equal to 0. However, on 32-bit\narches the rounding up itself can overflow mid-way through, because it\nends up doing a left-shift of 32 bits on an unsigned long value. If the\nsize of an unsigned long is four bytes, this is undefined behaviour, so\nthere is no guarantee that we'll end up with a nice and tidy 0-value at\nthe end.\n\nSyzbot managed to turn this into a crash on arm32 by creating a\nDEVMAP_HASH with max_entries > 0x80000000 and then trying to update it.\nFix this by moving the overflow check to before the rounding up\noperation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.8,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-26885.json",
    "references": [
      "https://git.kernel.org/stable/c/22079b3a423382335f47d9ed32114e6c9fe88d7c",
      "https://git.kernel.org/stable/c/225da02acdc97af01b6bc6ce1a3e5362bf01d3fb",
      "https://git.kernel.org/stable/c/250051acc21f9d4c5c595e4fcb55986ea08c4691",
      "https://git.kernel.org/stable/c/281d464a34f540de166cee74b723e97ac2515ec3",
      "https://git.kernel.org/stable/c/c826502bed93970f2fd488918a7b8d5f1d30e2e3",
      "https://git.kernel.org/stable/c/e89386f62ce9a9ab9a94835a9890883c23d9d52c",
      "https://git.kernel.org/stable/c/edf7990baa48de5097daa9ac02e06cb4c798a737",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html"
    ],
    "title": null,
    "updated": "2024-06-25T22:15:25.173000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "weaknesses": [
      "CWE-119"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
        "cpe:2.3:o:linux:linux_kernel:5.4:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "vulnrichment"
      ]
    },
    "created": {
      "data": "2024-04-17T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix DEVMAP_HASH overflow check on 32-bit arches\n\nThe devmap code allocates a number hash buckets equal to the next power\nof two of the max_entries value provided when creating the map. When\nrounding up to the next power of two, the 32-bit variable storing the\nnumber of buckets can overflow, and the code checks for overflow by\nchecking if the truncated 32-bit value is equal to 0. However, on 32-bit\narches the rounding up itself can overflow mid-way through, because it\nends up doing a left-shift of 32 bits on an unsigned long value. If the\nsize of an unsigned long is four bytes, this is undefined behaviour, so\nthere is no guarantee that we'll end up with a nice and tidy 0-value at\nthe end.\n\nSyzbot managed to turn this into a crash on arm32 by creating a\nDEVMAP_HASH with max_entries > 0x80000000 and then trying to update it.\nFix this by moving the overflow check to before the rounding up\noperation.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.8,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "total"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/22079b3a423382335f47d9ed32114e6c9fe88d7c",
        "https://git.kernel.org/stable/c/225da02acdc97af01b6bc6ce1a3e5362bf01d3fb",
        "https://git.kernel.org/stable/c/250051acc21f9d4c5c595e4fcb55986ea08c4691",
        "https://git.kernel.org/stable/c/281d464a34f540de166cee74b723e97ac2515ec3",
        "https://git.kernel.org/stable/c/c826502bed93970f2fd488918a7b8d5f1d30e2e3",
        "https://git.kernel.org/stable/c/e89386f62ce9a9ab9a94835a9890883c23d9d52c",
        "https://git.kernel.org/stable/c/edf7990baa48de5097daa9ac02e06cb4c798a737",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
        "https://lore.kernel.org/linux-cve-announce/2024041741-CVE-2024-26885-4224@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-26885",
        "https://www.cve.org/CVERecord?id=CVE-2024-26885"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "bpf: Fix DEVMAP_HASH overflow check on 32-bit arches",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T00:21:05.424000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "linux",
        "linux$PRODUCT$linux_kernel"
      ],
      "providers": [
        "nvd",
        "vulnrichment"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-119",
        "CWE-121"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-04-17T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nbpf: Fix DEVMAP_HASH overflow check on 32-bit arches\nThe devmap code allocates a number hash buckets equal to the next power\nof two of the max_entries value provided when creating the map. When\nrounding up to the next power of two, the 32-bit variable storing the\nnumber of buckets can overflow, and the code checks for overflow by\nchecking if the truncated 32-bit value is equal to 0. However, on 32-bit\narches the rounding up itself can overflow mid-way through, because it\nends up doing a left-shift of 32 bits on an unsigned long value. If the\nsize of an unsigned long is four bytes, this is undefined behaviour, so\nthere is no guarantee that we'll end up with a nice and tidy 0-value at\nthe end.\nSyzbot managed to turn this into a crash on arm32 by creating a\nDEVMAP_HASH with max_entries > 0x80000000 and then trying to update it.\nFix this by moving the overflow check to before the rounding up\noperation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.7,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2024/CVE-2024-26885.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024041741-CVE-2024-26885-4224@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-26885",
      "https://www.cve.org/CVERecord?id=CVE-2024-26885"
    ],
    "title": "kernel: bpf: Fix DEVMAP_HASH overflow check on 32-bit arches",
    "updated": "2024-04-17T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-121"
    ]
  },
  "vulnrichment": {
    "cpes": [
      "cpe:2.3:o:linux:linux_kernel:5.4:*:*:*:*:*:*:*"
    ],
    "created": "2024-04-17T10:27:40.300000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix DEVMAP_HASH overflow check on 32-bit arches\n\nThe devmap code allocates a number hash buckets equal to the next power\nof two of the max_entries value provided when creating the map. When\nrounding up to the next power of two, the 32-bit variable storing the\nnumber of buckets can overflow, and the code checks for overflow by\nchecking if the truncated 32-bit value is equal to 0. However, on 32-bit\narches the rounding up itself can overflow mid-way through, because it\nends up doing a left-shift of 32 bits on an unsigned long value. If the\nsize of an unsigned long is four bytes, this is undefined behaviour, so\nthere is no guarantee that we'll end up with a nice and tidy 0-value at\nthe end.\n\nSyzbot managed to turn this into a crash on arm32 by creating a\nDEVMAP_HASH with max_entries > 0x80000000 and then trying to update it.\nFix this by moving the overflow check to before the rounding up\noperation.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "total"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "bpf: Fix DEVMAP_HASH overflow check on 32-bit arches",
    "updated": "2024-05-28T19:53:24.991000+00:00",
    "vendors": [
      "linux",
      "linux$PRODUCT$linux_kernel"
    ],
    "vulnrichment_repo_path": "2024/26xxx/CVE-2024-26885.json",
    "weaknesses": []
  }
}