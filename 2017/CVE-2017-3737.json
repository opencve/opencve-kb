{
  "cve": "CVE-2017-3737",
  "mitre": {
    "cpes": [],
    "created": "2017-12-07T00:00:00+00:00",
    "description": "OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2017/3xxx/CVE-2017-3737.json",
    "references": [
      "http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html",
      "http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html",
      "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html",
      "http://www.securityfocus.com/bid/102103",
      "http://www.securitytracker.com/id/1039978",
      "https://access.redhat.com/errata/RHSA-2018:0998",
      "https://access.redhat.com/errata/RHSA-2018:2185",
      "https://access.redhat.com/errata/RHSA-2018:2186",
      "https://access.redhat.com/errata/RHSA-2018:2187",
      "https://cert-portal.siemens.com/productcert/pdf/ssa-179516.pdf",
      "https://github.com/openssl/openssl/commit/898fb884b706aaeb283de4812340bb0bde8476dc",
      "https://security.FreeBSD.org/advisories/FreeBSD-SA-17:12.openssl.asc",
      "https://security.gentoo.org/glsa/201712-03",
      "https://security.netapp.com/advisory/ntap-20171208-0001/",
      "https://security.netapp.com/advisory/ntap-20180117-0002/",
      "https://security.netapp.com/advisory/ntap-20180419-0002/",
      "https://www.debian.org/security/2017/dsa-4065",
      "https://www.digitalmunition.me/2017/12/cve-2017-3737-openssl-security-bypass-vulnerability/",
      "https://www.openssl.org/news/secadv/20171207.txt",
      "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html",
      "https://www.tenable.com/security/tns-2017-16"
    ],
    "title": null,
    "updated": "2024-08-05T14:39:40.599000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:openssl:openssl:1.0.2b:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2c:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2d:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2e:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2f:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2g:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2h:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2i:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2j:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2k:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2l:*:*:*:*:*:*:*",
      "cpe:2.3:a:openssl:openssl:1.0.2m:*:*:*:*:*:*:*",
      "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*"
    ],
    "created": "2017-12-07T16:29:00.193000+00:00",
    "description": "OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected.",
    "metrics": {
      "cvssV2_0": {
        "score": 4.3,
        "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N"
      },
      "cvssV3_0": {
        "score": 5.9,
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2017/CVE-2017-3737.json",
    "references": [
      "http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html",
      "http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html",
      "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html",
      "http://www.securityfocus.com/bid/102103",
      "http://www.securitytracker.com/id/1039978",
      "https://access.redhat.com/errata/RHSA-2018:0998",
      "https://access.redhat.com/errata/RHSA-2018:2185",
      "https://access.redhat.com/errata/RHSA-2018:2186",
      "https://access.redhat.com/errata/RHSA-2018:2187",
      "https://cert-portal.siemens.com/productcert/pdf/ssa-179516.pdf",
      "https://github.com/openssl/openssl/commit/898fb884b706aaeb283de4812340bb0bde8476dc",
      "https://security.FreeBSD.org/advisories/FreeBSD-SA-17:12.openssl.asc",
      "https://security.gentoo.org/glsa/201712-03",
      "https://security.netapp.com/advisory/ntap-20171208-0001/",
      "https://security.netapp.com/advisory/ntap-20180117-0002/",
      "https://security.netapp.com/advisory/ntap-20180419-0002/",
      "https://www.debian.org/security/2017/dsa-4065",
      "https://www.digitalmunition.me/2017/12/cve-2017-3737-openssl-security-bypass-vulnerability/",
      "https://www.openssl.org/news/secadv/20171207.txt",
      "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html",
      "https://www.tenable.com/security/tns-2017-16"
    ],
    "title": null,
    "updated": "2019-10-03T00:03:26.223000+00:00",
    "vendors": [
      "debian",
      "debian$PRODUCT$debian_linux",
      "openssl",
      "openssl$PRODUCT$openssl"
    ],
    "weaknesses": [
      "CWE-125",
      "CWE-787"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:jboss_core_services:1",
        "cpe:/a:redhat:jboss_core_services:1::el6",
        "cpe:/a:redhat:jboss_core_services:1::el7",
        "cpe:/o:redhat:enterprise_linux:7",
        "cpe:2.3:a:openssl:openssl:1.0.2b:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2c:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2d:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2e:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2f:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2g:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2h:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2i:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2j:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2k:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2l:*:*:*:*:*:*:*",
        "cpe:2.3:a:openssl:openssl:1.0.2m:*:*:*:*:*:*:*",
        "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2017-12-07T00:00:00+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 4.3,
          "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 5.9,
          "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
        },
        "provider": "nvd"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html",
        "http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html",
        "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html",
        "http://www.securityfocus.com/bid/102103",
        "http://www.securitytracker.com/id/1039978",
        "https://access.redhat.com/errata/RHSA-2018:0998",
        "https://access.redhat.com/errata/RHSA-2018:2185",
        "https://access.redhat.com/errata/RHSA-2018:2186",
        "https://access.redhat.com/errata/RHSA-2018:2187",
        "https://cert-portal.siemens.com/productcert/pdf/ssa-179516.pdf",
        "https://github.com/openssl/openssl/commit/898fb884b706aaeb283de4812340bb0bde8476dc",
        "https://nvd.nist.gov/vuln/detail/CVE-2017-3737",
        "https://security.FreeBSD.org/advisories/FreeBSD-SA-17:12.openssl.asc",
        "https://security.gentoo.org/glsa/201712-03",
        "https://security.netapp.com/advisory/ntap-20171208-0001/",
        "https://security.netapp.com/advisory/ntap-20180117-0002/",
        "https://security.netapp.com/advisory/ntap-20180419-0002/",
        "https://www.cve.org/CVERecord?id=CVE-2017-3737",
        "https://www.debian.org/security/2017/dsa-4065",
        "https://www.digitalmunition.me/2017/12/cve-2017-3737-openssl-security-bypass-vulnerability/",
        "https://www.openssl.org/news/secadv/20171207.txt",
        "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html",
        "https://www.tenable.com/security/tns-2017-16"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "openssl: Read/write after SSL object in error state",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-05T14:39:40.599000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "debian",
        "debian$PRODUCT$debian_linux",
        "openssl",
        "openssl$PRODUCT$openssl",
        "redhat",
        "redhat$PRODUCT$enterprise_linux",
        "redhat$PRODUCT$jboss_core_services"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-125",
        "CWE-391",
        "CWE-787"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:jboss_core_services:1",
      "cpe:/a:redhat:jboss_core_services:1::el6",
      "cpe:/a:redhat:jboss_core_services:1::el7",
      "cpe:/o:redhat:enterprise_linux:7"
    ],
    "created": "2017-12-07T00:00:00+00:00",
    "description": "OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 5.9,
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
      },
      "cvssV3_1": {},
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2017/CVE-2017-3737.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2017-3737",
      "https://www.cve.org/CVERecord?id=CVE-2017-3737",
      "https://www.openssl.org/news/secadv/20171207.txt"
    ],
    "title": "openssl: Read/write after SSL object in error state",
    "updated": "2017-12-07T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$enterprise_linux",
      "redhat$PRODUCT$jboss_core_services"
    ],
    "weaknesses": [
      "CWE-391"
    ]
  }
}