{
  "cve": "CVE-2021-29482",
  "mitre": {
    "cpes": [],
    "created": "2021-04-28T18:15:15+00:00",
    "description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2021/29xxx/CVE-2021-29482.json",
    "references": [
      "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27"
    ],
    "title": "denial of service in github.com/ulikunitz/xz",
    "updated": "2024-08-03T22:11:05.477000+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-835"
    ]
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:xz_project:xz:*:*:*:*:*:go:*:*"
    ],
    "created": "2021-04-28T19:15:08.587000+00:00",
    "description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
    "metrics": {
      "cvssV2_0": {
        "score": 5.0,
        "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      },
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2021/CVE-2021-29482.json",
    "references": [
      "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27"
    ],
    "title": null,
    "updated": "2021-05-14T19:56:32.117000+00:00",
    "vendors": [
      "xz_project",
      "xz_project$PRODUCT$xz"
    ],
    "weaknesses": [
      "CWE-835"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:/a:redhat:acm:2.3::el8",
        "cpe:/a:redhat:container_native_virtualization:4.8::el8",
        "cpe:/a:redhat:openshift_api_data_protection:1.0::el8",
        "cpe:/a:redhat:openstack:16.2::el8",
        "cpe:/a:redhat:service_mesh:2.0::el8",
        "cpe:2.3:a:xz_project:xz:*:*:*:*:*:go:*:*"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "created": {
      "data": "2020-08-19T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 5.0,
          "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 7.5,
          "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "mitre"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
        "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-29482",
        "https://www.cve.org/CVERecord?id=CVE-2021-29482"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "denial of service in github.com/ulikunitz/xz",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-03T22:11:05.477000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "redhat",
        "redhat$PRODUCT$acm",
        "redhat$PRODUCT$container_native_virtualization",
        "redhat$PRODUCT$openshift_api_data_protection",
        "redhat$PRODUCT$openstack",
        "redhat$PRODUCT$service_mesh",
        "xz_project",
        "xz_project$PRODUCT$xz"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-400",
        "CWE-835"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [
      "cpe:/a:redhat:acm:2.3::el8",
      "cpe:/a:redhat:container_native_virtualization:4.8::el8",
      "cpe:/a:redhat:openshift_api_data_protection:1.0::el8",
      "cpe:/a:redhat:openstack:16.2::el8",
      "cpe:/a:redhat:service_mesh:2.0::el8"
    ],
    "created": "2020-08-19T00:00:00+00:00",
    "description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 7.5,
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2021/CVE-2021-29482.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2021-29482",
      "https://www.cve.org/CVERecord?id=CVE-2021-29482"
    ],
    "title": "ulikunitz/xz: Infinite loop in readUvarint allows for denial of service",
    "updated": "2020-08-19T00:00:00+00:00",
    "vendors": [
      "redhat",
      "redhat$PRODUCT$acm",
      "redhat$PRODUCT$container_native_virtualization",
      "redhat$PRODUCT$openshift_api_data_protection",
      "redhat$PRODUCT$openstack",
      "redhat$PRODUCT$service_mesh"
    ],
    "weaknesses": [
      "CWE-400",
      "CWE-835"
    ]
  }
}