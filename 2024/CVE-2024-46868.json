{
  "cve": "CVE-2024-46868",
  "mitre": {
    "cpes": [],
    "created": "2024-09-27T12:42:55.664000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: uefisecapp: Fix deadlock in qcuefi_acquire()\n\nIf the __qcuefi pointer is not set, then in the original code, we would\nhold onto the lock.  That means that if we tried to set it later, then\nit would cause a deadlock.  Drop the lock on the error path.  That's\nwhat all the callers are expecting.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/46xxx/CVE-2024-46868.json",
    "references": [
      "https://git.kernel.org/stable/c/8c6a5a1fc02ad1d62d06897ab330693d4d27cd03",
      "https://git.kernel.org/stable/c/db213b0cfe3268d8b1d382b3bcc999c687a2567f"
    ],
    "title": "firmware: qcom: uefisecapp: Fix deadlock in qcuefi_acquire()",
    "updated": "2024-09-27T12:42:55.664000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [
      {
        "created": "2024-09-27T12:45:00+00:00",
        "data": [
          {
            "details": {
              "new": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: uefisecapp: Fix deadlock in qcuefi_acquire()\n\nIf the __qcuefi pointer is not set, then in the original code, we would\nhold onto the lock.  That means that if we tried to set it later, then\nit would cause a deadlock.  Drop the lock on the error path.  That's\nwhat all the callers are expecting.",
              "old": null
            },
            "type": "description"
          },
          {
            "details": {
              "new": "firmware: qcom: uefisecapp: Fix deadlock in qcuefi_acquire()",
              "old": null
            },
            "type": "title"
          },
          {
            "details": {
              "added": [
                "https://git.kernel.org/stable/c/8c6a5a1fc02ad1d62d06897ab330693d4d27cd03",
                "https://git.kernel.org/stable/c/db213b0cfe3268d8b1d382b3bcc999c687a2567f"
              ],
              "removed": []
            },
            "type": "references"
          }
        ],
        "id": "9d1fc166-9594-49bb-b59b-707392309f14"
      }
    ],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-09-27T12:42:55.664000+00:00",
      "provider": "mitre"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: uefisecapp: Fix deadlock in qcuefi_acquire()\n\nIf the __qcuefi pointer is not set, then in the original code, we would\nhold onto the lock.  That means that if we tried to set it later, then\nit would cause a deadlock.  Drop the lock on the error path.  That's\nwhat all the callers are expecting.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": null,
        "provider": null
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/8c6a5a1fc02ad1d62d06897ab330693d4d27cd03",
        "https://git.kernel.org/stable/c/db213b0cfe3268d8b1d382b3bcc999c687a2567f"
      ],
      "providers": [
        "mitre"
      ]
    },
    "title": {
      "data": "firmware: qcom: uefisecapp: Fix deadlock in qcuefi_acquire()",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-09-27T12:42:55.664000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [],
      "providers": []
    }
  }
}