{
  "cve": "CVE-2019-6250",
  "mitre": {
    "cpes": [],
    "created": "2019-01-13T15:00:00+00:00",
    "description": "A pointer overflow, with code execution, was discovered in ZeroMQ libzmq (aka 0MQ) 4.2.x and 4.3.x before 4.3.1. A v2_decoder.cpp zmq::v2_decoder_t::size_ready integer overflow allows an authenticated attacker to overwrite an arbitrary amount of bytes beyond the bounds of a buffer, which can be leveraged to run arbitrary code on the target system. The memory layout allows the attacker to inject OS commands into a data structure located immediately after the problematic buffer (i.e., it is not necessary to use a typical buffer-overflow exploitation technique that changes the flow of control).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2019/6xxx/CVE-2019-6250.json",
    "references": [
      "https://github.com/zeromq/libzmq/issues/3351",
      "https://github.com/zeromq/libzmq/releases/tag/v4.3.1",
      "https://security.gentoo.org/glsa/201903-22",
      "https://www.debian.org/security/2019/dsa-4368"
    ],
    "title": null,
    "updated": "2024-08-04T20:16:24.696000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [
      "cpe:2.3:a:zeromq:libzmq:*:*:*:*:*:*:*:*",
      "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*"
    ],
    "created": "2019-01-13T15:29:00.547000+00:00",
    "description": "A pointer overflow, with code execution, was discovered in ZeroMQ libzmq (aka 0MQ) 4.2.x and 4.3.x before 4.3.1. A v2_decoder.cpp zmq::v2_decoder_t::size_ready integer overflow allows an authenticated attacker to overwrite an arbitrary amount of bytes beyond the bounds of a buffer, which can be leveraged to run arbitrary code on the target system. The memory layout allows the attacker to inject OS commands into a data structure located immediately after the problematic buffer (i.e., it is not necessary to use a typical buffer-overflow exploitation technique that changes the flow of control).",
    "metrics": {
      "cvssV2_0": {
        "score": 9.0,
        "vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C"
      },
      "cvssV3_0": {
        "score": 8.8,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2019/CVE-2019-6250.json",
    "references": [
      "https://github.com/zeromq/libzmq/issues/3351",
      "https://github.com/zeromq/libzmq/releases/tag/v4.3.1",
      "https://security.gentoo.org/glsa/201903-22",
      "https://www.debian.org/security/2019/dsa-4368"
    ],
    "title": null,
    "updated": "2019-04-03T13:38:58.310000+00:00",
    "vendors": [
      "debian",
      "debian$PRODUCT$debian_linux",
      "zeromq",
      "zeromq$PRODUCT$libzmq"
    ],
    "weaknesses": [
      "CWE-190"
    ]
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [
        "cpe:2.3:a:zeromq:libzmq:*:*:*:*:*:*:*:*",
        "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*"
      ],
      "providers": [
        "nvd"
      ]
    },
    "created": {
      "data": "2019-01-08T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "A pointer overflow, with code execution, was discovered in ZeroMQ libzmq (aka 0MQ) 4.2.x and 4.3.x before 4.3.1. A v2_decoder.cpp zmq::v2_decoder_t::size_ready integer overflow allows an authenticated attacker to overwrite an arbitrary amount of bytes beyond the bounds of a buffer, which can be leveraged to run arbitrary code on the target system. The memory layout allows the attacker to inject OS commands into a data structure located immediately after the problematic buffer (i.e., it is not necessary to use a typical buffer-overflow exploitation technique that changes the flow of control).",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {
          "score": 9.0,
          "vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C"
        },
        "provider": "nvd"
      },
      "cvssV3_0": {
        "data": {
          "score": 8.8,
          "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
        },
        "provider": "nvd"
      },
      "cvssV3_1": {
        "data": {},
        "provider": null
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Important",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://github.com/zeromq/libzmq/issues/3351",
        "https://github.com/zeromq/libzmq/releases/tag/v4.3.1",
        "https://nvd.nist.gov/vuln/detail/CVE-2019-6250",
        "https://security.gentoo.org/glsa/201903-22",
        "https://www.cve.org/CVERecord?id=CVE-2019-6250",
        "https://www.debian.org/security/2019/dsa-4368"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "zeromq: Integer overflow in zmq::v2_decoder_t::size_ready",
      "provider": "nvd"
    },
    "updated": {
      "data": "2024-08-04T20:16:24.696000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [
        "debian",
        "debian$PRODUCT$debian_linux",
        "zeromq",
        "zeromq$PRODUCT$libzmq"
      ],
      "providers": [
        "nvd"
      ]
    },
    "weaknesses": {
      "data": [
        "CWE-190"
      ],
      "providers": [
        "nvd",
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2019-01-08T00:00:00+00:00",
    "description": "A pointer overflow, with code execution, was discovered in ZeroMQ libzmq (aka 0MQ) 4.2.x and 4.3.x before 4.3.1. A v2_decoder.cpp zmq::v2_decoder_t::size_ready integer overflow allows an authenticated attacker to overwrite an arbitrary amount of bytes beyond the bounds of a buffer, which can be leveraged to run arbitrary code on the target system. The memory layout allows the attacker to inject OS commands into a data structure located immediately after the problematic buffer (i.e., it is not necessary to use a typical buffer-overflow exploitation technique that changes the flow of control).",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {
        "score": 8.8,
        "vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "cvssV3_1": {},
      "threat_severity": "Important"
    },
    "redhat_repo_path": "2019/CVE-2019-6250.json",
    "references": [
      "https://nvd.nist.gov/vuln/detail/CVE-2019-6250",
      "https://www.cve.org/CVERecord?id=CVE-2019-6250"
    ],
    "title": "zeromq: Integer overflow in zmq::v2_decoder_t::size_ready",
    "updated": "2019-01-08T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-190"
    ]
  }
}