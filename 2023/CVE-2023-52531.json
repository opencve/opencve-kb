{
  "cve": "CVE-2023-52531",
  "mitre": {
    "cpes": [],
    "created": "2024-03-02T21:52:35.664000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: Fix a memory corruption issue\n\nA few lines above, space is kzalloc()'ed for:\n\tsizeof(struct iwl_nvm_data) +\n\tsizeof(struct ieee80211_channel) +\n\tsizeof(struct ieee80211_rate)\n\n'mvm->nvm_data' is a 'struct iwl_nvm_data', so it is fine.\n\nAt the end of this structure, there is the 'channels' flex array.\nEach element is of type 'struct ieee80211_channel'.\nSo only 1 element is allocated in this array.\n\nWhen doing:\n  mvm->nvm_data->bands[0].channels = mvm->nvm_data->channels;\nWe point at the first element of the 'channels' flex array.\nSo this is fine.\n\nHowever, when doing:\n  mvm->nvm_data->bands[0].bitrates =\n\t\t\t(void *)((u8 *)mvm->nvm_data->channels + 1);\nbecause of the \"(u8 *)\" cast, we add only 1 to the address of the beginning\nof the flex array.\n\nIt is likely that we want point at the 'struct ieee80211_rate' allocated\njust after.\n\nRemove the spurious casting so that the pointer arithmetic works as\nexpected.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2023/52xxx/CVE-2023-52531.json",
    "references": [
      "https://git.kernel.org/stable/c/6b3223449c959a8be94a1f042288059e40fcccb0",
      "https://git.kernel.org/stable/c/7c8faa31080342aec4903c9acb20caf82fcca1ef",
      "https://git.kernel.org/stable/c/8ba438ef3cacc4808a63ed0ce24d4f0942cfe55d",
      "https://git.kernel.org/stable/c/f06cdd8d4ba5252986f51f80cc30263636397128"
    ],
    "title": "wifi: iwlwifi: mvm: Fix a memory corruption issue",
    "updated": "2024-08-02T23:03:20.656000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-03-02T22:15:48.613000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: Fix a memory corruption issue\n\nA few lines above, space is kzalloc()'ed for:\n\tsizeof(struct iwl_nvm_data) +\n\tsizeof(struct ieee80211_channel) +\n\tsizeof(struct ieee80211_rate)\n\n'mvm->nvm_data' is a 'struct iwl_nvm_data', so it is fine.\n\nAt the end of this structure, there is the 'channels' flex array.\nEach element is of type 'struct ieee80211_channel'.\nSo only 1 element is allocated in this array.\n\nWhen doing:\n  mvm->nvm_data->bands[0].channels = mvm->nvm_data->channels;\nWe point at the first element of the 'channels' flex array.\nSo this is fine.\n\nHowever, when doing:\n  mvm->nvm_data->bands[0].bitrates =\n\t\t\t(void *)((u8 *)mvm->nvm_data->channels + 1);\nbecause of the \"(u8 *)\" cast, we add only 1 to the address of the beginning\nof the flex array.\n\nIt is likely that we want point at the 'struct ieee80211_rate' allocated\njust after.\n\nRemove the spurious casting so that the pointer arithmetic works as\nexpected.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2023/CVE-2023-52531.json",
    "references": [
      "https://git.kernel.org/stable/c/6b3223449c959a8be94a1f042288059e40fcccb0",
      "https://git.kernel.org/stable/c/7c8faa31080342aec4903c9acb20caf82fcca1ef",
      "https://git.kernel.org/stable/c/8ba438ef3cacc4808a63ed0ce24d4f0942cfe55d",
      "https://git.kernel.org/stable/c/f06cdd8d4ba5252986f51f80cc30263636397128"
    ],
    "title": null,
    "updated": "2024-03-04T13:58:23.447000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-03-02T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: Fix a memory corruption issue\n\nA few lines above, space is kzalloc()'ed for:\n\tsizeof(struct iwl_nvm_data) +\n\tsizeof(struct ieee80211_channel) +\n\tsizeof(struct ieee80211_rate)\n\n'mvm->nvm_data' is a 'struct iwl_nvm_data', so it is fine.\n\nAt the end of this structure, there is the 'channels' flex array.\nEach element is of type 'struct ieee80211_channel'.\nSo only 1 element is allocated in this array.\n\nWhen doing:\n  mvm->nvm_data->bands[0].channels = mvm->nvm_data->channels;\nWe point at the first element of the 'channels' flex array.\nSo this is fine.\n\nHowever, when doing:\n  mvm->nvm_data->bands[0].bitrates =\n\t\t\t(void *)((u8 *)mvm->nvm_data->channels + 1);\nbecause of the \"(u8 *)\" cast, we add only 1 to the address of the beginning\nof the flex array.\n\nIt is likely that we want point at the 'struct ieee80211_rate' allocated\njust after.\n\nRemove the spurious casting so that the pointer arithmetic works as\nexpected.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 6.0,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {},
        "provider": null
      },
      "threat_severity": {
        "data": "Low",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/6b3223449c959a8be94a1f042288059e40fcccb0",
        "https://git.kernel.org/stable/c/7c8faa31080342aec4903c9acb20caf82fcca1ef",
        "https://git.kernel.org/stable/c/8ba438ef3cacc4808a63ed0ce24d4f0942cfe55d",
        "https://git.kernel.org/stable/c/f06cdd8d4ba5252986f51f80cc30263636397128",
        "https://lore.kernel.org/linux-cve-announce/2024030255-CVE-2023-52531-be21@gregkh/T/#u",
        "https://nvd.nist.gov/vuln/detail/CVE-2023-52531",
        "https://www.cve.org/CVERecord?id=CVE-2023-52531"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat",
        "vulnrichment"
      ]
    },
    "title": {
      "data": "wifi: iwlwifi: mvm: Fix a memory corruption issue",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T23:03:20.656000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-400"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-03-02T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nwifi: iwlwifi: mvm: Fix a memory corruption issue\nA few lines above, space is kzalloc()'ed for:\nsizeof(struct iwl_nvm_data) +\nsizeof(struct ieee80211_channel) +\nsizeof(struct ieee80211_rate)\n'mvm->nvm_data' is a 'struct iwl_nvm_data', so it is fine.\nAt the end of this structure, there is the 'channels' flex array.\nEach element is of type 'struct ieee80211_channel'.\nSo only 1 element is allocated in this array.\nWhen doing:\nmvm->nvm_data->bands[0].channels = mvm->nvm_data->channels;\nWe point at the first element of the 'channels' flex array.\nSo this is fine.\nHowever, when doing:\nmvm->nvm_data->bands[0].bitrates =\n(void *)((u8 *)mvm->nvm_data->channels + 1);\nbecause of the \"(u8 *)\" cast, we add only 1 to the address of the beginning\nof the flex array.\nIt is likely that we want point at the 'struct ieee80211_rate' allocated\njust after.\nRemove the spurious casting so that the pointer arithmetic works as\nexpected.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 6.0,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:H"
      },
      "threat_severity": "Low"
    },
    "redhat_repo_path": "2023/CVE-2023-52531.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024030255-CVE-2023-52531-be21@gregkh/T/#u",
      "https://nvd.nist.gov/vuln/detail/CVE-2023-52531",
      "https://www.cve.org/CVERecord?id=CVE-2023-52531"
    ],
    "title": "kernel: wifi: iwlwifi: mvm: Fix a memory corruption issue",
    "updated": "2024-03-02T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-400"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-03-02T21:52:35.664000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: Fix a memory corruption issue\n\nA few lines above, space is kzalloc()'ed for:\n\tsizeof(struct iwl_nvm_data) +\n\tsizeof(struct ieee80211_channel) +\n\tsizeof(struct ieee80211_rate)\n\n'mvm->nvm_data' is a 'struct iwl_nvm_data', so it is fine.\n\nAt the end of this structure, there is the 'channels' flex array.\nEach element is of type 'struct ieee80211_channel'.\nSo only 1 element is allocated in this array.\n\nWhen doing:\n  mvm->nvm_data->bands[0].channels = mvm->nvm_data->channels;\nWe point at the first element of the 'channels' flex array.\nSo this is fine.\n\nHowever, when doing:\n  mvm->nvm_data->bands[0].bitrates =\n\t\t\t(void *)((u8 *)mvm->nvm_data->channels + 1);\nbecause of the \"(u8 *)\" cast, we add only 1 to the address of the beginning\nof the flex array.\n\nIt is likely that we want point at the 'struct ieee80211_rate' allocated\njust after.\n\nRemove the spurious casting so that the pointer arithmetic works as\nexpected.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {}
    },
    "references": [
      "https://git.kernel.org/stable/c/6b3223449c959a8be94a1f042288059e40fcccb0",
      "https://git.kernel.org/stable/c/7c8faa31080342aec4903c9acb20caf82fcca1ef",
      "https://git.kernel.org/stable/c/8ba438ef3cacc4808a63ed0ce24d4f0942cfe55d",
      "https://git.kernel.org/stable/c/f06cdd8d4ba5252986f51f80cc30263636397128"
    ],
    "title": "wifi: iwlwifi: mvm: Fix a memory corruption issue",
    "updated": "2024-08-02T23:03:20.656000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2023/52xxx/CVE-2023-52531.json",
    "weaknesses": []
  }
}