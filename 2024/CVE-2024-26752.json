{
  "cve": "CVE-2024-26752",
  "mitre": {
    "cpes": [],
    "created": "2024-04-03T17:00:37.340000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nl2tp: pass correct message length to ip6_append_data\n\nl2tp_ip6_sendmsg needs to avoid accounting for the transport header\ntwice when splicing more data into an already partially-occupied skbuff.\n\nTo manage this, we check whether the skbuff contains data using\nskb_queue_empty when deciding how much data to append using\nip6_append_data.\n\nHowever, the code which performed the calculation was incorrect:\n\n     ulen = len + skb_queue_empty(&sk->sk_write_queue) ? transhdrlen : 0;\n\n...due to C operator precedence, this ends up setting ulen to\ntranshdrlen for messages with a non-zero length, which results in\ncorrupted packets on the wire.\n\nAdd parentheses to correct the calculation in line with the original\nintent.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "mitre_repo_path": "cves/2024/26xxx/CVE-2024-26752.json",
    "references": [
      "https://git.kernel.org/stable/c/0da15a70395182ee8cb75716baf00dddc0bea38d",
      "https://git.kernel.org/stable/c/13cd1daeea848614e585b2c6ecc11ca9c8ab2500",
      "https://git.kernel.org/stable/c/359e54a93ab43d32ee1bff3c2f9f10cb9f6b6e79",
      "https://git.kernel.org/stable/c/4c3ce64bc9d36ca9164dd6c77ff144c121011aae",
      "https://git.kernel.org/stable/c/804bd8650a3a2bf3432375f8c97d5049d845ce56",
      "https://git.kernel.org/stable/c/83340c66b498e49353530e41542500fc8a4782d6",
      "https://git.kernel.org/stable/c/c1d3a84a67db910ce28a871273c992c3d7f9efb5",
      "https://git.kernel.org/stable/c/dcb4d14268595065c85dc5528056713928e17243",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": "l2tp: pass correct message length to ip6_append_data",
    "updated": "2024-08-02T00:14:13.330000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "nvd": {
    "cpes": [],
    "created": "2024-04-03T17:15:51.910000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nl2tp: pass correct message length to ip6_append_data\n\nl2tp_ip6_sendmsg needs to avoid accounting for the transport header\ntwice when splicing more data into an already partially-occupied skbuff.\n\nTo manage this, we check whether the skbuff contains data using\nskb_queue_empty when deciding how much data to append using\nip6_append_data.\n\nHowever, the code which performed the calculation was incorrect:\n\n     ulen = len + skb_queue_empty(&sk->sk_write_queue) ? transhdrlen : 0;\n\n...due to C operator precedence, this ends up setting ulen to\ntranshdrlen for messages with a non-zero length, which results in\ncorrupted packets on the wire.\n\nAdd parentheses to correct the calculation in line with the original\nintent.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {}
    },
    "nvd_repo_path": "2024/CVE-2024-26752.json",
    "references": [
      "https://git.kernel.org/stable/c/0da15a70395182ee8cb75716baf00dddc0bea38d",
      "https://git.kernel.org/stable/c/13cd1daeea848614e585b2c6ecc11ca9c8ab2500",
      "https://git.kernel.org/stable/c/359e54a93ab43d32ee1bff3c2f9f10cb9f6b6e79",
      "https://git.kernel.org/stable/c/4c3ce64bc9d36ca9164dd6c77ff144c121011aae",
      "https://git.kernel.org/stable/c/804bd8650a3a2bf3432375f8c97d5049d845ce56",
      "https://git.kernel.org/stable/c/83340c66b498e49353530e41542500fc8a4782d6",
      "https://git.kernel.org/stable/c/c1d3a84a67db910ce28a871273c992c3d7f9efb5",
      "https://git.kernel.org/stable/c/dcb4d14268595065c85dc5528056713928e17243",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
      "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html"
    ],
    "title": null,
    "updated": "2024-06-27T12:15:20.473000+00:00",
    "vendors": [],
    "weaknesses": []
  },
  "opencve": {
    "changes": [],
    "cpes": {
      "data": [],
      "providers": []
    },
    "created": {
      "data": "2024-04-03T00:00:00+00:00",
      "provider": "redhat"
    },
    "description": {
      "data": "In the Linux kernel, the following vulnerability has been resolved:\n\nl2tp: pass correct message length to ip6_append_data\n\nl2tp_ip6_sendmsg needs to avoid accounting for the transport header\ntwice when splicing more data into an already partially-occupied skbuff.\n\nTo manage this, we check whether the skbuff contains data using\nskb_queue_empty when deciding how much data to append using\nip6_append_data.\n\nHowever, the code which performed the calculation was incorrect:\n\n     ulen = len + skb_queue_empty(&sk->sk_write_queue) ? transhdrlen : 0;\n\n...due to C operator precedence, this ends up setting ulen to\ntranshdrlen for messages with a non-zero length, which results in\ncorrupted packets on the wire.\n\nAdd parentheses to correct the calculation in line with the original\nintent.",
      "provider": "mitre"
    },
    "metrics": {
      "cvssV2_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_0": {
        "data": {},
        "provider": null
      },
      "cvssV3_1": {
        "data": {
          "score": 5.5,
          "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        },
        "provider": "redhat"
      },
      "cvssV4_0": {
        "data": {},
        "provider": null
      },
      "kev": {
        "data": {},
        "provider": null
      },
      "ssvc": {
        "data": {
          "options": {
            "Automatable": "no",
            "Exploitation": "none",
            "Technical Impact": "partial"
          },
          "version": "2.0.3"
        },
        "provider": "vulnrichment"
      },
      "threat_severity": {
        "data": "Moderate",
        "provider": "redhat"
      }
    },
    "references": {
      "data": [
        "https://git.kernel.org/stable/c/0da15a70395182ee8cb75716baf00dddc0bea38d",
        "https://git.kernel.org/stable/c/13cd1daeea848614e585b2c6ecc11ca9c8ab2500",
        "https://git.kernel.org/stable/c/359e54a93ab43d32ee1bff3c2f9f10cb9f6b6e79",
        "https://git.kernel.org/stable/c/4c3ce64bc9d36ca9164dd6c77ff144c121011aae",
        "https://git.kernel.org/stable/c/804bd8650a3a2bf3432375f8c97d5049d845ce56",
        "https://git.kernel.org/stable/c/83340c66b498e49353530e41542500fc8a4782d6",
        "https://git.kernel.org/stable/c/c1d3a84a67db910ce28a871273c992c3d7f9efb5",
        "https://git.kernel.org/stable/c/dcb4d14268595065c85dc5528056713928e17243",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html",
        "https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html",
        "https://lore.kernel.org/linux-cve-announce/2024040302-CVE-2024-26752-cb0a@gregkh/T",
        "https://nvd.nist.gov/vuln/detail/CVE-2024-26752",
        "https://www.cve.org/CVERecord?id=CVE-2024-26752"
      ],
      "providers": [
        "mitre",
        "nvd",
        "redhat"
      ]
    },
    "title": {
      "data": "l2tp: pass correct message length to ip6_append_data",
      "provider": "mitre"
    },
    "updated": {
      "data": "2024-08-02T00:14:13.330000+00:00",
      "provider": "mitre"
    },
    "vendors": {
      "data": [],
      "providers": []
    },
    "weaknesses": {
      "data": [
        "CWE-130"
      ],
      "providers": [
        "redhat"
      ]
    }
  },
  "redhat": {
    "cpes": [],
    "created": "2024-04-03T00:00:00+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\nl2tp: pass correct message length to ip6_append_data\nl2tp_ip6_sendmsg needs to avoid accounting for the transport header\ntwice when splicing more data into an already partially-occupied skbuff.\nTo manage this, we check whether the skbuff contains data using\nskb_queue_empty when deciding how much data to append using\nip6_append_data.\nHowever, the code which performed the calculation was incorrect:\nulen = len + skb_queue_empty(&sk->sk_write_queue) ? transhdrlen : 0;\n...due to C operator precedence, this ends up setting ulen to\ntranshdrlen for messages with a non-zero length, which results in\ncorrupted packets on the wire.\nAdd parentheses to correct the calculation in line with the original\nintent.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {
        "score": 5.5,
        "vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "threat_severity": "Moderate"
    },
    "redhat_repo_path": "2024/CVE-2024-26752.json",
    "references": [
      "https://lore.kernel.org/linux-cve-announce/2024040302-CVE-2024-26752-cb0a@gregkh/T",
      "https://nvd.nist.gov/vuln/detail/CVE-2024-26752",
      "https://www.cve.org/CVERecord?id=CVE-2024-26752"
    ],
    "title": "kernel: l2tp: pass correct message length to ip6_append_data",
    "updated": "2024-04-03T00:00:00+00:00",
    "vendors": [],
    "weaknesses": [
      "CWE-130"
    ]
  },
  "vulnrichment": {
    "cpes": [],
    "created": "2024-04-03T17:00:37.340000+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nl2tp: pass correct message length to ip6_append_data\n\nl2tp_ip6_sendmsg needs to avoid accounting for the transport header\ntwice when splicing more data into an already partially-occupied skbuff.\n\nTo manage this, we check whether the skbuff contains data using\nskb_queue_empty when deciding how much data to append using\nip6_append_data.\n\nHowever, the code which performed the calculation was incorrect:\n\n     ulen = len + skb_queue_empty(&sk->sk_write_queue) ? transhdrlen : 0;\n\n...due to C operator precedence, this ends up setting ulen to\ntranshdrlen for messages with a non-zero length, which results in\ncorrupted packets on the wire.\n\nAdd parentheses to correct the calculation in line with the original\nintent.",
    "metrics": {
      "cvssV2_0": {},
      "cvssV3_0": {},
      "cvssV3_1": {},
      "cvssV4_0": {},
      "kev": {},
      "ssvc": {
        "options": {
          "Automatable": "no",
          "Exploitation": "none",
          "Technical Impact": "partial"
        },
        "version": "2.0.3"
      }
    },
    "references": [],
    "title": "l2tp: pass correct message length to ip6_append_data",
    "updated": "2024-05-23T19:01:21.718000+00:00",
    "vendors": [],
    "vulnrichment_repo_path": "2024/26xxx/CVE-2024-26752.json",
    "weaknesses": []
  }
}